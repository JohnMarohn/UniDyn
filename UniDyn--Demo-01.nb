(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     64591,       1495]
NotebookOptionsPosition[     61479,       1395]
NotebookOutlinePosition[     61838,       1411]
CellTagsIndexPosition[     61795,       1408]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["UniDyn--Demo-01.nb", "Title",
 CellChangeTimes->{{3.6352690845273046`*^9, 3.635269100847275*^9}, {
  3.6609180081345453`*^9, 3.660918013241088*^9}}],

Cell["\<\
John A. Marohn
jam99@cornell.edu
Cornell University\
\>", "Text",
 CellChangeTimes->{{3.635269101985786*^9, 3.635269121580956*^9}},
 FontSize->18],

Cell[TextData[{
 StyleBox["Abstract:",
  FontWeight->"Bold"],
 "  This demonstration notebook loads the ",
 StyleBox["UniDyn",
  FontWeight->"Bold"],
 " package and executes the package\[CloseCurlyQuote]s unit tests."
}], "Text",
 CellChangeTimes->{{3.6352698622319117`*^9, 3.635269926908793*^9}, {
  3.6352701305950613`*^9, 3.635270138669529*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell["Set the path to the package", "Section",
 CellChangeTimes->{{3.635270036711257*^9, 3.63527004852262*^9}}],

Cell[TextData[{
 "Tell ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " the path to the directory containing the package.    \n\n",
 "EDIT THE FOLLOWING PATH STRING:"
}], "Text",
 CellChangeTimes->{{3.635270060901009*^9, 3.635270086988311*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "$PackagePath", " ", "=", 
    "\"\</Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/unidyn\>\"\
"}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.6349053527016897`*^9, 3.6349054064223843`*^9}, {
  3.634910931339162*^9, 3.634910931457775*^9}, {3.634914337947165*^9, 
  3.6349143671071568`*^9}, {3.634922597904743*^9, 3.634922606812076*^9}, {
  3.635268730835155*^9, 3.635268731125407*^9}, {3.635269951638358*^9, 
  3.635269958323474*^9}, {3.660918115324842*^9, 3.660918132325369*^9}, {
  3.660918590921587*^9, 3.660918600403768*^9}},
 FontSize->16],

Cell["YOU SHOULD NOT NEED TO EDIT ANYTHING FROM HERE ONWARDS.", "Text",
 CellChangeTimes->{{3.635270073196437*^9, 3.635270077357624*^9}},
 FontSize->16]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load the package", "Section",
 CellChangeTimes->{{3.635269129230983*^9, 3.63526913095236*^9}}],

Cell[TextData[{
 "Append the package path to the system path.  Before trying to load the \
package, ask ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to find it.  This is a test that we directed ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to the correct directory.  The output of this command should be the full \
system path to the UniDyn.m file.   "
}], "Text",
 CellChangeTimes->{{3.635269223597199*^9, 3.635269340159473*^9}, {
   3.635269947982662*^9, 3.6352699492517843`*^9}, {3.635269985297124*^9, 
   3.63527000724584*^9}, 3.635270066996499*^9, {3.63527010818321*^9, 
   3.6352701131658497`*^9}, {3.660918102499856*^9, 3.6609181035465183`*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Path", " ", "=", " ", 
   RowBox[{"AppendTo", "[", 
    RowBox[{"$Path", ",", "$PackagePath"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindFile", "[", "\"\<UniDyn`\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.634906393354924*^9, 3.634906398308229*^9}, {
  3.634922599063291*^9, 3.634922599752222*^9}, {3.635268728673848*^9, 
  3.6352687402094*^9}, {3.635269954012105*^9, 3.6352699550474253`*^9}},
 FontSize->16],

Cell[BoxData["\<\"/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
UniDyn/UniDyn.m\"\>"], "Output",
 CellChangeTimes->{3.661026457601413*^9, 3.661026565325828*^9, 
  3.661027134195952*^9, 3.6610292098580713`*^9}]
}, Open  ]],

Cell["\<\
Now that we are confident that the path is set correctlly, load the package.  \
Setting the global $VerboseLoad variable to True will print out the help \
strings for key commands in the package.  \
\>", "Text",
 CellChangeTimes->{{3.635269347360386*^9, 3.63526943190546*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$VerboseLoad", " ", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<UniDyn`\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.6349053867510777`*^9, 3.634905416481072*^9}, {
  3.63490767076449*^9, 3.6349076710452843`*^9}, {3.634907883893368*^9, 
  3.634907884645959*^9}, {3.634908145028349*^9, 3.634908169747654*^9}, {
  3.634908291290161*^9, 3.63490829242697*^9}, {3.634908346962665*^9, 
  3.634908347381027*^9}, {3.634908708773491*^9, 3.634908709549176*^9}, {
  3.634913586017125*^9, 3.634913590654319*^9}, {3.634914899633556*^9, 
  3.634914906473028*^9}, {3.634922029682571*^9, 3.634922033401874*^9}, {
  3.634922269936797*^9, 3.634922274006637*^9}, {3.634922311074657*^9, 
  3.634922363327815*^9}, {3.634944659078182*^9, 3.634944680820159*^9}, {
  3.634948512285396*^9, 3.634948515309455*^9}, {3.635074775893344*^9, 
  3.6350747767888603`*^9}, {3.635093794640894*^9, 3.6350937969058867`*^9}, {
  3.635095327382372*^9, 3.635095328040146*^9}, {3.635171740382801*^9, 
  3.635171740920933*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029209876685*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029209879653*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029209883071*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Needs", "::", "nocont"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Context \[NoBreak]\\!\\(\\\"NC`\\\"\\)\[NoBreak] was not \
created when Needs was evaluated. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Needs/nocont\\\", \
ButtonNote -> \\\"Needs::nocont\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66102645780271*^9, 3.661026565455398*^9, 
  3.6610271342951927`*^9, 3.661029209965816*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"NCMultiplication.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.6610292099689417`*^9}],

Cell[BoxData["\<\"NC1SetCommands.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029209971846*^9}],

Cell[BoxData["\<\"NCInverses.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029209976369*^9}],

Cell[BoxData["\<\"NCTransposes.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.66102920998151*^9}],

Cell[BoxData["\<\"NCAdjoints.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029209986044*^9}],

Cell[BoxData["\<\"NCCo.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.66102920999084*^9}],

Cell[BoxData["\<\"NCRoots.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.6610292099953203`*^9}],

Cell[BoxData["\<\"NC2SetCommands.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029209999816*^9}],

Cell[BoxData["\<\"NCCollect.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.6610292100043783`*^9}],

Cell[BoxData["\<\"NCSubstitute.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.6610292100145807`*^9}],

Cell[BoxData["\<\"NCMonomial.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.6610292100191936`*^9}],

Cell[BoxData["\<\"NCSolve.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029210023835*^9}],

Cell[BoxData["\<\"NCTools.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029210028521*^9}],

Cell[BoxData["\<\"NC2SimplifyRational.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.66102921003312*^9}],

Cell[BoxData["\<\"NC1SimplifyRational.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029210037807*^9}],

Cell[BoxData["\<\"NCSimplifyRational.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029210042593*^9}],

Cell[BoxData["\<\"NCComplex.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029210047249*^9}],

Cell[BoxData["\<\"NCMatMult.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029210148589*^9}],

Cell[BoxData["\<\"NCDiff.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.6610292101533823`*^9}],

Cell[BoxData["\<\"NCSchur.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.6610292101602697`*^9}],

Cell[BoxData["\<\"NCAlias.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029210169581*^9}],

Cell[BoxData["\<\"Grabs.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.6610292101781282`*^9}],

Cell[BoxData["\<\"NCTaylorCoeff.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029210183751*^9}],

Cell[BoxData["\<\"NCConvexity.m and NCGuts.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029210189247*^9}],

Cell[BoxData["\<\"NCRealizationFunctions.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.6610292101941233`*^9}],

Cell[BoxData["\<\"NCTeXForm.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029210199122*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"NCTeX::Using '\"\>", "\[InvisibleSpace]", "\<\"open\"\>", 
   "\[InvisibleSpace]", "\<\"' as PDFViewer.\"\>"}],
  SequenceForm["NCTeX::Using '", "open", "' as PDFViewer."],
  Editable->False]], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029210203953*^9}],

Cell[BoxData["\<\"NCTeX.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029210208742*^9}],

Cell[BoxData["\<\"NCMaster.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.6610292102133408`*^9}],

Cell[BoxData["\<\"NCOutput.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.661029210218095*^9}],

Cell["\<\
------------------------------------------------------------
NCAlgebra - Version 4.0.6
Compatible with Mathematica Version 9

Authors:
  J. William Helton*
  Mauricio de Oliveira* 
  Mark Stankus* 
  Robert L. Miller#

* Math Dept, UCSD                
# General Atomics Corp
  La  Jolla, CA 92093

Copyright: 
  Helton and Miller June 1991
  Helton 2002
  All rights reserved.

The program was written by the authors and by:
  David Hurst, Daniel Lamm, Orlando Merino, Robert Obar,
  Henry Pfister, Mike Walker, John Wavrik, Lois Yu,
  J. Camino, J. Griffin, J. Ovall, T. Shaheen, John Shopple. 
  The beginnings of the program come from eran@slac.
  Considerable recent help came from Igor Klep.


This program was written with support from 
  AFOSR, NSF, ONR, Lab for Math and Statistics at UCSD,
  UCSD Faculty Mentor Program,
  and US Department of Education.
  Primary support in 2010 is from the 
    NSF Division of Mathematical Sciences.

If you 
  (1) are a user, 
  (2) want to be a user, 
  (3) refer to NCAlgebra in a publication, or 
  (4) have had an interesting experience with NCAlgebra,
let us know by sending an e-mail message to  

  ncalg@math.ucsd.edu. 

We do not want to restrict access to NCAlgebra, but do 
  want to keep track of how it is being used.

For NCAlgebra updates see the web page:

  www.math.ucsd.edu/~ncalg 
------------------------------------------------------------\
\>", "Print",
 CellChangeTimes->{3.661026457730953*^9, 3.66102656536436*^9, 
  3.6610271342219753`*^9, 3.6610292102234497`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Needs", "::", "nocont"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Context \[NoBreak]\\!\\(\\\"NCAlgebra`\\\"\\)\[NoBreak] \
was not created when Needs was evaluated. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Needs/nocont\\\", ButtonNote -> \
\\\"Needs::nocont\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66102645780271*^9, 3.661026565455398*^9, 
  3.6610271342951927`*^9, 3.661029210227346*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CreateOperator", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"CreateOperator[] is used to batch-define a bunch of \
operators. Example: CreateOperator[{{Ix, Iy, Iz},{Sx,Sy,Sz}}] will create six \
operators;  each of the operators in the first list is meant to commute with \
each of the operators in the second list.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66102645780271*^9, 3.661026565455398*^9, 
  3.6610271342951927`*^9, 3.66102921022963*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CreateScalar", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"CreateScalar[list] is used to batch-define a bunch of \
scalars. The parameter list can be a single scalar or a list of scalars.  \
Example: CreateScalar[{w1,w2}].\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66102645780271*^9, 3.661026565455398*^9, 
  3.6610271342951927`*^9, 3.661029210231791*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NCSort", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NCSort[list] sorts the operators in list into canonical \
order.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66102645780271*^9, 3.661026565455398*^9, 
  3.6610271342951927`*^9, 3.6610292102338247`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SortedMult", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"SortedMult[list] returns Mult[list$ordered], where \
list$ordered are the elements of list sorted into canonical order.\"\>"}]], \
"Message", "MSG",
 CellChangeTimes->{3.66102645780271*^9, 3.661026565455398*^9, 
  3.6610271342951927`*^9, 3.661029210235743*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"MultSort", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"MultSort[NonCommutativeMultiplyt[list]] returns returns \
NonCommutativeMultiply[list$ordered], where list$ordered are the elements of \
list sorted into canonical order.  \"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66102645780271*^9, 3.661026565455398*^9, 
  3.6610271342951927`*^9, 3.6610292102376947`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Execute the units tests", "Section",
 CellChangeTimes->{{3.635269450321582*^9, 3.635269455866803*^9}}],

Cell["\<\
Included with the package are a number of files, ending in \
\[OpenCurlyDoubleQuote]-tests.m\[CloseCurlyDoubleQuote], that contain tests \
of the package\[CloseCurlyQuote]s functions -- so-called unit tests.  Set the \
working directory to the package directory and pretty-print the directory \
name.\
\>", "Text",
 CellChangeTimes->{{3.635269466546741*^9, 3.63526959787702*^9}, {
  3.6352696661918793`*^9, 3.6352697255432568`*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", "$PackagePath", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "$PackagePath", "}"}], "}"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", "\"\<Directory\>\"", "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.634944324488654*^9, 3.6349443603233624`*^9}, {
   3.6349444030097713`*^9, 3.63494440330383*^9}, {3.634944747308063*^9, 
   3.6349447481808853`*^9}, {3.634946064022402*^9, 3.634946069263152*^9}, {
   3.634946188079462*^9, 3.634946189912341*^9}, {3.6349479903618507`*^9, 
   3.6349480514686327`*^9}, {3.6349480899795113`*^9, 
   3.6349482285783367`*^9}, {3.634948408385352*^9, 3.634948452061852*^9}, {
   3.635269608570084*^9, 3.635269645220949*^9}, 3.635269728194304*^9},
 FontSize->16],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Directory\"\>",
       HoldForm]},
     {"\<\"/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/unidyn\"\
\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {None, {"Directory"}}]]]], "Output",\

 CellChangeTimes->{3.661026525438601*^9, 3.661026565728937*^9, 
  3.661027134609909*^9, 3.661029210276136*^9}]
}, Open  ]],

Cell["\<\
Get the names of all the unit-testing files included with the package \
(following my convention that the unit testing file end in \
\[OpenCurlyDoubleQuote]-tests.m\[CloseCurlyDoubleQuote]).   Pretty-print the \
names of the unit-test files included with the package.\
\>", "Text",
 CellChangeTimes->{
  3.6352696714534483`*^9, {3.6352697371205063`*^9, 3.6352697785313387`*^9}, {
   3.6352698393266697`*^9, 3.635269839517961*^9}, 3.6609243923593283`*^9},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fn", " ", "=", " ", 
   RowBox[{"FileNames", "[", "\"\<*-tests.m\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "fn", "}"}], "}"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", "\"\<Test files found\>\"", "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 FontSize->16],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Test files found\"\>",
       HoldForm]},
     {
      TagBox[GridBox[{
         {"\<\"Mult-tests.m\"\>"},
         {"\<\"OpCreate-tests.m\"\>"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {{
             Offset[0.2]}}, "RowsIndexed" -> {}}],
       Column]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {None, {"Test files found"}}]]]], "Output",
 CellChangeTimes->{3.661026525592215*^9, 3.661026565780879*^9, 
  3.661027134654727*^9, 3.6610292103099203`*^9}]
}, Open  ]],

Cell["Finally, carry out the unit tests and make a report.", "Text",
 CellChangeTimes->{{3.635269787557482*^9, 3.6352698056777897`*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tr", " ", "=", 
   RowBox[{"TestReport", " ", "/@", " ", "fn"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"tr", " ", "[", 
     RowBox[{"[", "k", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      RowBox[{"Length", "[", "tr", "]"}]}], "}"}]}], "]"}], "]"}]}], "Input",
 FontSize->16],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False->GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{12., {0., 12.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"],
                  ImageSizeCache->{16., {4., 8.}}],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Mult-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["17",
                   "SummaryItem"]}]}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
           GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"],
                 ImageSizeCache->{12., {0., 12.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"],
                  ImageSizeCache->{16., {4., 8.}}],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Mult-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["17",
                   "SummaryItem"]}]},
                {
                 RowBox[{
                  TagBox["\<\"Succeeded: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["17",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with wrong results: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with messages: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with errors: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
           Typeset`open$$],
           ImageSize->Automatic],
          BaselinePosition->Baseline],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: Mult-tests.m", "TimeElapsed" -> 
         Quantity[0.23, "Seconds"], "TestsSucceededCount" -> 17, 
         "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[2 -> TestResultObject[
             Association[
             "TestIndex" -> 2, "TestID" -> "OpQ > test01a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.1047575072713185, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008800000000008801, "Seconds"], "MemoryUsed" -> 
              Quantity[280, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestIndex" -> 3, "TestID" -> "OpQ > test02a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000083`2.0695930902080675, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008199999999991547, "Seconds"], "MemoryUsed" -> 
              Quantity[384, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestIndex" -> 4, "TestID" -> "OpQ > test02b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000078`2.0426096005224745, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007699999999988272, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestIndex" -> 5, "TestID" -> "OpQ > test03a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00008`2.0536049848239375, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000780000000000225, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestIndex" -> 6, "TestID" -> "OpQ > test03b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000089`2.0999050044769065, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009700000000023579, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestIndex" -> 7, "TestID" -> "OpQ > test04a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00008`2.0536049848239375, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000780000000000225, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestIndex" -> 8, "TestID" -> "OpQ > test04b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00008`2.0536049848239375, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000780000000000225, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestIndex" -> 9, "TestID" -> "OpQ > test05a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000082`2.0643288502157104, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008000000000008001, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestIndex" -> 10, "TestID" -> "OpQ > test06a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00008`2.0536049848239375, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007700000000010476, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestIndex" -> 11, "TestID" -> "OpQ > test06b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000081`2.0590000167106437, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007799999999980045, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestIndex" -> 12, "TestID" -> "OpQ > test07a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000079`2.048142089122435, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007699999999988272, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestIndex" -> 13, "TestID" -> "OpQ > test08a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.1047575072713185, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008799999999986596, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 14 -> TestResultObject[
             Association[
             "TestIndex" -> 14, "TestID" -> "OpQ > test08b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000082`2.0643288502157104, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000780000000000225, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 15 -> TestResultObject[
             Association[
             "TestIndex" -> 15, "TestID" -> "OpQ > test08b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000094`2.1236428514316925, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009200000000020303, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 16 -> TestResultObject[
             Association[
             "TestIndex" -> 16, "TestID" -> "OpQ > test08d", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000091`2.1095563901530876, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008999999999992347, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 17 -> TestResultObject[
             Association[
             "TestIndex" -> 17, "TestID" -> "OpQ > test09a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000082`2.0643288502157104, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000809999999997757, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 18 -> TestResultObject[
             Association[
             "TestIndex" -> 18, "TestID" -> "OpQ > test10a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000083`2.0695930902080675, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008100000000021979, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]]], 
         "TestsSucceededIndices" -> {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
          14, 15, 16, 17, 18}, "TestsFailedIndices" -> {}, 
         "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False->GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{12., {0., 12.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"],
                  ImageSizeCache->{16., {4., 8.}}],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: OpCreate-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["23",
                   "SummaryItem"]}]}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
           GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"],
                 ImageSizeCache->{12., {0., 12.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"],
                  ImageSizeCache->{16., {4., 8.}}],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: OpCreate-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["23",
                   "SummaryItem"]}]},
                {
                 RowBox[{
                  TagBox["\<\"Succeeded: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["23",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with wrong results: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with messages: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with errors: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
           Typeset`open$$],
           ImageSize->Automatic],
          BaselinePosition->Baseline],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: OpCreate-tests.m", "TimeElapsed" -> 
         Quantity[0.22, "Seconds"], "TestsSucceededCount" -> 23, 
         "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[2 -> TestResultObject[
             Association[
             "TestIndex" -> 2, "TestID" -> "OpCreate > test01a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000091`2.1095563901530876, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008799999999986596, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestIndex" -> 3, "TestID" -> "OpCreate > test01b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000078`2.0426096005224745, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007700000000010476, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestIndex" -> 4, "TestID" -> "OpCreate > test01c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000076`2.031328590112785, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007400000000012952, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestIndex" -> 5, "TestID" -> "OpCreate > test02a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000078`2.0426096005224745, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007599999999996498, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestIndex" -> 6, "TestID" -> "OpCreate > test02b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000079`2.048142089122435, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007700000000032681, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestIndex" -> 7, "TestID" -> "OpCreate > test02c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00008`2.0536049848239375, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000780000000000225, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestIndex" -> 8, "TestID" -> "OpCreate > test03a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000078`2.0426096005224745, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007799999999980045, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestIndex" -> 9, "TestID" -> "OpCreate > test03b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000079`2.048142089122435, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007699999999988272, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestIndex" -> 10, "TestID" -> "OpCreate > test03c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000079`2.048142089122435, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007700000000010476, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestIndex" -> 11, "TestID" -> "OpCreate > test04a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.1047575072713185, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008900000000022779, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestIndex" -> 12, "TestID" -> "OpCreate > test04b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.1047575072713185, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008800000000008801, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestIndex" -> 13, "TestID" -> "OpCreate > test04c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000079`2.048142089122435, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007700000000010476, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 14 -> TestResultObject[
             Association[
             "TestIndex" -> 14, "TestID" -> "OpCreate > test04d", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000077`2.037005723004476, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007600000000018703, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 15 -> TestResultObject[
             Association[
             "TestIndex" -> 15, "TestID" -> "OpCreate > test04e", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000078`2.0426096005224745, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007700000000010476, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 16 -> TestResultObject[
             Association[
             "TestIndex" -> 16, "TestID" -> "OpCreate > test04f", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000077`2.037005723004476, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007599999999974294, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 17 -> TestResultObject[
             Association[
             "TestIndex" -> 17, "TestID" -> "OpCreate > test04g", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000078`2.0426096005224745, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007699999999988272, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 18 -> TestResultObject[
             Association[
             "TestIndex" -> 18, "TestID" -> "OpCreate > test04h", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000079`2.048142089122435, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007700000000010476, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 19 -> TestResultObject[
             Association[
             "TestIndex" -> 19, "TestID" -> "OpCreate > test05a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000085`2.079933923546286, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008299999999983321, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 20 -> TestResultObject[
             Association[
             "TestIndex" -> 20, "TestID" -> "OpCreate > test05b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000078`2.0426096005224745, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007600000000018703, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 21 -> TestResultObject[
             Association[
             "TestIndex" -> 21, "TestID" -> "OpCreate > test05c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000078`2.0426096005224745, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007500000000004725, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 22 -> TestResultObject[
             Association[
             "TestIndex" -> 22, "TestID" -> "OpCreate > test05d", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000079`2.048142089122435, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007800000000024454, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 23 -> TestResultObject[
             Association[
             "TestIndex" -> 23, "TestID" -> "OpCreate > test06a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00008`2.0536049848239375, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007800000000024454, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 24 -> TestResultObject[
             Association[
             "TestIndex" -> 24, "TestID" -> "OpCreate > test06b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000081`2.0590000167106437, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007900000000016227, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]]], 
         "TestsSucceededIndices" -> {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
          14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}, 
         "TestsFailedIndices" -> {}, "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6610265263250303`*^9, 3.661026566446727*^9, 
  3.661027135337186*^9, 3.661029210955714*^9}]
}, Open  ]]
}, Open  ]],

Cell["Test some code here", "Section",
 CellChangeTimes->{{3.660924415106453*^9, 3.660924421262374*^9}}]
}, Open  ]]
},
WindowSize->{808, 756},
WindowMargins->{{Automatic, 242}, {44, Automatic}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 154, 2, 92, "Title"],
Cell[737, 26, 156, 6, 83, "Text"],
Cell[896, 34, 363, 10, 59, "Text"],
Cell[CellGroupData[{
Cell[1284, 48, 111, 1, 64, "Section"],
Cell[1398, 51, 265, 8, 77, "Text"],
Cell[1666, 61, 608, 13, 54, "Input"],
Cell[2277, 76, 152, 2, 33, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2466, 83, 100, 1, 64, "Section"],
Cell[2569, 86, 686, 15, 107, "Text"],
Cell[CellGroupData[{
Cell[3280, 105, 463, 10, 53, "Input"],
Cell[3746, 117, 223, 3, 28, "Output"]
}, Open  ]],
Cell[3984, 123, 301, 6, 83, "Text"],
Cell[CellGroupData[{
Cell[4310, 133, 1066, 17, 53, "Input"],
Cell[CellGroupData[{
Cell[5401, 154, 205, 3, 22, "Print"],
Cell[5609, 159, 314, 7, 22, "Print"],
Cell[5926, 168, 435, 9, 22, "Print"]
}, Open  ]],
Cell[6376, 180, 542, 11, 24, "Message"],
Cell[CellGroupData[{
Cell[6943, 195, 173, 2, 22, "Print"],
Cell[7119, 199, 169, 2, 21, "Print"],
Cell[7291, 203, 165, 2, 21, "Print"],
Cell[7459, 207, 166, 2, 22, "Print"],
Cell[7628, 211, 165, 2, 22, "Print"],
Cell[7796, 215, 158, 2, 21, "Print"],
Cell[7957, 219, 164, 2, 21, "Print"],
Cell[8124, 223, 169, 2, 21, "Print"],
Cell[8296, 227, 166, 2, 21, "Print"],
Cell[8465, 231, 169, 2, 21, "Print"],
Cell[8637, 235, 167, 2, 21, "Print"],
Cell[8807, 239, 162, 2, 21, "Print"],
Cell[8972, 243, 162, 2, 21, "Print"],
Cell[9137, 247, 173, 2, 22, "Print"],
Cell[9313, 251, 174, 2, 22, "Print"],
Cell[9490, 255, 173, 2, 22, "Print"],
Cell[9666, 259, 164, 2, 22, "Print"],
Cell[9833, 263, 164, 2, 21, "Print"],
Cell[10000, 267, 163, 2, 21, "Print"],
Cell[10166, 271, 164, 2, 21, "Print"],
Cell[10333, 275, 162, 2, 21, "Print"],
Cell[10498, 279, 162, 2, 21, "Print"],
Cell[10663, 283, 168, 2, 22, "Print"],
Cell[10834, 287, 179, 2, 22, "Print"],
Cell[11016, 291, 179, 2, 21, "Print"],
Cell[11198, 295, 164, 2, 21, "Print"],
Cell[11365, 299, 363, 7, 22, "Print"],
Cell[11731, 308, 160, 2, 21, "Print"],
Cell[11894, 312, 165, 2, 21, "Print"],
Cell[12062, 316, 163, 2, 22, "Print"],
Cell[12228, 320, 1548, 53, 707, "Print"]
}, Open  ]],
Cell[13791, 376, 549, 11, 24, "Message"],
Cell[14343, 389, 521, 10, 56, "Message"],
Cell[14867, 401, 429, 9, 42, "Message"],
Cell[15299, 412, 326, 8, 24, "Message"],
Cell[15628, 422, 385, 9, 39, "Message"],
Cell[16016, 433, 436, 9, 39, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16501, 448, 108, 1, 64, "Section"],
Cell[16612, 451, 457, 9, 83, "Text"],
Cell[CellGroupData[{
Cell[17094, 464, 892, 19, 53, "Input"],
Cell[17989, 485, 1010, 27, 47, "Output"]
}, Open  ]],
Cell[19014, 515, 479, 9, 83, "Text"],
Cell[CellGroupData[{
Cell[19518, 528, 436, 14, 53, "Input"],
Cell[19957, 544, 1474, 39, 63, "Output"]
}, Open  ]],
Cell[21446, 586, 151, 2, 35, "Text"],
Cell[CellGroupData[{
Cell[21622, 592, 418, 13, 53, "Input"],
Cell[22043, 607, 39289, 780, 115, "Output"]
}, Open  ]]
}, Open  ]],
Cell[61359, 1391, 104, 1, 64, "Section"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
