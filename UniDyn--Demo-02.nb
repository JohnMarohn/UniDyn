(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    240709,       4993]
NotebookOptionsPosition[    234722,       4804]
NotebookOutlinePosition[    235080,       4820]
CellTagsIndexPosition[    235037,       4817]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["UniDyn--Demo-02.nb", "Title",
 CellChangeTimes->{{3.6352690845273046`*^9, 3.635269100847275*^9}, {
  3.6609180081345453`*^9, 3.660918013241088*^9}, {3.661433595181979*^9, 
  3.661433595493599*^9}}],

Cell["\<\
John A. Marohn
jam99@cornell.edu
Cornell University\
\>", "Text",
 CellChangeTimes->{{3.635269101985786*^9, 3.635269121580956*^9}},
 FontSize->18],

Cell[TextData[{
 StyleBox["Abstract:",
  FontWeight->"Bold"],
 "  Use the ",
 StyleBox["UniDyn",
  FontWeight->"Bold"],
 " Evolver function to calculate the evolution of the magnetization of a \
single spin 1/2 particle under off-resonance, variable-phase irradiation.  \
Plot the evolving magnetization for various combinations of resonance offest \
and irradiation phase."
}], "Text",
 CellChangeTimes->{{3.6352698622319117`*^9, 3.635269926908793*^9}, {
  3.6352701305950613`*^9, 3.635270138669529*^9}, {3.6614336154747458`*^9, 
  3.661433666560676*^9}, {3.661433776071369*^9, 3.6614337761699266`*^9}, {
  3.6614620415959*^9, 3.66146210493357*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell["Set the path to the package", "Section",
 CellChangeTimes->{{3.635270036711257*^9, 3.63527004852262*^9}}],

Cell[TextData[{
 "Tell ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " the path to the directory containing the package.    \n\nEDIT THE \
FOLLOWING PATH STRING:"
}], "Text",
 CellChangeTimes->{{3.635270060901009*^9, 3.635270086988311*^9}, {
  3.6610825274488792`*^9, 3.6610825288209763`*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "$PackagePath", " ", "=", 
    "\"\</Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/unidyn\>\"\
"}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.6349053527016897`*^9, 3.6349054064223843`*^9}, {
  3.634910931339162*^9, 3.634910931457775*^9}, {3.634914337947165*^9, 
  3.6349143671071568`*^9}, {3.634922597904743*^9, 3.634922606812076*^9}, {
  3.635268730835155*^9, 3.635268731125407*^9}, {3.635269951638358*^9, 
  3.635269958323474*^9}, {3.660918115324842*^9, 3.660918132325369*^9}, {
  3.660918590921587*^9, 3.660918600403768*^9}},
 FontSize->16],

Cell["YOU SHOULD NOT NEED TO EDIT ANYTHING FROM HERE ONWARDS.", "Text",
 CellChangeTimes->{{3.635270073196437*^9, 3.635270077357624*^9}},
 FontSize->16]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load the package", "Section",
 CellChangeTimes->{{3.635269129230983*^9, 3.63526913095236*^9}}],

Cell[TextData[{
 "Append the package path to the system path.  Before trying to load the \
package, ask ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to find it.  This is a test that we directed ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to the correct directory.  The output of this command should be the full \
system path to the UniDyn.m file.   "
}], "Text",
 CellChangeTimes->{{3.635269223597199*^9, 3.635269340159473*^9}, {
   3.635269947982662*^9, 3.6352699492517843`*^9}, {3.635269985297124*^9, 
   3.63527000724584*^9}, 3.635270066996499*^9, {3.63527010818321*^9, 
   3.6352701131658497`*^9}, {3.660918102499856*^9, 3.6609181035465183`*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Path", " ", "=", " ", 
   RowBox[{"AppendTo", "[", 
    RowBox[{"$Path", ",", "$PackagePath"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindFile", "[", "\"\<UniDyn`\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.634906393354924*^9, 3.634906398308229*^9}, {
  3.634922599063291*^9, 3.634922599752222*^9}, {3.635268728673848*^9, 
  3.6352687402094*^9}, {3.635269954012105*^9, 3.6352699550474253`*^9}},
 FontSize->16],

Cell[BoxData["\<\"/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
UniDyn/UniDyn.m\"\>"], "Output",
 CellChangeTimes->{3.6614395574918413`*^9, 3.6614396580238953`*^9, 
  3.6614412236682367`*^9, 3.6614416049705687`*^9, 3.661459971584806*^9, 
  3.661460641196282*^9, 3.66146212408635*^9, 3.661540501296219*^9}]
}, Open  ]],

Cell["\<\
Now that we are confident that the path is set correctlly, load the package.  \
Setting the global $VerboseLoad variable to True will print out the help \
strings for key commands in the package.  \
\>", "Text",
 CellChangeTimes->{{3.635269347360386*^9, 3.63526943190546*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$VerboseLoad", " ", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<UniDyn`\>\"", "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQfYUjQpVD9LXjxxR+TRC9peyGEyeQ/lH0EExXTKuJ
BdGbVk8B0zYvFOpA9Ik35o0gmsEzcwKI3ruyF0yrn4ubDqITDHPAdMGBGUdA
9K1JG8G0V4+DGg+Q1vtwBUyLu5WcAtE8yv6nQfT861tdBUDm3NFxA9F2v/Ym
g+h4M4cUED09+VEGiC6rzcoH0RUNSUHSQHqfnVQoiP6uyGkiC6T5nmeCabdp
f25FAekIO8nbINqkKUQlBUiz/Z0DplNs3jwG0Q88GJ+A6Bf2PcZdQNqjYi6Y
XnQt//l3t9eOqzNZX4DoFiF11h9A+sM0WzCtqnCwYKH7a8c9B1ULQTQAyl6Q
EA==
  "],
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501333885*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501339291*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.66154050134566*^9}],

Cell[BoxData["\<\"NCMultiplication.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501351879*^9}],

Cell[BoxData["\<\"NC1SetCommands.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501357986*^9}],

Cell[BoxData["\<\"NCInverses.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501363467*^9}],

Cell[BoxData["\<\"NCTransposes.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501367799*^9}],

Cell[BoxData["\<\"NCAdjoints.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405013721724`*^9}],

Cell[BoxData["\<\"NCCo.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405013780003`*^9}],

Cell[BoxData["\<\"NCRoots.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501384078*^9}],

Cell[BoxData["\<\"NC2SetCommands.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405013900337`*^9}],

Cell[BoxData["\<\"NCCollect.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501394412*^9}],

Cell[BoxData["\<\"NCSubstitute.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405013986998`*^9}],

Cell[BoxData["\<\"NCMonomial.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501402937*^9}],

Cell[BoxData["\<\"NCSolve.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405014071083`*^9}],

Cell[BoxData["\<\"NCTools.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501411433*^9}],

Cell[BoxData["\<\"NC2SimplifyRational.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405014156113`*^9}],

Cell[BoxData["\<\"NC1SimplifyRational.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405014197807`*^9}],

Cell[BoxData["\<\"NCSimplifyRational.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405014240923`*^9}],

Cell[BoxData["\<\"NCComplex.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501428315*^9}],

Cell[BoxData["\<\"NCMatMult.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501509675*^9}],

Cell[BoxData["\<\"NCDiff.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405015138197`*^9}],

Cell[BoxData["\<\"NCSchur.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501517003*^9}],

Cell[BoxData["\<\"NCAlias.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501520215*^9}],

Cell[BoxData["\<\"Grabs.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405015234118`*^9}],

Cell[BoxData["\<\"NCTaylorCoeff.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501526556*^9}],

Cell[BoxData["\<\"NCConvexity.m and NCGuts.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501529728*^9}],

Cell[BoxData["\<\"NCRealizationFunctions.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405015333233`*^9}],

Cell[BoxData["\<\"NCTeXForm.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405015374727`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"NCTeX::Using '\"\>", "\[InvisibleSpace]", "\<\"open\"\>", 
   "\[InvisibleSpace]", "\<\"' as PDFViewer.\"\>"}],
  SequenceForm["NCTeX::Using '", "open", "' as PDFViewer."],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405015611486`*^9}],

Cell[BoxData["\<\"NCTeX.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501564597*^9}],

Cell[BoxData["\<\"NCMaster.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.66154050156776*^9}],

Cell[BoxData["\<\"NCOutput.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501570923*^9}],

Cell["\<\
------------------------------------------------------------
NCAlgebra - Version 4.0.6
Compatible with Mathematica Version 9

Authors:
  J. William Helton*
  Mauricio de Oliveira* 
  Mark Stankus* 
  Robert L. Miller#

* Math Dept, UCSD                
# General Atomics Corp
  La  Jolla, CA 92093

Copyright: 
  Helton and Miller June 1991
  Helton 2002
  All rights reserved.

The program was written by the authors and by:
  David Hurst, Daniel Lamm, Orlando Merino, Robert Obar,
  Henry Pfister, Mike Walker, John Wavrik, Lois Yu,
  J. Camino, J. Griffin, J. Ovall, T. Shaheen, John Shopple. 
  The beginnings of the program come from eran@slac.
  Considerable recent help came from Igor Klep.


This program was written with support from 
  AFOSR, NSF, ONR, Lab for Math and Statistics at UCSD,
  UCSD Faculty Mentor Program,
  and US Department of Education.
  Primary support in 2010 is from the 
    NSF Division of Mathematical Sciences.

If you 
  (1) are a user, 
  (2) want to be a user, 
  (3) refer to NCAlgebra in a publication, or 
  (4) have had an interesting experience with NCAlgebra,
let us know by sending an e-mail message to  

  ncalg@math.ucsd.edu. 

We do not want to restrict access to NCAlgebra, but do 
  want to keep track of how it is being used.

For NCAlgebra updates see the web page:

  www.math.ucsd.edu/~ncalg 
------------------------------------------------------------\
\>", "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501576453*^9}],

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405015792027`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405015820103`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501584834*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501587654*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CreateOperator", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"CreateOperator[] is used to batch-define a bunch of \
operators. Example: CreateOperator[{{Ix, Iy, Iz},{Sx,Sy,Sz}}] will create six \
operators;  each of the operators in the first list is meant to commute with \
each of the operators in the second list.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661439557790968*^9, 3.661439658440359*^9, 
  3.661441223958006*^9, 3.661441605334827*^9, 3.661459971910454*^9, 
  3.661460641464985*^9, 3.661462124375621*^9, 3.661540501590858*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CreateScalar", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"CreateScalar[list] is used to batch-define a bunch of \
scalars. The parameter list can be a single scalar or a list of scalars.  \
Example: CreateScalar[{w1,w2}].\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661439557790968*^9, 3.661439658440359*^9, 
  3.661441223958006*^9, 3.661441605334827*^9, 3.661459971910454*^9, 
  3.661460641464985*^9, 3.661462124375621*^9, 3.661540501594223*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501596242*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501598057*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405016008244`*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405016035957`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NCSort", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NCSort[list] sorts the operators in list into canonical \
order.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661439557790968*^9, 3.661439658440359*^9, 
  3.661441223958006*^9, 3.661441605334827*^9, 3.661459971910454*^9, 
  3.661460641464985*^9, 3.661462124375621*^9, 3.6615405016073637`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SortedMult", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"SortedMult[list] returns Mult[list$ordered], where \
list$ordered are the elements of list sorted into canonical order.\"\>"}]], \
"Message", "MSG",
 CellChangeTimes->{3.661439557790968*^9, 3.661439658440359*^9, 
  3.661441223958006*^9, 3.661441605334827*^9, 3.661459971910454*^9, 
  3.661460641464985*^9, 3.661462124375621*^9, 3.66154050160937*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"MultSort", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"MultSort[NonCommutativeMultiplyt[list]] returns returns \
NonCommutativeMultiply[list$ordered], where list$ordered are the elements of \
list sorted into canonical order.  \"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661439557790968*^9, 3.661439658440359*^9, 
  3.661441223958006*^9, 3.661441605334827*^9, 3.661459971910454*^9, 
  3.661460641464985*^9, 3.661462124375621*^9, 3.661540501611287*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501613165*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501614993*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501617749*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501620493*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Comm", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Comm[a,b] calculates the commutator of two \
operators.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661439557790968*^9, 3.661439658440359*^9, 
  3.661441223958006*^9, 3.661441605334827*^9, 3.661459971910454*^9, 
  3.661460641464985*^9, 3.661462124375621*^9, 3.661540501623294*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501625168*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501626951*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405016297293`*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501632471*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SpinSingle$CreateOperators", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"SpinSingle$CreateOperators[Ix,Iy,Iz,L] creates Ix, Iy, and \
Iz angular momentum operators and defines their commutation relations.  When \
the total angular momentum L = 1/2, additional rules are defined to simplify \
products of the angular momentum operators.  When the total angular momentum \
L is unspecified, no such simplification rules are defined.\"\>"}]], "Message",\
 "MSG",
 CellChangeTimes->{3.661439557790968*^9, 3.661439658440359*^9, 
  3.661441223958006*^9, 3.661441605334827*^9, 3.661459971910454*^9, 
  3.661460641464985*^9, 3.661462124375621*^9, 3.661540501635396*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501637919*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405016397676`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501643014*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405016463413`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OscSingle$CreateOperators", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"OscSingle$CreateOperators[aL,aR] creates a raising \
operator aR and a lowering operator aL for single harmonic oscillator and \
defines the operator commutation relations.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661439557790968*^9, 3.661439658440359*^9, 
  3.661441223958006*^9, 3.661441605334827*^9, 3.661459971910454*^9, 
  3.661460641464985*^9, 3.661462124375621*^9, 3.6615405016492243`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.6615405016512537`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501653097*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501655961*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.6614395575159388`*^9, 3.661439658191596*^9, 
  3.6614412237184343`*^9, 3.6614416050124187`*^9, 3.661459971602405*^9, 
  3.6614606412348022`*^9, 3.6614621241205177`*^9, 3.661540501658815*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Evolve", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Evolve[H,t,\[Rho]] represents unitary evolution of the \
density operator \[Rho] for a time t under the Hamiltonian H.  This function \
expands according to simplification rules but leaves the evolution \
unevaluated.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661439557790968*^9, 3.661439658440359*^9, 
  3.661441223958006*^9, 3.661441605334827*^9, 3.661459971910454*^9, 
  3.661460641464985*^9, 3.661462124375621*^9, 3.661540501661645*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Evolver", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Evolver[H,t,\[Rho](0)] calculates \[Rho](t) = Exp[-I H t] \
\[Rho](0) Exp[+I H t], assuming that H is time independent, according to the \
commutation rules followed by \[Rho](0) and H.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661439557790968*^9, 3.661439658440359*^9, 
  3.661441223958006*^9, 3.661441605334827*^9, 3.661459971910454*^9, 
  3.661460641464985*^9, 3.661462124375621*^9, 3.6615405016637077`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Function to help draw the magneziation", "Section",
 CellChangeTimes->{{3.661456120234693*^9, 3.661456137146701*^9}, {
  3.661461808207046*^9, 3.661461808530703*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "my$drawing", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"my$drawing", ",", "HoldAll"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"my$drawing", "[", 
   RowBox[{
    RowBox[{"func_", "[", 
     RowBox[{"t_", ",", "a___"}], "]"}], ",", " ", "t$final_", ",", " ", 
    "N$step_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Rho]$vector$data", ",", "\[Rho]$arrows", ",", "axes$arrows", ",", " ",
       "big$plot"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Calculate", " ", "a", " ", "final", " ", "time", " ", "and", " ", "a", 
      " ", "time", " ", "step"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "The", " ", "final", " ", "time", " ", "point", " ", "should", " ", 
      "not", " ", "be", " ", "included", " ", "in", " ", "the", " ", "plot"}],
      " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"T$max", " ", "=", " ", 
      RowBox[{"t$final", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"N$step", "-", "1"}], ")"}], "/", "N$step"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"T$step", " ", "=", " ", 
      RowBox[{"t$final", "/", "N$step"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Make", " ", "a", " ", "table", " ", "of", " ", "data", " ", "of", " ", 
       "the", " ", "form"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.", ",", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "0.", ",", "1."}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", 
          RowBox[{"{", 
           RowBox[{"0.", ",", 
            RowBox[{"-", "0.9"}], ",", 
            RowBox[{"-", "0.5"}]}], "}"}]}], "}"}]}], " "}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]$vector$data", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"t", "/", "T$max"}], "]"}], ",", 
          RowBox[{"N", "[", 
           RowBox[{"func", "[", 
            RowBox[{"t", ",", "a"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "T$max", ",", "T$step"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Add", " ", "arrows"}], ";", " ", 
       RowBox[{
       "the", " ", "arrows", " ", "grow", " ", "from", " ", "light", " ", 
        "to", " ", "dark", " ", "as", " ", "time", " ", "progresses", " ", 
        "in", " ", "the", " ", "plot"}]}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Rho]$arrows", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Graphics3D", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"GrayLevel", "[", 
            RowBox[{"1.0", "-", 
             RowBox[{"N", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Arrowheads", "[", "0.015", "]"}], ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"Tube", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
            "}"}]}], "}"}], "]"}], "&"}], "/@", "\[Rho]$vector$data"}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Add", " ", "axes", " ", 
       RowBox[{"arrows", ".", "  ", "Here"}], " ", "we", " ", "make", " ", 
       "the", " ", "assumption", " ", "that", " ", "the", " ", 
       "magnetization", " ", "vector"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", "  ", 
      RowBox[{"has", " ", "a", " ", "magnitude", " ", "of", " ", "1."}], " ", 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"axes$arrows", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Graphics3D", "[", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"Arrow", "[", 
            RowBox[{"Tube", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#"}], "}"}], 
             "]"}], "]"}]}], "}"}], "]"}], "&"}], " ", "/@", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1.25"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1.25", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.25", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", 
           RowBox[{"-", "1.25"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1.25"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.25"}], ",", "0", ",", "0"}], "}"}]}], "}"}]}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"big$plot", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Append", "[", 
        RowBox[{"\[Rho]$arrows", ",", "axes$arrows"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Add", " ", "axes", " ", 
       RowBox[{"labels", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"big$plot", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Append", "[", 
        RowBox[{"big$plot", ",", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"z", ",", "Large"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1.35"}], "}"}]}], "]"}], "]"}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"big$plot", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Append", "[", 
        RowBox[{"big$plot", ",", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"y", ",", "Large"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1.35", ",", "0"}], "}"}]}], "]"}], "]"}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"big$plot", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Append", "[", 
        RowBox[{"big$plot", ",", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"x", ",", "Large"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.35", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Plot", " ", "all", " ", "the", " ", 
       RowBox[{"arrows", ".", "  ", "The"}], " ", "neutral", " ", "lighting", 
       " ", "helps", " ", "making", " ", "the", " ", "rendering", " ", 
       RowBox[{"fast", " ", "--"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", "  ", 
      RowBox[{
       RowBox[{
       "the", " ", "default", " ", "Mathematica", " ", "camera", " ", "has", 
        " ", "three"}], "-", 
       RowBox[{
       "colored", " ", "lights", " ", "which", " ", "makes", " ", "funny", 
        " ", "reflections"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", "  ", 
      RowBox[{
      "of", " ", "off", " ", "small", " ", "objects", " ", "like", " ", "our",
        " ", 
       RowBox[{"arrows", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"big$plot", ",", 
       RowBox[{"Boxed", "\[Rule]", " ", "False"}], ",", " ", 
       RowBox[{"ViewVertical", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], ",", 
       RowBox[{"ViewPoint", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"2.0", ",", 
          RowBox[{"-", "1.0"}], ",", "1.0"}], "}"}]}], ",", 
       RowBox[{"Lighting", "\[Rule]", " ", "\"\<Neutral\>\""}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzlkowwEABvBZsbkKkXKTKyIUORdWm4RQm6OIMUeZ6wEJseTYwzLkmHLk
HEOuaEmhbNay8CKWxEIJI8zRsO//8PV7+L6Hz5NTlcklk0gkL2Pgfepbu5T5
kKCrk3dCmsehEA6I2ntgI0s+CO3V3ePQ5qNyDh5tMiTQJT3/DCZXu53DRNWx
FoY/h93BqcdVPSwu7f2Evok0A9S+jFgvGi18urKFFHNlIFT+VYTAj/DLCLht
MhkDv8VpsbCpVU6H2WW3TNgf7Z0GT2J1eUQ/ts2BAa/cEhjpYOBBVQu5AY5K
1oeJXdQFoewzZwbuBNfMQsG7zTLkMRwJxSt0NXxhUk7h777mC6rd236I/xt6
yyWjQu2BFXS4kTlDp2axK8weSwqAB1RZKPTetIgjzNLQYO3WFAM+LhQwoWHy
OgWyPeIyYFFGAwteUZLYkLWbkguDNHtc2NVSz4OmAkYl9NlR8aH/uq4Drk0P
i+CQwLcPSjylP3BposIAr/nldstGzRR8QsW8wg9SpQ/x8B8YrB4O
  "],
 FontSize->16]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples of unitary evolution in a spin 1/2 system", "Section",
 CellChangeTimes->{{3.6614338330758963`*^9, 3.661433850988009*^9}, {
  3.6614339433230333`*^9, 3.661433947755453*^9}}],

Cell[CellGroupData[{

Cell["Create a single spin", "Subsection",
 CellChangeTimes->{{3.661433931683024*^9, 3.661433953976736*^9}}],

Cell[TextData[{
 "The assumptions define below are required for ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to recognize ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox[
     RowBox[{"\[Dash]", 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "-", 
       SuperscriptBox["\[Omega]", "2"]}]}]], "=", " ", 
    RowBox[{"I", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->14],
 " inside an exponential.   One of the variables has to be define to be > 0 \
and not just \[GreaterSlantEqual] 0."
}], "Text",
 CellChangeTimes->{{3.661454934610312*^9, 3.661455077339642*^9}, {
  3.661455120999338*^9, 3.6614551250107203`*^9}, {3.66145516298409*^9, 
  3.661455238939184*^9}, {3.6614552751916943`*^9, 3.6614553005499*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"\[CapitalDelta]", ",", "                     ", 
    RowBox[{"(*", " ", 
     RowBox[{"Resonance", " ", "offset", " ", "frequency"}], " ", "*)"}], 
    "\[IndentingNewLine]", "\[Omega]", ",", "                     ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Rabi", " ", "frequency", " ", "of", " ", "the", " ", "applied", " ", 
      "irradiation"}], " ", "*)"}], "\[IndentingNewLine]", "\[Phi]", ",", 
    "                     ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Phase", " ", "of", " ", "the", " ", "applied", " ", "irradiation"}], 
     " ", "*)"}], "\[IndentingNewLine]", "Ix", ",", " ", "Iy", ",", " ", "Iz",
     ",", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"Spin", " ", "angular", " ", "momentum", " ", "operators"}], " ",
      "*)"}], "\[IndentingNewLine]", "\[Rho]", ",", "                      ", 
    
    RowBox[{"(*", " ", 
     RowBox[{"Spin", " ", "density", " ", "operator"}], " ", "*)"}], " ", 
    "\[IndentingNewLine]", "\[Rho]$0", ",", "                  ", 
    RowBox[{"(*", " ", 
     RowBox[{"Initial", " ", "spin", " ", "density", " ", "operator"}], " ", 
     "*)"}], "\[IndentingNewLine]", "H"}], "                          ", 
   RowBox[{"(*", " ", 
    RowBox[{"Spin", " ", "Hamiltonian"}], " ", "*)"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"\[CapitalDelta]", ",", "\[Omega]", ",", "\[Phi]"}], " ", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SpinSingle$CreateOperators", "[", 
    RowBox[{"Ix", ",", " ", "Iy", ",", " ", "Iz", ",", " ", 
     RowBox[{"L", "=", 
      RowBox[{"1", "/", "2"}]}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"\[CapitalDelta]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[CapitalDelta]", " ", "\[GreaterSlantEqual]", " ", "0"}], ",", 
     " ", 
     RowBox[{"Element", "[", 
      RowBox[{"\[Omega]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[Omega]", "  ", ">", " ", "0"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6614339585492563`*^9, 3.661434010703532*^9}, {
   3.661434214867899*^9, 3.661434222437502*^9}, {3.661434384868638*^9, 
   3.6614346039604807`*^9}, {3.6614346490398808`*^9, 3.661434789890903*^9}, {
   3.661435094092959*^9, 3.661435125986967*^9}, {3.6614352184576807`*^9, 
   3.661435260920999*^9}, 3.661454979504386*^9, {3.6614550830373096`*^9, 
   3.6614550896485147`*^9}, {3.661455140167131*^9, 3.66145514338946*^9}, {
   3.6614552141564493`*^9, 3.661455268214559*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SpinSingle$CreateOperators", "::", "create"}], "MessageName"], 
  RowBox[{":", " "}], "\<\"Creating spin operators.\"\>"}]], "Message", "MSG",
 
 CellChangeTimes->{
  3.661439558073163*^9, 3.6614396710431547`*^9, 3.661441224252407*^9, 
   3.6614416056752863`*^9, 3.6614551442601643`*^9, 3.661455221301177*^9, 
   3.661455269930846*^9, {3.661455305158642*^9, 3.661455308147059*^9}, {
   3.661455790996602*^9, 3.661455808970603*^9}, 3.661459972151178*^9, 
   3.661460641723474*^9, 3.661462124717436*^9, 3.6615405019266*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SpinSingle$CreateOperators", "::", "comm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Adding spin commutations relations.\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.661439558073163*^9, 3.6614396710431547`*^9, 3.661441224252407*^9, 
   3.6614416056752863`*^9, 3.6614551442601643`*^9, 3.661455221301177*^9, 
   3.661455269930846*^9, {3.661455305158642*^9, 3.661455308147059*^9}, {
   3.661455790996602*^9, 3.661455808970603*^9}, 3.661459972151178*^9, 
   3.661460641723474*^9, 3.661462124717436*^9, 3.661540502048449*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SpinSingle$CreateOperators", "::", "simplify"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Angular momentum L = 1/2. Adding operator simplification \
rules.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.661439558073163*^9, 3.6614396710431547`*^9, 3.661441224252407*^9, 
   3.6614416056752863`*^9, 3.6614551442601643`*^9, 3.661455221301177*^9, 
   3.661455269930846*^9, {3.661455305158642*^9, 3.661455308147059*^9}, {
   3.661455790996602*^9, 3.661455808970603*^9}, 3.661459972151178*^9, 
   3.661460641723474*^9, 3.661462124717436*^9, 3.66154050218756*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Off-resonance variable-phase nutation", "Subsection",
 CellChangeTimes->{{3.661433867714074*^9, 3.661433876857678*^9}},
 FontSize->18],

Cell[TextData[{
 "Irradiation Hamilonian written in the interaction representation.  The \
intial density operator is parallel to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "z"], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.66145534764102*^9, 3.661455424815099*^9}},
 FontSize->18],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", " ", "Iz"}], " ", "+", " ", 
    RowBox[{"\[Omega]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", "Ix"}], " ", "+", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", "Iy"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]$0", " ", "=", " ", "Iz"}], ";"}]}], "Input",
 CellChangeTimes->{{3.661435227848398*^9, 3.6614352284068127`*^9}},
 FontSize->18],

Cell["\<\
Calculating the time-dependent denstity operator might take as long as 10 to \
15 seconds to complete.  \
\>", "Text",
 CellChangeTimes->{{3.6614351443358517`*^9, 3.661435173054531*^9}, {
  3.6614549233087606`*^9, 3.661454923410828*^9}, {3.66145543210454*^9, 
  3.661455456329935*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]", " ", "[", 
     RowBox[{
     "t_", ",", "\[CapitalDelta]_", ",", " ", "\[Omega]_", ",", "\[Phi]_"}], 
     "]"}], "=", " ", 
    RowBox[{"Collect", "[", " ", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Evolver", "[", 
           RowBox[{"H", ",", " ", "t", ",", " ", "\[Rho]$0"}], "]"}], "//", 
          "Simplify"}], "//", " ", "ExpToTrig"}], " ", "//", " ", 
        "FullSimplify"}], ")"}], ",", " ", "\[IndentingNewLine]", "\t", 
      RowBox[{"{", 
       RowBox[{"Ix", ",", "Iy", ",", " ", "Iz"}], "}"}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "[", 
   RowBox[{"t", ",", "\[CapitalDelta]", ",", " ", "\[Omega]", ",", "\[Phi]"}],
    "]"}], " ", "/.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", "->", " ", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Omega]", ",", "0"}], "]"}]}], ",", " ", 
    RowBox[{"\[Omega]", " ", "->", " ", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Omega]", ",", "1"}], "]"}]}]}], 
   "}"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6614340197481413`*^9, 3.661434178968038*^9}, {
   3.661434272954471*^9, 3.661434333128969*^9}, {3.661434640514575*^9, 
   3.661434643212017*^9}, {3.661434786650895*^9, 3.661434809637779*^9}, {
   3.661435106977956*^9, 3.661435116198124*^9}, {3.6614351828003273`*^9, 
   3.661435197915441*^9}, 3.661455661961378*^9, {3.6614557085212173`*^9, 
   3.6614557978065453`*^9}, {3.661455834919834*^9, 3.6614558778332987`*^9}},
 FontSize->18],

Cell[BoxData[
 RowBox[{
  RowBox[{"Iz", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["\[Omega]", "0", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "1", "2"]}]]}], "]"}]}], ")"}], 
       " ", 
       SubsuperscriptBox["\[Omega]", "1", "2"]}], 
      RowBox[{
       SubsuperscriptBox["\[Omega]", "0", "2"], "+", 
       SubsuperscriptBox["\[Omega]", "1", "2"]}]]}], ")"}]}], "+", 
  RowBox[{"Iy", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "0", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "1", "2"]}]]}], "]"}]}], ")"}], 
        " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
        SubscriptBox["\[Omega]", "0"], " ", 
        SubscriptBox["\[Omega]", "1"]}], 
       RowBox[{
        SubsuperscriptBox["\[Omega]", "0", "2"], "+", 
        SubsuperscriptBox["\[Omega]", "1", "2"]}]]}], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", " ", 
         SqrtBox[
          RowBox[{
           SubsuperscriptBox["\[Omega]", "0", "2"], "+", 
           SubsuperscriptBox["\[Omega]", "1", "2"]}]]}], "]"}], " ", 
       SubscriptBox["\[Omega]", "1"]}], 
      SqrtBox[
       RowBox[{
        SubsuperscriptBox["\[Omega]", "0", "2"], "+", 
        SubsuperscriptBox["\[Omega]", "1", "2"]}]]]}], ")"}]}], "+", 
  RowBox[{"Ix", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["\[Omega]", "0", "2"], "+", 
              SubsuperscriptBox["\[Omega]", "1", "2"]}]]}], "]"}]}], ")"}], 
        " ", 
        SubscriptBox["\[Omega]", "0"], " ", 
        SubscriptBox["\[Omega]", "1"]}], 
       RowBox[{
        SubsuperscriptBox["\[Omega]", "0", "2"], "+", 
        SubsuperscriptBox["\[Omega]", "1", "2"]}]]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", " ", 
         SqrtBox[
          RowBox[{
           SubsuperscriptBox["\[Omega]", "0", "2"], "+", 
           SubsuperscriptBox["\[Omega]", "1", "2"]}]]}], "]"}], " ", 
       SubscriptBox["\[Omega]", "1"]}], 
      SqrtBox[
       RowBox[{
        SubsuperscriptBox["\[Omega]", "0", "2"], "+", 
        SubsuperscriptBox["\[Omega]", "1", "2"]}]]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.661455873634028*^9, 3.661455889449592*^9}, 
   3.661459983014784*^9, 3.661460651970139*^9, 3.66146213544132*^9, 
   3.661540512710565*^9},
 FontSize->18]
}, Open  ]],

Cell[TextData[{
 " Below we want a function that returns a triple of numbers descibing the \
magnetization vector.  We turn the above expression for the density operator \
into a triple of numbers using the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function Coefficient.  I tried using the NCAlgebra\[CloseCurlyQuote]s \
NCCoefficient function but could not get it to work.  The function below does \
what we want."
}], "Text",
 CellChangeTimes->{{3.661456225990507*^9, 3.66145635020822*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"\[Rho]$vector", "[", 
    RowBox[{
    "t_", ",", "\[CapitalDelta]_", ",", " ", "\[Omega]_", ",", "\[Phi]_"}], 
    "]"}], " ", "=", " ", 
   RowBox[{"Simplify", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{
        RowBox[{"\[Rho]", "[", 
         RowBox[{
         "t", ",", "\[CapitalDelta]", ",", " ", "\[Omega]", ",", "\[Phi]"}], 
         "]"}], ",", "#", ",", "1"}], "]"}], "&"}], " ", "/@", " ", 
     RowBox[{"{", 
      RowBox[{"Ix", " ", ",", "Iy", ",", "Iz"}], "}"}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.6614561412281027`*^9, 3.6614561982630243`*^9}},
 FontSize->18],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[CapitalDelta]", " ", "\[Omega]", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[CapitalDelta]", "2"], "+", 
             SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]}], "+", 
    FractionBox[
     RowBox[{"\[Omega]", " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[CapitalDelta]", " ", "\[Omega]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[CapitalDelta]", "2"], "+", 
             SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]}], "-", 
    FractionBox[
     RowBox[{"\[Omega]", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]]}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[CapitalDelta]", "2"], "+", 
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}]}], 
    RowBox[{
     SuperscriptBox["\[CapitalDelta]", "2"], "+", 
     SuperscriptBox["\[Omega]", "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.661456171542654*^9, 3.661456200209844*^9}, 
   3.661459983646854*^9, 3.661460652598259*^9, 3.661462136091309*^9, 
   3.661540513305591*^9},
 FontSize->18]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check limiting cases", "Subsection",
 CellChangeTimes->{{3.6614350013632603`*^9, 3.661435010998869*^9}}],

Cell["\<\
On resonance, the effective field is in the x-y plane.  The z magnetization \
will oscillate cosinusoidally while the magnetization in the x-y plane will \
oscillate sinusoidally.\
\>", "Text",
 CellChangeTimes->{{3.661445141236219*^9, 3.6614452239058037`*^9}, {
  3.661445259226839*^9, 3.6614452766541243`*^9}, {3.661454738110759*^9, 
  3.6614547399929447`*^9}, {3.661454771642885*^9, 3.6614547726337423`*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", 
    RowBox[{"t", ",", "0", ",", " ", "\[Omega]", ",", "\[Phi]"}], "]"}], " ", 
   "//", " ", "PowerExpand"}], " ", "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.66143488240217*^9, 3.661434967708303*^9}, {
  3.661445228335499*^9, 3.6614452460563383`*^9}, {3.6614559115613832`*^9, 
  3.661455913330413*^9}},
 FontSize->18],

Cell[BoxData[
 RowBox[{
  RowBox[{"Iz", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"t", " ", "\[Omega]"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "Iy"}], " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
     RowBox[{"Ix", " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"t", " ", "\[Omega]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.6614396818889103`*^9, 3.661441235326889*^9, 3.661441617561254*^9, {
   3.6614452265377493`*^9, 3.66144524687296*^9}, 3.661455914200923*^9, 
   3.661459983772884*^9, 3.661460652718165*^9, 3.661462136250639*^9, 
   3.6615405134395313`*^9},
 FontSize->18]
}, Open  ]],

Cell["\<\
Apply a \[Pi] pulse.  Observe that the magnetization is indeed inverted.\
\>", "Text",
 CellChangeTimes->{{3.6614453092819777`*^9, 3.66144535098521*^9}, {
  3.661454779672694*^9, 3.661454786158607*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]", "[", " ", 
   RowBox[{
    RowBox[{"\[Pi]", "/", "\[Omega]"}], ",", "0", ",", " ", "\[Omega]", ",", 
    "0"}], "]"}], " ", "//", " ", "PowerExpand"}]], "Input",
 CellChangeTimes->{{3.661445022077269*^9, 3.661445075882185*^9}, {
  3.6614451120833187`*^9, 3.661445122595236*^9}, {3.661455920740048*^9, 
  3.661455944740162*^9}},
 FontSize->18],

Cell[BoxData[
 RowBox[{"-", "Iz"}]], "Output",
 CellChangeTimes->{
  3.6614450426907043`*^9, 3.661445077758573*^9, {3.661445115019292*^9, 
   3.661445123115179*^9}, {3.661455940760996*^9, 3.6614559451463623`*^9}, 
   3.661459983799182*^9, 3.661460652730291*^9, 3.661462136290819*^9, 
   3.661540513485901*^9},
 FontSize->18]
}, Open  ]],

Cell["\<\
Now apply a \[Pi]/2 pulse.  Appying an \[OpenCurlyDoubleQuote]x\
\[CloseCurlyDoubleQuote] pulse, one with a relative phase of \[Phi]=0, places \
the magnetization along the -y axis.  A \[OpenCurlyDoubleQuote]y\
\[CloseCurlyDoubleQuote] pulse, one with a relative phase of \[Phi] = \
\[Pi]/2, places the magnetization along the +x axis.\
\>", "Text",
 CellChangeTimes->{{3.661454789358259*^9, 3.661454880990548*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]", "[", 
     RowBox[{
      RowBox[{"\[Pi]", "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "\[Omega]"}], ")"}]}], ",", "0", ",", " ", 
      "\[Omega]", ",", "#"}], "]"}], "&"}], " ", "/@", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], " ", "//", " ", 
  "PowerExpand"}]], "Input",
 CellChangeTimes->{{3.661455950795164*^9, 3.6614560706602993`*^9}},
 FontSize->18],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "Iy"}], ",", "Ix"}], "}"}]], "Output",
 CellChangeTimes->{{3.661456061742614*^9, 3.66145607122155*^9}, 
   3.6614599838196898`*^9, 3.661460652742753*^9, 3.661462136341237*^9, 
   3.661540513519189*^9},
 FontSize->18]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Draw the magnetization", "Subsection",
 CellChangeTimes->{{3.661458528049267*^9, 3.661458532459564*^9}}],

Cell[TextData[{
 "Set the rf phase to \[Phi] = 0,  set the Rabi frequency to \[Omega] = 1, \
and set the resonance offest to \[CapitalDelta] = 2.  The effective field has \
a magnitude of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox[
     RowBox[{
      SuperscriptBox["2", "2"], "+", 
      SuperscriptBox["1", "2"]}]], "=", " ", 
    SqrtBox["5"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", so we\[CloseCurlyQuote]ll watch the magnetization out to a time of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    RowBox[{"\[Pi]", " ", "/", 
     SqrtBox["5"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " in order to capture the magnetization orbiting once around the effective \
field."
}], "Text",
 CellChangeTimes->{{3.661462346470071*^9, 3.661462499410248*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"my$drawing", "[", 
    RowBox[{
     RowBox[{"\[Rho]$vector", "[", 
      RowBox[{"t", ",", "2", ",", " ", "1", ",", "0"}], "]"}], ",", 
     FractionBox[
      RowBox[{"2", "\[Pi]"}], 
      SqrtBox["5"]], " ", ",", " ", "36"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.661462193294182*^9, 3.66146224993227*^9}, {
  3.661462307266276*^9, 3.661462310232806*^9}, {3.661540782826396*^9, 
  3.661540790387157*^9}},
 FontSize->16],

Cell[BoxData[
 Graphics3DBox[{
   {GrayLevel[1.], 
    {Arrowheads[0.015], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.}}}]]}}, 
   {GrayLevel[0.9714285714285714], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
      0.006076898795116793, -0.0776578258864434, 0.9969615506024416}}}]]}}, 
   {GrayLevel[0.9428571428571428], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
      0.02412295168563663, -0.15295605803008325`, 0.9879385241571819}}}]]}}, 
   {GrayLevel[0.9142857142857143], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
      0.05358983848622456, -0.22360679774997896`, 0.9732050807568877}}}]]}}, 
   {GrayLevel[0.8857142857142857], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
      0.0935822227524088, -0.2874633580707408, 0.9532088886237956}}}]]}}, 
   {GrayLevel[0.8571428571428572], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
      0.1428849561253843, -0.34258548972000114`, 0.928557521937308}}}]]}}, 
   {GrayLevel[0.8285714285714285], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
      0.19999999999999996`, -0.38729833462074165`, 0.9}}}]]}}, 
   {GrayLevel[0.8], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
      0.26319194266973245`, -0.42024331560644457`, 
      0.8684040286651338}}}]]}}, 
   {GrayLevel[0.7714285714285715], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
      0.3305407289332278, -0.4404194161008241, 0.8347296355333862}}}]]}}, 
   {GrayLevel[0.7428571428571429], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
      0.3999999999999999, -0.4472135954999579, 0.8}}}]]}}, 
   {GrayLevel[0.7142857142857143], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
      0.46945927106677215`, -0.4404194161008241, 0.7652703644666139}}}]]}}, 
   {GrayLevel[0.6857142857142857], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
      0.5368080573302675, -0.4202433156064446, 0.7315959713348663}}}]]}}, 
   {GrayLevel[0.657142857142857], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.6, -0.3872983346207417, 
      0.7000000000000001}}}]]}}, 
   {GrayLevel[0.6285714285714286], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
      0.6571150438746156, -0.3425854897200013, 0.6714424780626923}}}]]}}, 
   {GrayLevel[0.6000000000000001], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
      0.7064177772475912, -0.2874633580707409, 0.6467911113762045}}}]]}}, 
   {GrayLevel[0.5714285714285714], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
      0.7464101615137755, -0.22360679774997896`, 0.6267949192431124}}}]]}}, 
   {GrayLevel[0.5428571428571428], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
      0.7758770483143634, -0.15295605803008333`, 0.6120614758428183}}}]]}}, 
   {GrayLevel[0.5142857142857142], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
      0.7939231012048833, -0.07765782588644339, 0.6030384493975585}}}]]}}, 
   {GrayLevel[0.48571428571428565`], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.8, -5.476786982642026*^-17, 
      0.6000000000000001}}}]]}}, 
   {GrayLevel[0.4571428571428571], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.7939231012048833, 
      0.07765782588644347, 0.6030384493975585}}}]]}}, 
   {GrayLevel[0.4285714285714286], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.7758770483143634, 
      0.15295605803008325`, 0.6120614758428183}}}]]}}, 
   {GrayLevel[0.3999999999999999], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.7464101615137756, 
      0.22360679774997885`, 0.6267949192431123}}}]]}}, 
   {GrayLevel[0.37142857142857133`], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.7064177772475912, 
      0.2874633580707408, 0.6467911113762045}}}]]}}, 
   {GrayLevel[0.34285714285714275`], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.6571150438746158, 
      0.34258548972000114`, 0.6714424780626921}}}]]}}, 
   {GrayLevel[0.31428571428571417`], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.6000000000000002, 
      0.38729833462074154`, 0.7}}}]]}}, 
   {GrayLevel[0.2857142857142857], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.5368080573302675, 
      0.4202433156064446, 0.7315959713348663}}}]]}}, 
   {GrayLevel[0.257142857142857], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.46945927106677215`, 
      0.4404194161008241, 0.7652703644666139}}}]]}}, 
   {GrayLevel[0.22857142857142843`], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.40000000000000013`, 
      0.4472135954999579, 0.8}}}]]}}, 
   {GrayLevel[0.19999999999999984`], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.33054072893322767`, 
      0.4404194161008241, 0.8347296355333862}}}]]}}, 
   {GrayLevel[0.17142857142857137`], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.2631919426697324, 
      0.42024331560644457`, 0.8684040286651339}}}]]}}, 
   {GrayLevel[0.1428571428571429], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.2, 0.3872983346207417, 
      0.9}}}]]}}, 
   {GrayLevel[0.11428571428571421`], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.1428849561253843, 
      0.3425854897200012, 0.928557521937308}}}]]}}, 
   {GrayLevel[0.08571428571428563], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.09358222275240889, 
      0.28746335807074097`, 0.9532088886237956}}}]]}}, 
   {GrayLevel[0.05714285714285705], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.05358983848622448, 
      0.22360679774997883`, 0.9732050807568879}}}]]}}, 
   {GrayLevel[0.02857142857142847], 
    {Arrowheads[0.015], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.02412295168563663, 
      0.1529560580300832, 0.9879385241571819}}}]]}}, 
   {GrayLevel[0.], 
    StyleBox[
     {Arrowheads[0.015], 
      Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.006076898795116793, 
       0.0776578258864434, 0.9969615506024416}}}]]},
     FontColor->GrayLevel[0.]]}, 
   {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.25}}}]]}, 
   {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1.25, 0.}}}]]}, 
   {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1.25, 0., 0.}}}]]}, 
   {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., -1.25}}}]]}, 
   {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -1.25, 0.}}}]]}, 
   {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-1.25, 0., 0.}}}]]}, 
   Text3DBox[
    StyleBox["z",
     StripOnInput->False,
     FontSize->Large], {0, 0, 1.35}], Text3DBox[
    StyleBox["y",
     StripOnInput->False,
     FontSize->Large], {0, 1.35, 0}], Text3DBox[
    StyleBox["x",
     StripOnInput->False,
     FontSize->Large], {1.35, 0, 0}]},
  Boxed->False,
  ImageSize->Full,
  Lighting->"Neutral",
  ViewPoint->{2., -1., 1.},
  ViewVertical->{0, 0, 1}]], "Output",
 CellChangeTimes->{
  3.661462321941595*^9, 3.661540519136393*^9, {3.6615407799028797`*^9, 
   3.661540790870556*^9}}]
}, Open  ]],

Cell["\<\
Set the rf phase to \[Phi] = 0, set the Rabi frequency to \[Omega] = 1, and \
look at magnetization out to times equal to \[Pi]/2.  Vary the resonance \
offset and plot the magnezation. \
\>", "Text",
 CellChangeTimes->{{3.661461161171054*^9, 3.661461323175413*^9}, {
  3.661461367913107*^9, 3.661461369017161*^9}, {3.6614625161410723`*^9, 
  3.661462539093068*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"GraphicsGrid", " ", "@@", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"my$drawing", "[", 
         RowBox[{
          RowBox[{"\[Rho]$vector", "[", 
           RowBox[{"t", ",", "#", ",", " ", "1", ",", "0"}], "]"}], ",", 
          RowBox[{"\[Pi]", "/", "2"}], ",", " ", "18"}], "]"}], "}"}], "&"}], 
      " ", "\[IndentingNewLine]", "/@", " ", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "1.", ",", "2.", ",", "3."}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.661458588798538*^9, 3.6614586115330048`*^9}, {
   3.66145869490186*^9, 3.6614586959315653`*^9}, {3.661458753453403*^9, 
   3.6614587742943687`*^9}, {3.6614588320579653`*^9, 
   3.6614588559055033`*^9}, {3.661458970940702*^9, 3.6614589795445957`*^9}, {
   3.661459149537085*^9, 3.661459149598215*^9}, {3.661459327692335*^9, 
   3.661459329264583*^9}, {3.661459478162506*^9, 3.661459480710063*^9}, {
   3.661459771728294*^9, 3.661459786310679*^9}, {3.6614598268972797`*^9, 
   3.6614598312304792`*^9}, {3.6614600007656393`*^9, 3.6614600010010643`*^9}, 
   3.6614600604054737`*^9, {3.661460541372858*^9, 3.661460541685663*^9}, {
   3.661460863084551*^9, 3.661460996693246*^9}, {3.661461036241066*^9, 
   3.6614611032299643`*^9}, {3.661461489360958*^9, 3.66146151236849*^9}, 
   3.661461568373617*^9},
 FontSize->18],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     Graphics3DBox[{
       {GrayLevel[1.], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.}}}]]}}, 
       {GrayLevel[0.9411764705882353], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.08715574274765817, 
          0.9961946980917455}}}]]}}, 
       {GrayLevel[0.8823529411764706], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.17364817766693033`, 
          0.984807753012208}}}]]}}, 
       {GrayLevel[0.8235294117647058], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.25881904510252074`, 
          0.9659258262890683}}}]]}}, 
       {GrayLevel[0.7647058823529411], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.3420201433256687, 
          0.9396926207859084}}}]]}}, 
       {GrayLevel[0.7058823529411764], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.42261826174069944`, 
          0.9063077870366499}}}]]}}, 
       {GrayLevel[0.6470588235294117], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.49999999999999994`, 
          0.8660254037844387}}}]]}}, 
       {GrayLevel[0.5882352941176471], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.573576436351046, 
          0.8191520442889918}}}]]}}, 
       {GrayLevel[0.5294117647058824], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.6427876096865393, 
          0.766044443118978}}}]]}}, 
       {GrayLevel[0.47058823529411764`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.7071067811865475, 
          0.7071067811865476}}}]]}}, 
       {GrayLevel[0.4117647058823529], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.766044443118978, 
          0.6427876096865394}}}]]}}, 
       {GrayLevel[0.3529411764705882], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.8191520442889918, 
          0.5735764363510462}}}]]}}, 
       {GrayLevel[0.2941176470588235], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.8660254037844386, 
          0.5000000000000001}}}]]}}, 
       {GrayLevel[0.23529411764705888`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.9063077870366499, 
          0.42261826174069944`}}}]]}}, 
       {GrayLevel[0.17647058823529416`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.9396926207859083, 
          0.3420201433256688}}}]]}}, 
       {GrayLevel[0.11764705882352944`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.9659258262890683, 
          0.25881904510252074`}}}]]}}, 
       {GrayLevel[0.05882352941176472], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.984807753012208, 
          0.17364817766693041`}}}]]}}, 
       {GrayLevel[0.], 
        StyleBox[
         {Arrowheads[0.015], 
          Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.9961946980917455, 
           0.08715574274765836}}}]]},
         FontColor->GrayLevel[0.]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.25}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1.25, 0.}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1.25, 0., 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., -1.25}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -1.25, 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-1.25, 0., 0.}}}]]},
        Text3DBox[
        StyleBox["z",
         StripOnInput->False,
         FontSize->Large], {0, 0, 1.35}], Text3DBox[
        StyleBox["y",
         StripOnInput->False,
         FontSize->Large], {0, 1.35, 0}], Text3DBox[
        StyleBox["x",
         StripOnInput->False,
         FontSize->Large], {1.35, 0, 0}]},
      Boxed->False,
      Lighting->"Neutral",
      ViewPoint->{2., -1., 1.},
      ViewVertical->{0, 0, 1}], {189., -194.4}, ImageScaled[{0.5, 0.5}], {360., 360.00000000000006`},
     
     ContentSelectable->True], InsetBox[
     Graphics3DBox[{
       {GrayLevel[1.], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.}}}]]}}, 
       {GrayLevel[0.9411764705882353], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.0038028872954971593`, -0.08704510719982957, 
          0.9961971127045028}}}]]}}, 
       {GrayLevel[0.8823529411764706], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.015153701374859663`, -0.17276612347043746`, 
          0.9848462986251403}}}]]}}, 
       {GrayLevel[0.8235294117647058], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.03387977877146359, -0.25585909935689327`, 
          0.9661202212285365}}}]]}}, 
       {GrayLevel[0.7647058823529411], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.059696266838004886`, -0.33506006196982235`, 
          0.9403037331619951}}}]]}}, 
       {GrayLevel[0.7058823529411764], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.0922104567965531, -0.4091642419711774, 
          0.9077895432034468}}}]]}}, 
       {GrayLevel[0.6470588235294117], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.13092775744744117`, -0.47704439998227666`, 
          0.8690722425525588}}}]]}}, 
       {GrayLevel[0.5882352941176471], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.17525921866762445`, -0.5376679736410533, 
          0.8247407813323755}}}]]}}, 
       {GrayLevel[0.5294117647058824], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.22453049025444238`, -0.5901127844752088, 
          0.7754695097455576}}}]]}}, 
       {GrayLevel[0.47058823529411764`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.27799207983689334`, -0.6335810656653995, 
          0.7220079201631067}}}]]}}, 
       {GrayLevel[0.4117647058823529], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.3348307538156965, -0.6674115973144442, 
          0.6651692461843035}}}]]}}, 
       {GrayLevel[0.3529411764705882], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.39418190790618407`, -0.6910897646263106, 0.605818092093816}}}]]}}, 
       {GrayLevel[0.2941176470588235], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.4551427191089008, -0.7042553859943947, 
          0.5448572808910992}}}]]}}, 
       {GrayLevel[0.23529411764705888`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.516785879046063, -0.7067081919217449, 0.483214120953937}}}]]}}, 
       {GrayLevel[0.17647058823529416`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.5781736997585529, -0.6984108714303631, 
          0.42182630024144707`}}}]]}}, 
       {GrayLevel[0.11764705882352944`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.6383723773924276, -0.6794896396189828, 
          0.3616276226075724}}}]]}}, 
       {GrayLevel[0.05882352941176472], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.6964661968021686, -0.6502323177358866, 
          0.3035338031978314}}}]]}}, 
       {GrayLevel[0.], 
        StyleBox[
         {Arrowheads[0.015], 
          Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
           0.7515714609966554, -0.6110839549718324, 0.2484285390033446}}}]]},
         FontColor->GrayLevel[0.]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.25}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1.25, 0.}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1.25, 0., 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., -1.25}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -1.25, 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-1.25, 0., 0.}}}]]},
        Text3DBox[
        StyleBox["z",
         StripOnInput->False,
         FontSize->Large], {0, 0, 1.35}], Text3DBox[
        StyleBox["y",
         StripOnInput->False,
         FontSize->Large], {0, 1.35, 0}], Text3DBox[
        StyleBox["x",
         StripOnInput->False,
         FontSize->Large], {1.35, 0, 0}]},
      Boxed->False,
      Lighting->"Neutral",
      ViewPoint->{2., -1., 1.},
      ViewVertical->{0, 0, 1}], {189., -583.2}, ImageScaled[{0.5, 0.5}], {360., 360.00000000000006`},
     
     ContentSelectable->True], InsetBox[
     Graphics3DBox[{
       {GrayLevel[1.], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.}}}]]}}, 
       {GrayLevel[0.9411764705882353], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.00759130162031223, -0.08671370592327965, 
          0.9962043491898438}}}]]}}, 
       {GrayLevel[0.8823529411764706], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.03007706717979608, -0.17013606236516596`, 
          0.9849614664101021}}}]]}}, 
       {GrayLevel[0.8235294117647058], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.06660381553582329, -0.24710064797752113`, 
          0.9666980922320884}}}]]}}, 
       {GrayLevel[0.7647058823529411], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.11578511886849455`, -0.3146861558430165, 
          0.9421074405657528}}}]]}}, 
       {GrayLevel[0.7058823529411764], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.17575422663941806`, -0.37032727608480737`, 
          0.912122886680291}}}]]}}, 
       {GrayLevel[0.6470588235294117], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.2442349209236433, -0.41191206607165615`, 
          0.8778825395381784}}}]]}}, 
       {GrayLevel[0.5882352941176471], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.31862791369377064`, -0.43786211238552536`, 
          0.8406860431531147}}}]]}}, 
       {GrayLevel[0.5294117647058824], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.39610950671702116`, -0.4471924418832667, 
          0.8019452466414894}}}]]}}, 
       {GrayLevel[0.47058823529411764`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.4737387692800863, -0.43954890783770895`, 0.763130615359957}}}]]}}, 
       {GrayLevel[0.4117647058823529], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.5485691656495727, -0.4152216321107769, 
          0.7257154171752137}}}]]}}, 
       {GrayLevel[0.3529411764705882], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.6177603952794388, -0.3751339931406886, 
          0.6911198023602806}}}]]}}, 
       {GrayLevel[0.2941176470588235], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.6786862007016817, -0.320807577720785, 0.6606568996491592}}}]]}}, 
       {GrayLevel[0.23529411764705888`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.729034051089198, -0.25430442687808014`, 
          0.635482974455401}}}]]}}, 
       {GrayLevel[0.17647058823529416`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.7668929178508579, -0.17814876799631435`, 
          0.6165535410745712}}}]]}}, 
       {GrayLevel[0.11764705882352944`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.790825810603706, -0.09523120395881364, 
          0.6045870946981471}}}]]}}, 
       {GrayLevel[0.05882352941176472], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.7999243203100755, -0.008698995956728817, 
          0.6000378398449624}}}]]}}, 
       {GrayLevel[0.], 
        StyleBox[
         {Arrowheads[0.015], 
          Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.7938430993125843, 
           0.07816339555586303, 0.6030784503437079}}}]]},
         FontColor->GrayLevel[0.]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.25}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1.25, 0.}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1.25, 0., 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., -1.25}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -1.25, 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-1.25, 0., 0.}}}]]},
        Text3DBox[
        StyleBox["z",
         StripOnInput->False,
         FontSize->Large], {0, 0, 1.35}], Text3DBox[
        StyleBox["y",
         StripOnInput->False,
         FontSize->Large], {0, 1.35, 0}], Text3DBox[
        StyleBox["x",
         StripOnInput->False,
         FontSize->Large], {1.35, 0, 0}]},
      Boxed->False,
      Lighting->"Neutral",
      ViewPoint->{2., -1., 1.},
      ViewVertical->{0, 0, 1}], {189., -972.}, ImageScaled[{0.5, 0.5}], {360., 360.},
     
     ContentSelectable->True], InsetBox[
     Graphics3DBox[{
       {GrayLevel[1.], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.}}}]]}}, 
       {GrayLevel[0.9411764705882353], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.011350843443117499`, -0.08616305227106939, 
          0.9962163855189609}}}]]}}, 
       {GrayLevel[0.8823529411764706], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.04454442946000221, -0.16580594909607174`, 
          0.985151856846666}}}]]}}, 
       {GrayLevel[0.8235294117647058], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.0970689233960321, -0.23290193012022725`, 
          0.9676436922013226}}}]]}}, 
       {GrayLevel[0.7647058823529411], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.16494967653389475`, -0.28237368883508557`, 
          0.9450167744887019}}}]]}}, 
       {GrayLevel[0.7058823529411764], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.24304999686246506`, -0.31047758398712627`, 
          0.9189833343791783}}}]]}}, 
       {GrayLevel[0.6470588235294117], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.3254598543223634, -0.31508692948293215`, 
          0.8915133818925457}}}]]}}, 
       {GrayLevel[0.5882352941176471], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.4059431063122768, -0.2958529255951822, 0.864685631229241}}}]]}}, 
       {GrayLevel[0.5294117647058824], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.4784094008780023, -0.2542310534366377, 
          0.8405301997073326}}}]]}}, 
       {GrayLevel[0.47058823529411764`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.5373750475894172, -0.19337093537183903`, 0.820874984136861}}}]]}}, 
       {GrayLevel[0.4117647058823529], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.5783779809508984, -0.11787799588134082`, 
          0.8072073396830339}}}]]}}, 
       {GrayLevel[0.3529411764705882], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.5983154151138144, -0.03346495854659225, 0.8005615282953953}}}]]}}, 
       {GrayLevel[0.2941176470588235], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.5956786387858937, 
          0.05348044882344155, 0.8014404537380355}}}]]}}, 
       {GrayLevel[0.23529411764705888`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.5706671828690877, 
          0.1363788681810584, 0.8097776057103041}}}]]}}, 
       {GrayLevel[0.17647058823529416`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.5251737214993707, 
          0.20895718632752358`, 0.8249420928335431}}}]]}}, 
       {GrayLevel[0.11764705882352944`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.4626408490613637, 
          0.2657232357518684, 0.8457863836462121}}}]]}}, 
       {GrayLevel[0.05882352941176472], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.38780057118901523`, 
          0.3023813995214261, 0.870733142936995}}}]]}}, 
       {GrayLevel[0.], 
        StyleBox[
         {Arrowheads[0.015], 
          Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.3063162230647814, 
           0.3161576704504607, 0.8978945923117396}}}]]},
         FontColor->GrayLevel[0.]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.25}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1.25, 0.}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1.25, 0., 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., -1.25}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -1.25, 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-1.25, 0., 0.}}}]]},
        Text3DBox[
        StyleBox["z",
         StripOnInput->False,
         FontSize->Large], {0, 0, 1.35}], Text3DBox[
        StyleBox["y",
         StripOnInput->False,
         FontSize->Large], {0, 1.35, 0}], Text3DBox[
        StyleBox["x",
         StripOnInput->False,
         FontSize->Large], {1.35, 0, 0}]},
      Boxed->False,
      Lighting->"Neutral",
      ViewPoint->{2., -1., 1.},
      ViewVertical->{0, 0, 1}], {189., -1360.8000000000002`}, 
     ImageScaled[{0.5, 0.5}], {360., 359.9999999999998},
     ContentSelectable->True]}, {}},
  ContentSelectable->True,
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.6614614780174932`*^9, 3.661461512992016*^9}, 
   3.661461656260586*^9, 3.661462141718774*^9, 3.661540519488295*^9}]
}, Open  ]],

Cell["\<\
Set ther resonance offset \[CapitalDelta] = 0, set the Rabi frequency to \
\[Omega] = 1, and look at magnetization out to times equal to \[Pi]/2.  Vary \
the rf phase and plot the magnetization.\
\>", "Text",
 CellChangeTimes->{{3.661461161171054*^9, 3.661461363138595*^9}, {
  3.661462550241778*^9, 3.661462550904059*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"GraphicsGrid", " ", "@@", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"my$drawing", "[", 
         RowBox[{
          RowBox[{"\[Rho]$vector", "[", 
           RowBox[{"t", ",", "0", ",", " ", "1", ",", "#"}], "]"}], ",", 
          RowBox[{"\[Pi]", "/", "2"}], ",", " ", "18"}], "]"}], "}"}], "&"}], 
      " ", "\[IndentingNewLine]", "/@", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.", ",", "45", ",", "90", ",", "180", ",", " ", "270"}], 
         "}"}], " ", 
        FractionBox["\[Pi]", "180"]}], ")"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.661458588798538*^9, 3.6614586115330048`*^9}, {
   3.66145869490186*^9, 3.6614586959315653`*^9}, {3.661458753453403*^9, 
   3.6614587742943687`*^9}, {3.6614588320579653`*^9, 
   3.6614588559055033`*^9}, {3.661458970940702*^9, 3.6614589795445957`*^9}, {
   3.661459149537085*^9, 3.661459149598215*^9}, {3.661459327692335*^9, 
   3.661459329264583*^9}, {3.661459478162506*^9, 3.661459480710063*^9}, {
   3.661459771728294*^9, 3.661459786310679*^9}, {3.6614598268972797`*^9, 
   3.6614598312304792`*^9}, {3.6614600007656393`*^9, 3.6614600010010643`*^9}, 
   3.6614600604054737`*^9, {3.661460541372858*^9, 3.661460541685663*^9}, {
   3.661460863084551*^9, 3.661460996693246*^9}, {3.661461036241066*^9, 
   3.6614611032299643`*^9}, {3.6614613756774282`*^9, 3.661461430361413*^9}, {
   3.66146153004705*^9, 3.6614616290756187`*^9}},
 FontSize->18],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     Graphics3DBox[{
       {GrayLevel[1.], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.}}}]]}}, 
       {GrayLevel[0.9411764705882353], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.08715574274765817, 
          0.9961946980917455}}}]]}}, 
       {GrayLevel[0.8823529411764706], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.17364817766693033`, 
          0.984807753012208}}}]]}}, 
       {GrayLevel[0.8235294117647058], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.2588190451025207, 
          0.9659258262890682}}}]]}}, 
       {GrayLevel[0.7647058823529411], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.3420201433256687, 
          0.9396926207859084}}}]]}}, 
       {GrayLevel[0.7058823529411764], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.42261826174069944`, 
          0.9063077870366499}}}]]}}, 
       {GrayLevel[0.6470588235294117], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.5, 
          0.8660254037844386}}}]]}}, 
       {GrayLevel[0.5882352941176471], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.573576436351046, 
          0.8191520442889918}}}]]}}, 
       {GrayLevel[0.5294117647058824], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.6427876096865393, 
          0.766044443118978}}}]]}}, 
       {GrayLevel[0.47058823529411764`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.7071067811865475, 
          0.7071067811865475}}}]]}}, 
       {GrayLevel[0.4117647058823529], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.766044443118978, 
          0.6427876096865393}}}]]}}, 
       {GrayLevel[0.3529411764705882], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.8191520442889918, 
          0.573576436351046}}}]]}}, 
       {GrayLevel[0.2941176470588235], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.8660254037844386, 
          0.5}}}]]}}, 
       {GrayLevel[0.23529411764705888`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.9063077870366499, 
          0.42261826174069944`}}}]]}}, 
       {GrayLevel[0.17647058823529416`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.9396926207859084, 
          0.3420201433256687}}}]]}}, 
       {GrayLevel[0.11764705882352944`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.9659258262890682, 
          0.2588190451025207}}}]]}}, 
       {GrayLevel[0.05882352941176472], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.984807753012208, 
          0.17364817766693033`}}}]]}}, 
       {GrayLevel[0.], 
        StyleBox[
         {Arrowheads[0.015], 
          Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -0.9961946980917455, 
           0.08715574274765817}}}]]},
         FontColor->GrayLevel[0.]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.25}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1.25, 0.}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1.25, 0., 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., -1.25}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -1.25, 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-1.25, 0., 0.}}}]]},
        Text3DBox[
        StyleBox["z",
         StripOnInput->False,
         FontSize->Large], {0, 0, 1.35}], Text3DBox[
        StyleBox["y",
         StripOnInput->False,
         FontSize->Large], {0, 1.35, 0}], Text3DBox[
        StyleBox["x",
         StripOnInput->False,
         FontSize->Large], {1.35, 0, 0}]},
      Boxed->False,
      Lighting->"Neutral",
      ViewPoint->{2., -1., 1.},
      ViewVertical->{0, 0, 1}], {189., -195.}, ImageScaled[{0.5, 0.5}], {360., 360.},
     
     ContentSelectable->True], InsetBox[
     Graphics3DBox[{
       {GrayLevel[1.], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.}}}]]}}, 
       {GrayLevel[0.9411764705882353], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.061628416716219346`, -0.061628416716219346`, 
          0.9961946980917455}}}]]}}, 
       {GrayLevel[0.8823529411764706], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.12278780396897282`, -0.12278780396897282`, 
          0.984807753012208}}}]]}}, 
       {GrayLevel[0.8235294117647058], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.1830127018922193, -0.1830127018922193, 
          0.9659258262890682}}}]]}}, 
       {GrayLevel[0.7647058823529411], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.24184476264797522`, -0.24184476264797522`, 
          0.9396926207859084}}}]]}}, 
       {GrayLevel[0.7058823529411764], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.29883623873011983`, -0.29883623873011983`, 
          0.9063077870366499}}}]]}}, 
       {GrayLevel[0.6470588235294117], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.35355339059327373`, -0.35355339059327373`, 
          0.8660254037844386}}}]]}}, 
       {GrayLevel[0.5882352941176471], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.4055797876726388, -0.4055797876726388, 
          0.8191520442889918}}}]]}}, 
       {GrayLevel[0.5294117647058824], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.4545194776720436, -0.4545194776720436, 0.766044443118978}}}]]}}, 
       {GrayLevel[0.47058823529411764`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.5, -0.5, 
          0.7071067811865475}}}]]}}, 
       {GrayLevel[0.4117647058823529], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.5416752204197018, -0.5416752204197018, 
          0.6427876096865393}}}]]}}, 
       {GrayLevel[0.3529411764705882], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.5792279653395691, -0.5792279653395691, 0.573576436351046}}}]]}}, 
       {GrayLevel[0.2941176470588235], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.6123724356957945, -0.6123724356957945, 0.5}}}]]}}, 
       {GrayLevel[0.23529411764705888`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.6408563820557884, -0.6408563820557884, 
          0.42261826174069944`}}}]]}}, 
       {GrayLevel[0.17647058823529416`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.6644630243886747, -0.6644630243886747, 
          0.3420201433256687}}}]]}}, 
       {GrayLevel[0.11764705882352944`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.6830127018922193, -0.6830127018922193, 
          0.2588190451025207}}}]]}}, 
       {GrayLevel[0.05882352941176472], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
          0.6963642403200189, -0.6963642403200189, 
          0.17364817766693033`}}}]]}}, 
       {GrayLevel[0.], 
        StyleBox[
         {Arrowheads[0.015], 
          Arrow3DBox[TubeBox[{{{0., 0., 0.}, {
           0.7044160264027586, -0.7044160264027586, 0.08715574274765817}}}]]},
         
         FontColor->GrayLevel[0.]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.25}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1.25, 0.}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1.25, 0., 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., -1.25}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -1.25, 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-1.25, 0., 0.}}}]]},
        Text3DBox[
        StyleBox["z",
         StripOnInput->False,
         FontSize->Large], {0, 0, 1.35}], Text3DBox[
        StyleBox["y",
         StripOnInput->False,
         FontSize->Large], {0, 1.35, 0}], Text3DBox[
        StyleBox["x",
         StripOnInput->False,
         FontSize->Large], {1.35, 0, 0}]},
      Boxed->False,
      Lighting->"Neutral",
      ViewPoint->{2., -1., 1.},
      ViewVertical->{0, 0, 1}], {189., -585.}, ImageScaled[{0.5, 0.5}], {360., 360.},
     
     ContentSelectable->True], InsetBox[
     Graphics3DBox[{
       {GrayLevel[1.], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.}}}]]}}, 
       {GrayLevel[0.9411764705882353], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.08715574274765817, 0., 
          0.9961946980917455}}}]]}}, 
       {GrayLevel[0.8823529411764706], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.17364817766693033`, 0., 
          0.984807753012208}}}]]}}, 
       {GrayLevel[0.8235294117647058], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.2588190451025207, 0., 
          0.9659258262890682}}}]]}}, 
       {GrayLevel[0.7647058823529411], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.3420201433256687, 0., 
          0.9396926207859084}}}]]}}, 
       {GrayLevel[0.7058823529411764], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.42261826174069944`, 0., 
          0.9063077870366499}}}]]}}, 
       {GrayLevel[0.6470588235294117], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.5, 0., 
          0.8660254037844386}}}]]}}, 
       {GrayLevel[0.5882352941176471], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.573576436351046, 0., 
          0.8191520442889918}}}]]}}, 
       {GrayLevel[0.5294117647058824], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.6427876096865393, 0., 
          0.766044443118978}}}]]}}, 
       {GrayLevel[0.47058823529411764`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.7071067811865475, 0., 
          0.7071067811865475}}}]]}}, 
       {GrayLevel[0.4117647058823529], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.766044443118978, 0., 
          0.6427876096865393}}}]]}}, 
       {GrayLevel[0.3529411764705882], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.8191520442889918, 0., 
          0.573576436351046}}}]]}}, 
       {GrayLevel[0.2941176470588235], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.8660254037844386, 0., 
          0.5}}}]]}}, 
       {GrayLevel[0.23529411764705888`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.9063077870366499, 0., 
          0.42261826174069944`}}}]]}}, 
       {GrayLevel[0.17647058823529416`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.9396926207859084, 0., 
          0.3420201433256687}}}]]}}, 
       {GrayLevel[0.11764705882352944`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.9659258262890682, 0., 
          0.2588190451025207}}}]]}}, 
       {GrayLevel[0.05882352941176472], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.984807753012208, 0., 
          0.17364817766693033`}}}]]}}, 
       {GrayLevel[0.], 
        StyleBox[
         {Arrowheads[0.015], 
          Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0.9961946980917455, 0., 
           0.08715574274765817}}}]]},
         FontColor->GrayLevel[0.]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.25}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1.25, 0.}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1.25, 0., 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., -1.25}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -1.25, 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-1.25, 0., 0.}}}]]},
        Text3DBox[
        StyleBox["z",
         StripOnInput->False,
         FontSize->Large], {0, 0, 1.35}], Text3DBox[
        StyleBox["y",
         StripOnInput->False,
         FontSize->Large], {0, 1.35, 0}], Text3DBox[
        StyleBox["x",
         StripOnInput->False,
         FontSize->Large], {1.35, 0, 0}]},
      Boxed->False,
      Lighting->"Neutral",
      ViewPoint->{2., -1., 1.},
      ViewVertical->{0, 0, 1}], {189., -975.}, ImageScaled[{0.5, 0.5}], {360., 360.},
     
     ContentSelectable->True], InsetBox[
     Graphics3DBox[{
       {GrayLevel[1.], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.}}}]]}}, 
       {GrayLevel[0.9411764705882353], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0.08715574274765817, 
          0.9961946980917455}}}]]}}, 
       {GrayLevel[0.8823529411764706], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0.17364817766693033`, 
          0.984807753012208}}}]]}}, 
       {GrayLevel[0.8235294117647058], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0.2588190451025207, 
          0.9659258262890682}}}]]}}, 
       {GrayLevel[0.7647058823529411], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0.3420201433256687, 
          0.9396926207859084}}}]]}}, 
       {GrayLevel[0.7058823529411764], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0.42261826174069944`, 
          0.9063077870366499}}}]]}}, 
       {GrayLevel[0.6470588235294117], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0.5, 
          0.8660254037844386}}}]]}}, 
       {GrayLevel[0.5882352941176471], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0.573576436351046, 
          0.8191520442889918}}}]]}}, 
       {GrayLevel[0.5294117647058824], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0.6427876096865393, 
          0.766044443118978}}}]]}}, 
       {GrayLevel[0.47058823529411764`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0.7071067811865475, 
          0.7071067811865475}}}]]}}, 
       {GrayLevel[0.4117647058823529], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0.766044443118978, 
          0.6427876096865393}}}]]}}, 
       {GrayLevel[0.3529411764705882], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0.8191520442889918, 
          0.573576436351046}}}]]}}, 
       {GrayLevel[0.2941176470588235], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0.8660254037844386, 
          0.5}}}]]}}, 
       {GrayLevel[0.23529411764705888`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0.9063077870366499, 
          0.42261826174069944`}}}]]}}, 
       {GrayLevel[0.17647058823529416`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0.9396926207859084, 
          0.3420201433256687}}}]]}}, 
       {GrayLevel[0.11764705882352944`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0.9659258262890682, 
          0.2588190451025207}}}]]}}, 
       {GrayLevel[0.05882352941176472], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0.984807753012208, 
          0.17364817766693033`}}}]]}}, 
       {GrayLevel[0.], 
        StyleBox[
         {Arrowheads[0.015], 
          Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0.9961946980917455, 
           0.08715574274765817}}}]]},
         FontColor->GrayLevel[0.]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.25}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1.25, 0.}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1.25, 0., 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., -1.25}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -1.25, 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-1.25, 0., 0.}}}]]},
        Text3DBox[
        StyleBox["z",
         StripOnInput->False,
         FontSize->Large], {0, 0, 1.35}], Text3DBox[
        StyleBox["y",
         StripOnInput->False,
         FontSize->Large], {0, 1.35, 0}], Text3DBox[
        StyleBox["x",
         StripOnInput->False,
         FontSize->Large], {1.35, 0, 0}]},
      Boxed->False,
      Lighting->"Neutral",
      ViewPoint->{2., -1., 1.},
      ViewVertical->{0, 0, 1}], {189., -1365.}, ImageScaled[{0.5, 0.5}], {360., 360.},
     
     ContentSelectable->True], InsetBox[
     Graphics3DBox[{
       {GrayLevel[1.], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.}}}]]}}, 
       {GrayLevel[0.9411764705882353], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-0.08715574274765817, 0., 
          0.9961946980917455}}}]]}}, 
       {GrayLevel[0.8823529411764706], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-0.17364817766693033`, 0., 
          0.984807753012208}}}]]}}, 
       {GrayLevel[0.8235294117647058], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-0.2588190451025207, 0., 
          0.9659258262890682}}}]]}}, 
       {GrayLevel[0.7647058823529411], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-0.3420201433256687, 0., 
          0.9396926207859084}}}]]}}, 
       {GrayLevel[0.7058823529411764], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-0.42261826174069944`, 0., 
          0.9063077870366499}}}]]}}, 
       {GrayLevel[0.6470588235294117], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-0.5, 0., 
          0.8660254037844386}}}]]}}, 
       {GrayLevel[0.5882352941176471], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-0.573576436351046, 0., 
          0.8191520442889918}}}]]}}, 
       {GrayLevel[0.5294117647058824], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-0.6427876096865393, 0., 
          0.766044443118978}}}]]}}, 
       {GrayLevel[0.47058823529411764`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-0.7071067811865475, 0., 
          0.7071067811865475}}}]]}}, 
       {GrayLevel[0.4117647058823529], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-0.766044443118978, 0., 
          0.6427876096865393}}}]]}}, 
       {GrayLevel[0.3529411764705882], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-0.8191520442889918, 0., 
          0.573576436351046}}}]]}}, 
       {GrayLevel[0.2941176470588235], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-0.8660254037844386, 0., 
          0.5}}}]]}}, 
       {GrayLevel[0.23529411764705888`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-0.9063077870366499, 0., 
          0.42261826174069944`}}}]]}}, 
       {GrayLevel[0.17647058823529416`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-0.9396926207859084, 0., 
          0.3420201433256687}}}]]}}, 
       {GrayLevel[0.11764705882352944`], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-0.9659258262890682, 0., 
          0.2588190451025207}}}]]}}, 
       {GrayLevel[0.05882352941176472], 
        {Arrowheads[0.015], 
         Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-0.984807753012208, 0., 
          0.17364817766693033`}}}]]}}, 
       {GrayLevel[0.], 
        StyleBox[
         {Arrowheads[0.015], 
          Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-0.9961946980917455, 0., 
           0.08715574274765817}}}]]},
         FontColor->GrayLevel[0.]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.25}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1.25, 0.}}}]]}, 
       {GrayLevel[0], 
        Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1.25, 0., 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., -1.25}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., -1.25, 0.}}}]]}, 
       {GrayLevel[0], Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-1.25, 0., 0.}}}]]},
        Text3DBox[
        StyleBox["z",
         StripOnInput->False,
         FontSize->Large], {0, 0, 1.35}], Text3DBox[
        StyleBox["y",
         StripOnInput->False,
         FontSize->Large], {0, 1.35, 0}], Text3DBox[
        StyleBox["x",
         StripOnInput->False,
         FontSize->Large], {1.35, 0, 0}]},
      Boxed->False,
      Lighting->"Neutral",
      ViewPoint->{2., -1., 1.},
      ViewVertical->{0, 0, 1}], {189., -1755.}, ImageScaled[{0.5, 0.5}], {360., 360.},
     
     ContentSelectable->True]}, {}},
  ContentSelectable->True,
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.661461545424398*^9, {3.661461577729426*^9, 3.661461630855484*^9}, 
   3.6614616669579897`*^9, 3.661462142050796*^9, 
   3.6615405196649942`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsnQe4JUWZ9w83zZ2cYGZgCAPMDEgQVBBhFRQUE4hhBVFQUUHBhAJmMWPA
gKAiimLcdVUUdQUDKibWHDAgy6IriqAoJszhfPWrrv/bb9WpPueMsOx+z3P7
ee6953ZX9+l6c6q3Dj3m5Mcc+/hjTj7+kcesu/uTjznxMcc/8qR1Bz/xyeHU
5Ga93uSFvd6Ku6zr8bnf6+lXcXyUXwOn587OnZ07O3d27uzc2bmzc2fnzs6d
nTs7d3bu7NzZubNzZ+fOzp2dOzt3du7s3Nm5s/8/nf2X+Hmy71IBbviy/+GR
7+RXNrDfX35zX5/Kr/vvfwe/pm/i9Zn8+lJ3/e38mvc/d/1t/JqfX19yM15/
K78W5tcX34LX39KcyK4vuhmvn8evpfn1hTfj9Tfza3l+fcEteP1N/FqZX59/
M14f9f3n8WsIfEbh/xaRD3PXO69H+TY1d33u+tz1uetz17uvvyqeneofe+yx
cfiqVav6P/zhD6fi6cn+fvvtF0+feOKJzZ1PGfKU6f5f/vKX/l3vetd4y557
7tn/3e9+15tI33DxxRfH8wsWLOhfd911Q552RrrjV7/6VX+XXXaJdx1++OET
6Z3ufOc7x1OnnHJKc+dTq095dTw72//BD37QX716dbzlhS98Yf/LX/5y/Lxo
0aL+9ddfP+QJZ8azM/0vfOEL/fnz5/c322yz/m677RbvfsYznhFHP61651kJ
Hu95z3viXdyxdOnS/g033NAbcttr0sT32WefeMvatWv7P/3pT0d+0Uz/P/7j
P+Idk5ONVvynf/qn/p/+9Kchk9Odd7vb3eIdp59+ev+AAw6Inx/+8IePBMts
/7Of/WwcvWTJkv5vfvObiNStttrKntaN4DMTJg888EDDpMjk85//fH96ero/
MTHR//d///d45ylDEDzVv+SSS+JT5s2b1//JT34ymU6fddZZ8fTixYv73/72
t+PNJw950GT/Yx/7WP8Vr3hF//zzzw+4a8696U1viufe97739YY8om/H/002
v6nXX5zAMeAan1Yd/kI+taNfWh30PD7NjBh0Kp9mbdDLqoOeyaeFIwZFBmp9
qtOrgyKltYb/y6uDTmrgNHzQiXxqXZBXVAc9nk+rRgw6gU9rbNArq4OO59OW
IwY9Jh/0quqgR/Npq3EGtU86ozrouPxJQwa1T3p196AWBGfexEGrbdBZ3bNb
Nc6gLWzQa/7xQREtLam8tvtJm48YdFw+6HXVQcfmg86uDnpU/uL1QY/kUwzz
ROm9yIa/vjr8ETY8Stc2fnNOdfjDbXh0zVtxcm51+MNseLzw7uqgh+aD3lMd
dHQ+6L3VQUflg86vDnpwPuj91UFH5oMuqA56UD7oA9VBR+SDPlgddHg+6EPV
QQ/kUyubP1wd9ID8SRdWB90/H3RRddD98kEfqQ66bz7oo9VBh+WDPlYddGg+
6OLqoEPyQZ+oDrp3PuiT1UH3ygd9qjronvmgS6qD7sGnFi2fqQ46OH/SZ6uD
7pYP+lx10F3zQZ+vDjooH3RpddCB+Yt/oTrozvmTvlgddEA+6EvVQfvng75c
HXSnfNBXmkGX2tnv2sg75m//tWZkZNRt8pH75c/8ejMyhgt35+x3bOS++chv
NCNj4HzXfOQd8pHfbEbGZMXO+ch98pGXNSPfxZ+N+cjb5zP6djMyysz1+ci9
85HfaUZGmbhDPvJ2+bd/txn5Pv6sy0feNh95uYPndpz9to28TT7ye83ID9q3
f91G7pmPvKIZGf2HDZz9ko3cI5/Rlc3ICw2en7eRu+fP/K9mZJRO0Sv9tI3c
LR95VTMySp8VnJ3hU1SnF9s9u+b3fL+5J15fxtmFds9Fds8u+T0/aO6JYmcJ
Z5fZPR+0e26Vz/eHzT1RwESbeZXdc77ds3N+z9XNPVGURGN8rd3zLrtnY/5u
P2ruidCMqah1dk/Lgxvye37c3PMf/Jm06/Ge8+ye9fk91zT33Ggj32Ajd8xn
cW0z8k828rU2cod85HXNyL/byDNs5Lr823/ajOw31zX8dBu+XT78Z274fBt+
mg3fNh9+vRse81vRbHu+Dd8mf+1fuOEr7OnPtuFb58NvcMNX2/Cn2fC1+fBf
uuFb2/CTbPiW+bv/yg3f3oY/wYavyYf/2g3faMOPt+Gr85f5rRu+q0HmWBu+
Kh9+oxu+pw1/uA3fIh/+Ozd8bxv+EBu+Mn/337vh+9nww234inz4H9zw/W2q
97Phy/Phf3TDD7Lhh9jwZfm7/9kNv4cNv7sNX5oP/4sbfqi9+0E2fEk+/K9u
+P1t+P42fFH+7n9zw4+w4fva8IX58L+74UfZ8L1s+IL8ZeKxmbvnGLtnD7tn
fuWeCXfPsQajXeye2co9k+6eE+yeDXbPTD6VfnOhveeJ9m7b2z3TlXum3T0n
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
SnuHj4C8Nd1B4JwqJ+6gHy/52PYOzzZvS3dgjdOBhztYEZ538h5g9HAHMQU2
GOMO1mHkwSYvmt6R7sAEZ7cy7gCuOHHtHV6YvjOBCeecncO5g5BLdXADpnkx
cEG4TT8Ey3CsXvjCF/YmEl34CsT2aYsHntYsrBRVzaS7N9tsM3Nlht/NVLF8
w094M35PWve5/G5vI7TH/zVemzs7d3bu7NzZubNzZ+fOzp2dOzt3du7s3Nm5
s3Nn587OnZ07O3d27uzc2bmzc2fnzs6dnTs7d3bu7NzZubNzZ+fOzp2dOzt3
du7s3NmbdjaugOisslz2PzwyFqUVFajLb+7rxeoI//2xjG76Jl6fya/7CupY
2Dfvf+56LDUsKqiX3IzXY/FjUSG++Ba8/pbmROcKgJt6/Tx+FSsAFt6M12NF
bLHCYcEteD2ucChWeMy/Ga+P+v7z+DUEPqPwf4vIh7nrndejfJuauz53fe76
3PW5693XXxXPNp0NGb5q1SqWiGipLZ3MOX3iiSc2dz5lyFOaDgu0ceMWtkBi
IbsaNtCEgvMLFiywrcLqTzsj3UGjBPrvc9fhhx+uVfy0p+TUKaec0tz51OpT
Xh3PzsbGF6tXr4630N+DrhB8XrRokVZ3dzzhzHh2Jq4mmT9/flzzQZt77taa
76dV7zwrwYPF7dzFHUuXLo09Eobc9po0cbaa4Ja1a9faJufDvmgmNmbhjsnJ
RivS9lRbodcnpzvpdMsdNBWi/T6faQMxCiyzsc+N1iGxRB2kssJIT+tG8JkJ
k1qXBCZFJvQjmZ6ejgux6BfEccoQBE/Fvjk8Zd68eXQyUbcSetBwevHixbG5
EMfJQx40GbtYsFLn/PPPt3XldAlKu5z1hjyib8f/TTa/qddfnMAx4BqfVh0e
V++3o19aHfQ8Ps2MGHQqn2Zt0Muqg2Jr/YUjBkUGan2q06uDIqW1hv/Lq4NO
auA0fFBsf9C6IK+oDoo7O60aMegEPq2xQa+sDjqeT1uOGPSYfNCrqoMezaet
xhnUPumM6qDj8icNGdQ+6dXdg1oQnHkTB622QWd1z27VOIPaLgiv+ccHRbS0
pPLa7idtPmLQcfmg11UHHZsPOrs66FH5i9cHPZJPMcwTpfciG/766vBH2PAo
Xdv4zTnV4Q+34dE1b8XJudXhD7Ph8cK7q4Memg96T3XQ0fmg91YHHZUPOr86
6MH5oPdXBx2ZD7qgOuhB+aAPVAcdkQ/6YHXQ4fmgD1UHPZBPrWz+cHXQA/In
XVgddP980EXVQffLB32kOui++aCPVgcdlg/6WHXQofmgi6uDDskHfaI66N75
oE9WB90rH/Sp6qB75oMuqQ66B59atHymOujg/EmfrQ66Wz7oc9VBd80Hfb46
6KB80KXVQQfmL/6F6qA750/6YnXQAfmgL1UH7Z8P+nJ10J3yQV9pBl1qZ79r
I++Yv/3XmpGRUbfJR+6XP/PrzcgYLtyds9+xkfvmI7/RjIyB813zkXfIR36z
GRmTFTvnI/fJR17WjIw9XjfmI2+fz+jbzcgoM9fnI/fOR36nGRll4g75yNvl
3/7dZuT7+LMuH3nbfOTlDp7bcfbbNvI2+cimXVrvg/btX7eRe+Yjr2hGRv9h
A2e/ZCP3yGd0ZTPyQoPn523k7vkzm6ZovSidolf6aRu5Wz7yqmZklD6xEVHs
mhbV6cV2z675Pd9v7onXY2OEhXbPRXbPLvk9P2juiWInNvxZZvd80O65VT7f
Hzb3RAETbeZVds/5ds/O+T1XN/dEURKN8bV2z7vsno35u/2ouSdCM6ai1tk9
LQ9uyO/5cXNPbDI6adfjPefZPevze65p7rnRRr7BRu6Yz6Lp1tD7k418rY3c
IR/ZtMTr/d1GnmEj1+Xf/tNmZL+5ruGn2/Dt8uE/c8Pn2/DTbPi2+fDr3fCY
34pm2/Nt+Db5a//CDV9hT3+2Dd86H36DG77ahj/Nhq/Nh//SDd/ahp9kw7fM
3/1Xbvj2NvwJNnxNPvzXbvhGG368DV+dv8xv3fBdDTLH2vBV+fAb3fA9bfjD
bfgW+fDfueF72/CH2PCV+bv/3g3fz4YfbsNX5MP/4Ibvb1O9nw1fng//oxt+
kA0/xIYvy9/9z274PWz43W340nz4X9zwQ+3dD7LhS/Lhf3XD72/D97fhi/J3
/5sbfoQN39eGL8yH/90NP8qG72XDF+QvE4/N3D3H2D172D3zK/dMuHuONRjt
YvfMVu6ZdPecYPdssHtm8qn0mwvtPU+0d9ve7pmu3DPt7jnZ7tna7pmqvNs8
d8/T7Z7Vds9k5Z5Zd8+pds8Ku2eico/Pob7A7ml7OTZfFO/pxVfN7vYZ1pfY
3bPNpWykz7W+3EZONa+djfRZ1xg72Cq/7qsCXmdPaq/7qoRRfQvf0s5zXmwO
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
vXjDIT7fltHN7uL1ue71uILaFvbN/9ddt6WGxQrqtbvxui1+LFaIr7kZr7+h
OdH7BsCuXr+A/4o3AJZ243VbEVu84bDqZrxubzgUb3gs7sbryz3/Av4bI5/l
xv9mwYeV673XDd9mVq6vXF+5vnJ95Xr/9eZjDTO2SwzNt2zZwisiM3Z6enjn
O9/ZTvMlUbvzGWN6mWWvBz6Wbrfc9ra3tXf9p/IT2KGE86tWrbK9Bvp7Ozvf
wdvvfKaFu0455RTtyMBnJznFLtN25zOrvTSfs1mwDSK2bt1qt/COOpth8Pvq
1att26L+Hl5pZ+fsbZLFxUV75+Pwww+3u/XRnGdV7/yTLA/2cuIu7li3bp19
o3zMba/KjN/xjne0W7Zt26Y3ysc+aM42VuCO6enGK/7qr/6qvfnTz5zuvOc9
72l3sNfCXe96V/ud7U2XE8uC7Xmi95DYH4FB5Q0j9dY/wK/MI6n3khhJqQlv
28/OztqLWGxUwPH0MQM8YztE0Mv8/DzbHUzn02wMxOk1a9bYdjUcTxvT0bTt
x8GbOhdddFEau+Yc2xdwzjcArHcx9ON/ppnv6vUXZ3GMpMZnVJvbR//a1i+t
NnoBv80t0+h5/Lbgjc6sNrJvsi8t08gMqM2pXlZtZJrWBv5nVRs9tZHT+EZP
5rc2BfnjaqPT+G3LMo3si7l7eqOXVxs9nt/2WqbR/+42ekW1kX2+Zu9JGrU9
nV1t9LhuT2MatT2d09+oFcErd7HRVm/0J/3cbZmkUbsLwqt++UY2LK2qnNvf
0+ZlGj2u2+i8aqPHdhu9utroMV3C640ezW9W5jH0Xu3NX1Nt/ihvbuja1m9e
W23+SG9uqXkLJ+dXmz/Cm9uFv6g2eni30V9WGz2s2+ivqo0e2m10UbXRb3Ub
vbPa6CHdRhdXG53abfSuaqMHdxtdUm10SrfRu6uNHsRvLTb/TbXRb3R7ek+1
0QO7jd5bbfSAbqP3VRvdv9vo/dVG9+s2+ttqo5O9kXm7VrPeVm1+kje3Gtzi
Ms3v482tZLTKm7+92vzEvt7rGnzvbvNVyzQ/gd9sINd2e6+r/vHe+5pu73Uj
uGe3+dIyze/Rpb3Fi7r1HNdtvuBAUwtE6l38urNfCLeu9nerPNGa1A3grt58
qdt73RSO7TZve6/r+128+apu71nzL/XrV/g9v+b8Fo/4QHOPgcs+3Xvu3Pec
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
7lkce4++QDnJPe31jSvXd9t104LZ/3+vv57/1nSvrw3XbTPETd3r0UJfx397
dK+v2o3X7fmbl7k+hr5dvX4+/21c5vqG7vXVu/H6n/Hf+mWur+teX7Mbr5t+
rF3m+hj92dXrF/DfUvf6upvx+hv4b7F7ff3NeN0c8Hz3+oab8fp/Nz4ZPk93
r2+6Ga+/2X7vNOih9L+3ZXu8f+XsLp01REoyJ65H7rzxbQaSzuV3E6xFe/cI
nqX4jeLC1NSU9bBp0ybbiOqQQw6ZGR5wwAF52dP4ji6w32ecjLm5OStH+bEl
NH5Dbkw5gMYLCwuWVvqxx0jjWQsumdHihrVr10JyoGVzuOON+Q4CZt4M4I69
997bygntHdFsLsx3kFyw2Tt38OFB1t23d4wYerqDisw+++xjd/A6O0F7e0eE
pjfnO6g3rl/f+EjkeuONN/aA6VuymCipLy01qK+vrY80bsQ0b1kLM0D6R7mF
TJuVmVNZL/IKNruj7W3NSG/NbK20ai7ffYtb3EL7ByxzN6wyD8TKz/m8SaW2
+eneHWOE9vifZmsrZ1fOrpxdObtyduXsytmVsytnV86unF05u3J25ezK2ZWz
K2dXzq6cXTm7cnbl7MrZlbMrZ1fOrpxdObtyduXsytmVsytnV86unF05u2tn
/9x+71tluf6/uKUtSitWoG7Y3deLNxzi820Z3ewuXp/rXo8rqG1h3/x/3XVb
alisoF67G6/b4sdihfiam/H6G5oTvW8A7Or1C/iveANgaTdetxWxxRsOq27G
6/aGQ/GGx+JuvL7c8y/gvzHyWW78bxZ8WLnee93wbWbl+sr1lesr11eu919/
hZ1t9vWh+ZYtW3hFRBst8DU1TvsHjp4xppdZe7+abztwC1+r5/1rbanPdkOc
X7VqFTsNjOnt7HwHb83f+ta3trtOOeWUqUwTX/nhFF8atDufWe3lHDu7YPvE
bN261W5hUxZeh+f31atX+24K9R5eaWfn7G2SxcVFe+fj8MMPt7vZAIrjWdU7
/yTLgy03uIs71q1bZxvcj7ntVZlxvsrHLdu2bdMGCmMfNGc7anDH9HTjFflM
YX5Vvoc53clnobiD7U74sgW/s+XNcmJZsC2g9B4Sm6MwqLxhpN76B/iVeST1
XhIjKTVhm6vZ2Vl7EYsdXziePmaAZ2yvQXqZn5+PO6Sz1RSn16xZY3tAcDxt
TEfTtq0Ob+pcdNFFvuMKu8pwjp3vxnQx9ON/ppnv6vUXZ3GMpMZnVJu/iN/a
1i+tNnoBv80t0+h5/Lbgjc6sNvoDfltappEZUJtTvazayDStDfzPqjZ6aiOn
8Y2ezG9tCvLH1Uan8duWZRo9gd/29EYvrzZ6PL/ttUyj/91t9Ipqo9/ht70n
adT2dHa10eO6PY1p1PZ0Tn+jVgSv3MVGW73Rn/Rzt2WSRu0uCK/65RvZsLSq
cm5/T5uXafS4bqPzqo0e22306mqjx3QJrzd6NL9ZmcfQe7U3f021+aO8uaFr
W795bbX5I725peYtnJxfbf4Ib24X/qLa6OHdRn9ZbfSwbqO/qjZ6aLfRRdVG
v9Vt9M5qo4d0G11cbXRqt9G7qo0e3G10SbXRKd1G7w6N7JK9H3uSN38Qv7Uo
/Tdlc7t0gjf/jW7v7ymb26Df05s/sNv8vaG5MbPQbf6AbvP3lc2t93t48/t3
m79/meb36zb/29D8VCembX5yt/nflc2t9+O8+Und5h8MzR/izX/dm9+n2/xD
oflvefO7e/MTu80/HJq36nw3b37vbvO/D80fwX82qnf15if4OWvyD6H5I/3S
sd78+G7v/xia/7Y3v4s3v2e3+UdD80d581/z5vfoNv+n0PzR3vxXvflx3eaX
huaP8eZ39ua/3mX1Y6H5Y/3SMd78bt3ePx6aP86b38mb37Xb/BOh+e948zt6
82O7zT8Zmps1pYiMjQqIwFNalVB4YWFhikB4yTu7g3d2l25nn2o6u9TPWgA2
RYcpet6wYYN1S5a0tLQ0Rf+rvNOjvdNf64rrsqZTw7B9vNPBokXhkLp582b7
Sf9sAMAzuJaeM2j7v733f+cu0Z9p+rf66xGcfUnun90TyLDiMzZu3OjPSdcG
rVCO8v6P6fb/2aZ/m784rKV/2uRAX0hniidk0ednDFZ7P7/ifd+p2/fnmr5t
lunQtu8Zyy2RQ+5/OnSPaNLlhnTr6rbe/R273X++6f5t/DiEs2fm7iEd0UBq
6J6ncTqNbuj+SO/+Dt2RzZ+/NLd6UNv9nFEPmUg5P4InNIo0bae4lJqEx9zG
H3N09zH546Hmcw/gbBNdL7mA6C/+Hgea87Czyp9zhD/nqK608rdX38GP/Th7
dh5o9pjIrAzEg0TlSmr9HO59367b9xeDEezgrEoRNbqzbBDjondzmHf9K92u
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
kG4vEhjf/6K39N9P5mE4M7T4BnfuPLc0/ubRmBup8bVr1+bVFf16+K7Gp92A
FXbQ4fbt230vzE2Parj++dFDlEWlsB6PPPIIZ3IH27x19GDeO0JKD0efLKut
72L01kMJ6Itf3A+o7tWdS2O8iqZU+InzOL9cD3Dlgm56VGH6lwaYROOcw6oH
P3Nr4wlMV7s3IpSQfzxgbp9N664MusiZFHcW6Lx119uOe64uVHU2ej/nOc+Z
Yz/7e5sqv8c+RlfHRoxCbnd/u9oIm+tXGq9d3r28e3n38u7l3cu7l3cv717e
vbx7effy7uXdy7uXdy/vXt69vHt59/Lu5d3Lu5d3L+9e3r28e3n38u7l3cu7
l3cv717evbx7effy7jO724/V2llled8/5pa9KG1VgXr/s/18tcKhfr+X0Z0+
w+dny+e1groX9l39x/e8lxquKqhvP4vPe/HjqkL81ifx+TdPN3auAHimz9/i
v9UKgJvP4vNeEbta4XDjk/i8r3BYrfC4/iw+P+/7b/HfHvich/9Piny4fL7z
eZdvJ5fPL59fPr98fvl89/Np/5VppxHNn/vc51oiMm3PdNyPiXD7K7/yK6ee
v3/PW077lg62TNTF4ZnWVWeZuS0Y3L9x48Z8jO32t2XDlA984AN3XvOa1/Re
X/qlX5pF23Ytdss55b3nH9j6lm/sd6/1rRme97zn9S72WrHM3e/33HPPvPPa
9jd8U7971leTXL9+va/5eN3rXtd7j1M073zV1p5/fMDDBgB66XHvvffa4eFo
T7c/MSbuMDZdXvjCF847su370FnfIEiP4+NJKzqrLfurbJ9cejo4Qw+b5tnA
2u+2ADkPLNf6LrVZh2QXEki1wihv243gbxqYzLokmAyZ2Dnm9PS0L8TKWWu/
bw+CT/peYN5y9epV+zdkwwm78bl969at7Axz59/b86LjvteGlTrf+Z3fOfa0
PO4b17n3Xd/1XUd7XnFnvn5lsvkzff6HBzjuco2/dmvzvh/npvUf2droq/12
dk6j/9hv1+ZGX7+1UT+P9OY5jToDbXyqP7q1Uae0jeH/n21t9HsnOO1v9JV+
27gg//nWRr/Hb889p9Hv9tvz50b/xdZGv8tvLzin0b+1bPTHtjb6Cr89ckij
zZu+YWuj37l8055Gmzd94+5GGxB80zNs9Ly50R/fPbvnHtJoswvCn3j6jTpa
NqTy5t1veuicRr9z2ehPbm30by4b/ZdbG/2O5cC3N/pyv/UwT5fe98zN/9TW
5v/G3LxL10385r/a2vy3z827a74RJ39ma/PfNjfvD759a6MvWzb6b7c2+teX
jb5ja6N/bdnoO7c2+q3LRt+9tdFvWTb6nq2N/pVlo/9ua6N/ednoL29t9KXL
Rv/91ka/2W8b2fw/bG30Ly3f9Fe2NvoXl42+d2uj37Rs9D9ubfQly0bft7XR
Fy8bff/WRr9x2eivbm30RctGP7i10RcuG/1PWxv9hmWj/3lro39+2eivbW30
6/22Qcv/srXRr1u+6X/d2uifXTb637Y2+meWjf761ka/dtnob2xt9E8vB/6/
b230a5Zv+j+2NvrVy0Z/a2ujz182+qGtjT5v2ej/nBr9jfnuj84tP3c5+v9r
atkZ9cXLlv/U8p1/e2rZw4Wvd/fvzi0/Z9nyR6aWPXD+2mXLz162/L+nlj1Z
8aply1+1bPn/TC2/1Y/Hly0/azmjad/Eoy4zH1u2/Mxly787tewy8eXLlp++
/PqPTi2/y4+XLlu+adnyxwo8H3X3/51bvnHZ8senln95/vrfnlt+2rLlT0wt
u//wSnf/1tzyDcsZ/dTU8q/M8Pzrc8vXL9/596aWXTp1r/Rtc8vXLVv+9NSy
S5++EVE/1LKr078693ntss/bpz79ed8Y4ebc53vnPq9Z9vn7U58udvqGP/fN
ff7y3OfVy/m+c+rTBUy3mZ879/nOuc+rln3eNfXpoqQb4y+c+3zr3Ofx5dj+
wdSnQ7Onol4699nw4CuXfd499eknBB/Pz3uft8x9Hlv2+Zmpz5Nzyz89t3zF
chbTbg1HH5lbvnlu+fJly384tfylueU3zC1fuvz6e6aWd6bnaf5H5+aPLpv/
o9L8+tz8a+fmL1k2f29p3vNb3Wz7Q3PzFy+H/b7S/IH57X9wbv6iZfOfK82f
Nzf/qrn5C5fN3z81n6C4dAXfOPf+vXPvFyyn8oGp9zv8uDaLtd7n3577PH/Z
Z9pm8KjzcmeJz537/K65z/OWo/zg1Ocnp0lF0PY+v2Pu89xlnyenPp2/XzIL
vQ7r3z73eXjZ5xenPn/fj1fMQq33+VfnPg8u5zNtfHjUuenV7n7q3OdL5z4P
LPs8NfXpnNGBfs1vj83CoM/sN82971/2/vDUu7/klTOT9j5fNPe5bzmzaYPF
6ffnzB97xdzxn5s73rvs+LHS8cbc8dF5jr927nh72fHjpeMDc8cXzR0/f+54
z3J6nygdXzh3fP7c8XPmjjeXHX+pdHzF3PHhueNnzB1vLIe6gcq48bq59/1z
7zfMva9v6X2l9P7MaQDt+a0Zvq+Ze1/b0vu49P68+dsbWfLKuffZcsp3pgeb
3r9u/vbZPPKXzb1Pt/SegmITLTYJYHsjQbf2rzmA165d+x3zeK7Mb3zR/MaT
LbOZjgqfpEL7pLfZB8k/EdcbN260V928efOKcG37pAY+2/5NcZHPmkVA/8bx
lm9cm77x98aovVsM2guviA5eEcE8E59tT21KJGLY/k1PTzQ8NYYz3c6Mqw+y
j3ZAYVyTY/GmmYtPZlCshjRy0T85hnT//ff3Dafav/ZX+//+Ow888MB1968a
UR/cmWGeGtLpPKTT84fURfMbZgrrQ5rA1Id01BGzGNxIhL+9DK6Npg/uuv8f
vPPQQw/d9ttND67Nw7xqmKcTNO+G3OneYXaJ/NqZ6G8shzRy7+8cQxJKH8Nq
RNMGcsWfZxPQ2p+vNsJbW0Z4ACDP1iMMlF420/C15eBuLblCXmEMsOG+ff7R
8UCc3AOEdsVoTpajftUM1xt7R32yHPWxUb9gOaRaC/OGAz//KXs/39Ha3oI3
ApE9BT6/+cCPvtRHmzrAdjBaiM2TOw8//HBPSUngPP/5z7/zghe8oOcYZEZe
9KIXXbHtWKOYl7zkJXceffTROy996Uv7P9uWydS84Q1vcLToja0E3n//9/vv
HaR9bmPAfaxtXBnPBcZkSFeMqL21jullL3vZlb6T3P13XvGKV9x57LHH+j9N
/P3444/3ZNfrX//6Puw3velNdz7rsz6r76fmmFkn2Njk3mZk3/It33K02t/z
tMzpd5c5FQRMczpZw/iKCTVUlSk1VLUJtaZlSmZ0xWhb0zEd/46ujN3xypza
X6985SuvmNKVO5/yKZ9yNMHIi/TUst2dZytRaLaf8Rmf0f/2U/5Knk9GyvFK
mb09+20D7Ygx+adPfOITNqJflfKM33/rIELbxg3ctuEixVtPh+Ba3zaFJnAG
NDrqBobbM8A4Bow+wfav3WvAuAIWx2BxbNZnd171qlc1J8J3fMO7vQ9ggA9g
Xvva1y4A85mf+ZmdFD77sz+7P/v0T//0O5/zOZ/TgSPbCljOY3OCUABl33f7
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
2RCrLFXoeuqpp3ofRtq6tmvEi6qxggjGErKLj0dN27gWVmgWRrYXX6lwQbaC
CiPYk9tCrupmSKmG3cPH8e8MdJifrCu1Q5y5mnERm4bhTEAOY/4Kus23c17k
UB8X/fbpfJQ0gfLxj3/cdGfV4MOpz1Er1HAzGxDJWTMgoxrydYr+kK8fd7mF
pCjK2+WrrHcYwKVtVPNXQYo1m3U9fMNQSfmqWWw+/MBdH57YnYRoMIOzgDNn
UTLTGjozJLEBwSBOLvkusf80PnvcWYgsrRTnm4QhndIgmdspJhpVeRmhQJHP
4ZNzP8e2xtv0fd7LMszZ4e0lwTVm8m6RGubURoxd8JuM53HN8iZbSCOyvKCB
N64x0UmgCcxq0pDy9L7NVlh++7h/G9OKrYSMgDy2HIGPxPJBPvrBHywNZvol
sQlW4sCFa8IZpLyPivdngOifItRu87WHytf+09GSc0N34av0zqmcUFxphM4Y
pLP/pZzSAbf5pezBsTxifilmTyz/3JeSlIyh+lJWuZdyVfLSLBjAWOe+FBdS
g/WlImTccKXJuUdWYqbdAP3q0bJpjRl9t8Y99gP7nWjJG3Nk7O43ftNoyfdk
39Y3Qgc/6/ze6JQQrr2jHJeafltvwZXMpo98z+mS6UPYXbQPg++ifXgfh/b5
C5fP9z5/q/9O/8l93qn41vL57fL8v/bfg8vnN8vzP+2/h5fPbzyLz/v3Hzrn
+Z7xPdPnf8Z/D5zz/P7l83uexed/1n/3nfP83uXzW8/i804ft895vod+nunz
t/jv5vL5vZ/E59/sv+vL5/d9Ep//ef9dXT6//5P4/JdbPnX5vOeU7H/cz/9i
/33RYMdIf3lbbq7vu7z7jO52iTR8K3Bv/446g7R7fJlx7ZNnzQsT6blypZ9y
f+fBBx/sq3Yff/zxE6dCthcJuO5/0Vv67yfzMM7OznrgY76eWxp/82jM8tP4
2rVr3aWfr4fvanza/Sk+vg63b9/uNeibHtXo/fOjx0c+8pFeLazHI4880sPE
mx6Vbd46eoiwOAZMD6d7L1f13cXorYcA04tf/OLeQ/HX0pCvoukvjh486Pvu
m3QkuH7iE5/YIUz/0gCTWNvNm5PU5w9vbTyB6Wr3bjjL+ZeVpV/zNV9zdGXQ
BS9oXDv05PS2qRIjVHU2ej/nOc/pJQ/n9zZV4Zr2r43M/8fJ8qx6Vxthc/1K
47XLu5d3L+9e3r28e3n3Wbx79Jz/H6oqj6E=\
\>"]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clean up", "Section",
 CellChangeTimes->{{3.661434199971715*^9, 3.661434206498426*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", "\[IndentingNewLine]", 
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Omega]", ",", " ", "\[CapitalDelta]", ",", " ", "\[Phi]", ",", " ", 
    "Ix", ",", " ", "Iy", ",", " ", "Iz", ",", " ", "\[Rho]", ",", " ", 
    "\[Rho]$0", ",", " ", "H"}], "]"}], "\[IndentingNewLine]", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6614342078368998`*^9, 3.661434242329479*^9}, {
  3.661434698858177*^9, 3.6614347003281317`*^9}, {3.6614347626672*^9, 
  3.661434766309744*^9}, {3.661439580768929*^9, 3.661439585503661*^9}},
 FontSize->16]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1084, 803},
WindowMargins->{{30, Automatic}, {0, Automatic}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 203, 3, 92, "Title"],
Cell[786, 27, 156, 6, 83, "Text"],
Cell[945, 35, 665, 15, 83, "Text"],
Cell[CellGroupData[{
Cell[1635, 54, 111, 1, 64, "Section"],
Cell[1749, 57, 315, 9, 77, "Text"],
Cell[2067, 68, 608, 13, 33, "Input"],
Cell[2678, 83, 152, 2, 33, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2867, 90, 100, 1, 64, "Section"],
Cell[2970, 93, 686, 15, 83, "Text"],
Cell[CellGroupData[{
Cell[3681, 112, 463, 10, 53, "Input"],
Cell[4147, 124, 319, 4, 28, "Output"]
}, Open  ]],
Cell[4481, 131, 301, 6, 59, "Text"],
Cell[CellGroupData[{
Cell[4807, 141, 590, 13, 53, "Input"],
Cell[CellGroupData[{
Cell[5422, 158, 305, 4, 22, "Print"],
Cell[5730, 164, 414, 8, 22, "Print"],
Cell[6147, 174, 534, 10, 22, "Print"],
Cell[6684, 186, 271, 3, 22, "Print"],
Cell[6958, 191, 269, 3, 21, "Print"],
Cell[7230, 196, 265, 3, 21, "Print"],
Cell[7498, 201, 267, 3, 22, "Print"],
Cell[7768, 206, 267, 3, 22, "Print"],
Cell[8038, 211, 261, 3, 21, "Print"],
Cell[8302, 216, 262, 3, 21, "Print"],
Cell[8567, 221, 271, 3, 21, "Print"],
Cell[8841, 226, 264, 3, 21, "Print"],
Cell[9108, 231, 269, 3, 21, "Print"],
Cell[9380, 236, 265, 3, 21, "Print"],
Cell[9648, 241, 264, 3, 21, "Print"],
Cell[9915, 246, 262, 3, 21, "Print"],
Cell[10180, 251, 276, 3, 22, "Print"],
Cell[10459, 256, 276, 3, 22, "Print"],
Cell[10738, 261, 275, 3, 22, "Print"],
Cell[11016, 266, 264, 3, 22, "Print"],
Cell[11283, 271, 264, 3, 21, "Print"],
Cell[11550, 276, 263, 3, 21, "Print"],
Cell[11816, 281, 262, 3, 21, "Print"],
Cell[12081, 286, 262, 3, 21, "Print"],
Cell[12346, 291, 262, 3, 21, "Print"],
Cell[12611, 296, 268, 3, 22, "Print"],
Cell[12882, 301, 279, 3, 22, "Print"],
Cell[13164, 306, 279, 3, 21, "Print"],
Cell[13446, 311, 266, 3, 21, "Print"],
Cell[13715, 316, 465, 8, 22, "Print"],
Cell[14183, 326, 260, 3, 21, "Print"],
Cell[14446, 331, 262, 3, 21, "Print"],
Cell[14711, 336, 263, 3, 22, "Print"],
Cell[14977, 341, 1646, 54, 707, "Print"],
Cell[16626, 397, 307, 4, 22, "Print"],
Cell[16936, 403, 416, 8, 22, "Print"],
Cell[17355, 413, 535, 10, 22, "Print"],
Cell[17893, 425, 281, 3, 22, "Print"]
}, Open  ]],
Cell[18189, 431, 612, 11, 39, "Message"],
Cell[18804, 444, 519, 10, 24, "Message"],
Cell[CellGroupData[{
Cell[19348, 458, 305, 4, 22, "Print"],
Cell[19656, 464, 414, 8, 22, "Print"],
Cell[20073, 474, 537, 10, 22, "Print"],
Cell[20613, 486, 283, 3, 22, "Print"]
}, Open  ]],
Cell[20911, 492, 416, 9, 24, "Message"],
Cell[21330, 503, 474, 10, 24, "Message"],
Cell[21807, 515, 524, 10, 39, "Message"],
Cell[CellGroupData[{
Cell[22356, 529, 305, 4, 22, "Print"],
Cell[22664, 535, 414, 8, 22, "Print"],
Cell[23081, 545, 535, 10, 22, "Print"],
Cell[23619, 557, 281, 3, 22, "Print"]
}, Open  ]],
Cell[23915, 563, 403, 9, 24, "Message"],
Cell[CellGroupData[{
Cell[24343, 576, 305, 4, 22, "Print"],
Cell[24651, 582, 414, 8, 22, "Print"],
Cell[25068, 592, 537, 10, 22, "Print"],
Cell[25608, 604, 281, 3, 22, "Print"]
}, Open  ]],
Cell[25904, 610, 729, 13, 78, "Message"],
Cell[CellGroupData[{
Cell[26658, 627, 305, 4, 22, "Print"],
Cell[26966, 633, 416, 8, 22, "Print"],
Cell[27385, 643, 535, 10, 22, "Print"],
Cell[27923, 655, 283, 3, 22, "Print"]
}, Open  ]],
Cell[28221, 661, 543, 10, 42, "Message"],
Cell[CellGroupData[{
Cell[28789, 675, 307, 4, 22, "Print"],
Cell[29099, 681, 414, 8, 22, "Print"],
Cell[29516, 691, 535, 10, 22, "Print"],
Cell[30054, 703, 281, 3, 22, "Print"]
}, Open  ]],
Cell[30350, 709, 567, 11, 42, "Message"],
Cell[30920, 722, 538, 10, 24, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31507, 738, 172, 2, 64, "Section"],
Cell[31682, 742, 9470, 230, 935, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41189, 977, 188, 2, 64, "Section"],
Cell[CellGroupData[{
Cell[41402, 983, 108, 1, 44, "Subsection"],
Cell[41513, 986, 904, 26, 65, "Text"],
Cell[CellGroupData[{
Cell[42442, 1016, 2763, 59, 293, "Input"],
Cell[45208, 1077, 569, 11, 24, "Message"],
Cell[45780, 1090, 583, 12, 24, "Message"],
Cell[46366, 1104, 614, 12, 24, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47029, 1122, 140, 2, 42, "Subsection"],
Cell[47172, 1126, 302, 9, 37, "Text"],
Cell[47477, 1137, 560, 16, 57, "Input"],
Cell[48040, 1155, 310, 7, 35, "Text"],
Cell[CellGroupData[{
Cell[48375, 1166, 1658, 40, 149, "Input"],
Cell[50036, 1208, 3225, 96, 267, "Output"]
}, Open  ]],
Cell[53276, 1307, 520, 11, 77, "Text"],
Cell[CellGroupData[{
Cell[53821, 1322, 684, 20, 33, "Input"],
Cell[54508, 1344, 2700, 80, 138, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57257, 1430, 110, 1, 44, "Subsection"],
Cell[57370, 1433, 436, 8, 59, "Text"],
Cell[CellGroupData[{
Cell[57831, 1445, 392, 9, 33, "Input"],
Cell[58226, 1456, 703, 20, 33, "Output"]
}, Open  ]],
Cell[58944, 1479, 227, 5, 35, "Text"],
Cell[CellGroupData[{
Cell[59196, 1488, 386, 9, 33, "Input"],
Cell[59585, 1499, 324, 7, 33, "Output"]
}, Open  ]],
Cell[59924, 1509, 440, 8, 59, "Text"],
Cell[CellGroupData[{
Cell[60389, 1521, 483, 15, 33, "Input"],
Cell[60875, 1538, 272, 7, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61196, 1551, 110, 1, 44, "Subsection"],
Cell[61309, 1554, 816, 24, 94, "Text"],
Cell[CellGroupData[{
Cell[62150, 1582, 544, 14, 61, "Input"],
Cell[62697, 1598, 7298, 170, 1016, "Output"]
}, Open  ]],
Cell[70010, 1771, 391, 8, 59, "Text"],
Cell[CellGroupData[{
Cell[70426, 1783, 1452, 29, 57, "Input"],
Cell[71881, 1814, 18634, 438, 3730, "Output"]
}, Open  ]],
Cell[90530, 2255, 348, 7, 59, "Text"],
Cell[CellGroupData[{
Cell[90903, 2266, 1605, 33, 96, "Input"],
Cell[92511, 2301, 141473, 2478, 4688, 21651, 512, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[234045, 4786, 93, 1, 64, "Section"],
Cell[234141, 4789, 553, 11, 73, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
