(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    291664,       6403]
NotebookOptionsPosition[    275037,       6127]
NotebookOutlinePosition[    275484,       6144]
CellTagsIndexPosition[    275441,       6141]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["UniDyn--Demo-Scratch.nb", "Title",
 CellChangeTimes->{{3.6352690845273046`*^9, 3.635269100847275*^9}, {
  3.6609180081345453`*^9, 3.660918013241088*^9}, {3.6615988707006617`*^9, 
  3.6615988735349627`*^9}},ExpressionUUID->"391a202e-1e28-48b9-91a8-\
88743dfbb72d"],

Cell["\<\
John A. Marohn
jam99@cornell.edu
Cornell University\
\>", "Text",
 CellChangeTimes->{{3.635269101985786*^9, 3.635269121580956*^9}},
 FontSize->18,ExpressionUUID->"9c13195a-2f5b-44a0-b9d6-7d334412a0b8"],

Cell[TextData[{
 StyleBox["Abstract:",
  FontWeight->"Bold"],
 "  This demonstration notebook loads the ",
 StyleBox["UniDyn",
  FontWeight->"Bold"],
 " package and executes the package\[CloseCurlyQuote]s unit tests."
}], "Text",
 CellChangeTimes->{{3.6352698622319117`*^9, 3.635269926908793*^9}, {
  3.6352701305950613`*^9, 3.635270138669529*^9}},
 FontSize->18,ExpressionUUID->"d5e7dddf-7378-41a8-a0a7-42b519c56421"],

Cell[CellGroupData[{

Cell["Set the path to the package", "Section",
 CellChangeTimes->{{3.635270036711257*^9, 
  3.63527004852262*^9}},ExpressionUUID->"4f5edf7b-f0b5-41bd-98ab-\
96ef2604d472"],

Cell[TextData[{
 "Tell ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " the path to the directory containing the package.    \n\nEDIT THE \
FOLLOWING PATH STRING:"
}], "Text",
 CellChangeTimes->{{3.635270060901009*^9, 3.635270086988311*^9}, {
  3.6610825274488792`*^9, 3.6610825288209763`*^9}},
 FontSize->16,ExpressionUUID->"72627f24-66c0-4362-93bf-94bb3be82d04"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$NCPath", " ", "=", " ", "\"\</Users/jam99/Dropbox\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "$UniDynPath", " ", "=", 
    "\"\</Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/unidyn\>\"\
"}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.6349053527016897`*^9, 3.6349054064223843`*^9}, {
   3.634910931339162*^9, 3.634910931457775*^9}, {3.634914337947165*^9, 
   3.6349143671071568`*^9}, {3.634922597904743*^9, 3.634922606812076*^9}, {
   3.635268730835155*^9, 3.635268731125407*^9}, {3.635269951638358*^9, 
   3.635269958323474*^9}, {3.660918115324842*^9, 3.660918132325369*^9}, {
   3.660918590921587*^9, 3.660918600403768*^9}, 3.8554986177031803`*^9},
 FontSize->16,
 CellLabel->"In[19]:=",ExpressionUUID->"1d4257d9-d4f6-4f1d-ad1c-8f90af652578"],

Cell["YOU SHOULD NOT NEED TO EDIT ANYTHING FROM HERE ONWARDS.", "Text",
 CellChangeTimes->{{3.635270073196437*^9, 3.635270077357624*^9}},
 FontSize->16,ExpressionUUID->"5a5f6383-8d48-41c2-b70f-bd0112887a06"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load the package", "Section",
 CellChangeTimes->{{3.635269129230983*^9, 
  3.63526913095236*^9}},ExpressionUUID->"b69153fa-f825-45f0-8739-\
690e4abd6b5a"],

Cell[TextData[{
 "Append the package path to the system path.  Before trying to load the \
package, ask ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to find it.  This is a test that we directed ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to the correct directory.  The output of this command should be the full \
system path to the UniDyn.m file.   "
}], "Text",
 CellChangeTimes->{{3.635269223597199*^9, 3.635269340159473*^9}, {
   3.635269947982662*^9, 3.6352699492517843`*^9}, {3.635269985297124*^9, 
   3.63527000724584*^9}, 3.635270066996499*^9, {3.63527010818321*^9, 
   3.6352701131658497`*^9}, {3.660918102499856*^9, 3.6609181035465183`*^9}},
 FontSize->18,ExpressionUUID->"3655837e-64da-408c-9c7c-8c2b99bb2c37"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Path", " ", "=", " ", 
   RowBox[{"AppendTo", "[", 
    RowBox[{"$Path", ",", "$NCPath"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Path", " ", "=", " ", 
   RowBox[{"AppendTo", "[", 
    RowBox[{"$Path", ",", "$UniDynPath"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindFile", "[", "\"\<UniDyn`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"FindFile", "[", "\"\<NC`\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.634906393354924*^9, 3.634906398308229*^9}, {
   3.634922599063291*^9, 3.634922599752222*^9}, {3.635268728673848*^9, 
   3.6352687402094*^9}, {3.635269954012105*^9, 3.6352699550474253`*^9}, 
   3.855498627862424*^9},
 FontSize->16,
 CellLabel->"In[21]:=",ExpressionUUID->"ab7657da-a278-4379-a33e-689bfd39b35b"],

Cell[BoxData["\<\"/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/UniDyn.m\"\>"], "Output",
 CellChangeTimes->{3.6614707136740513`*^9, 3.661479177158627*^9, 
  3.661532655938403*^9, 3.661534424524879*^9, 3.6615345733078747`*^9, 
  3.66153595871663*^9, 3.6615361849943542`*^9, 3.6615362214825907`*^9, 
  3.661536464045929*^9, 3.661537151958733*^9, 3.661537709711556*^9, 
  3.661540165053076*^9, 3.661542369100931*^9, 3.661599473254528*^9, 
  3.6828518971082487`*^9, 3.68286048989187*^9, 3.6828607070428667`*^9, 
  3.682861587900721*^9, 3.682861787876326*^9, 3.836676186023241*^9, 
  3.855498637099923*^9, 3.8554993046262217`*^9, 3.855508871255394*^9, 
  3.855508987519918*^9, 3.8555092722577047`*^9, 3.855511761189838*^9, 
  3.855512226259021*^9, 3.855512732373384*^9, 3.8555127710910597`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"714b9a0b-9303-4d87-9bff-fabe9895ed68"],

Cell[BoxData["\<\"/Users/jam99/Dropbox/NC/init.m\"\>"], "Output",
 CellChangeTimes->{3.6614707136740513`*^9, 3.661479177158627*^9, 
  3.661532655938403*^9, 3.661534424524879*^9, 3.6615345733078747`*^9, 
  3.66153595871663*^9, 3.6615361849943542`*^9, 3.6615362214825907`*^9, 
  3.661536464045929*^9, 3.661537151958733*^9, 3.661537709711556*^9, 
  3.661540165053076*^9, 3.661542369100931*^9, 3.661599473254528*^9, 
  3.6828518971082487`*^9, 3.68286048989187*^9, 3.6828607070428667`*^9, 
  3.682861587900721*^9, 3.682861787876326*^9, 3.836676186023241*^9, 
  3.855498637099923*^9, 3.8554993046262217`*^9, 3.855508871255394*^9, 
  3.855508987519918*^9, 3.8555092722577047`*^9, 3.855511761189838*^9, 
  3.855512226259021*^9, 3.855512732373384*^9, 3.855512771098772*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"236a434e-d930-4b81-83f8-8244dda60a43"]
}, Open  ]],

Cell["\<\
Now that we are confident that the path is set correctly, load the package.  \
Setting the global $VerboseLoad variable to True will print out the help \
strings for key commands in the package.  \
\>", "Text",
 CellChangeTimes->{{3.635269347360386*^9, 3.63526943190546*^9}, 
   3.855498641698617*^9},
 FontSize->18,ExpressionUUID->"931bda02-bd34-4f64-836d-d38976e30a7a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$VerboseLoad", " ", "=", "False"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "to", " ", "load", " ", "quietly"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<UniDyn`\>\"", "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQfYUjQpVD9LXjxxR+TRC9peyGEyeQ/lH0EExXTKuJ
BdGbVk8B0zYvFOpA9Ik35o0gmsEzcwKI3ruyF0yrn4ubDqITDHPAdMGBGUdA
9K1JG8G0V4+DGg+Q1vtwBUyLu5WcAtE8yv6nQfT861tdBUDm3NFxA9F2v/Ym
g+h4M4cUED09+VEGiC6rzcoH0RUNSUHSQHqfnVQoiP6uyGkiC6T5nmeCabdp
f25FAekIO8nbINqkKUQlBUiz/Z0DplNs3jwG0Q88GJ+A6Bf2PcZdQNqjYi6Y
XnQt//l3t9eOqzNZX4DoFiF11h9A+sM0Wwht1Mp6bucbR0bVPnYQDQDOxZAu

  "],
 FontSize->16,
 CellLabel->"In[25]:=",ExpressionUUID->"8777a335-4ef0-48ee-99fe-4f94f81dcf5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Execute the units tests in batch", "Section",
 CellChangeTimes->{{3.635269450321582*^9, 3.635269455866803*^9}, {
  3.661082576038043*^9, 
  3.661082577577619*^9}},ExpressionUUID->"40dd6435-da21-4952-afcb-\
9ffff154b643"],

Cell["\<\
Included with the package are a number of files, ending in \
\[OpenCurlyDoubleQuote]-tests.m\[CloseCurlyDoubleQuote], that contain tests \
of the package\[CloseCurlyQuote]s functions -- so-called unit tests.  Set the \
working directory to the package directory and pretty-print the directory \
name.\
\>", "Text",
 CellChangeTimes->{{3.635269466546741*^9, 3.63526959787702*^9}, {
  3.6352696661918793`*^9, 3.6352697255432568`*^9}},
 FontSize->18,ExpressionUUID->"82a186b2-ec29-4d77-89ae-048209ebd5ef"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", "$UniDynPath", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "$UniDynPath", "}"}], "}"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", "\"\<Directory\>\"", "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.634944324488654*^9, 3.6349443603233624`*^9}, {
   3.6349444030097713`*^9, 3.63494440330383*^9}, {3.634944747308063*^9, 
   3.6349447481808853`*^9}, {3.634946064022402*^9, 3.634946069263152*^9}, {
   3.634946188079462*^9, 3.634946189912341*^9}, {3.6349479903618507`*^9, 
   3.6349480514686327`*^9}, {3.6349480899795113`*^9, 
   3.6349482285783367`*^9}, {3.634948408385352*^9, 3.634948452061852*^9}, {
   3.635269608570084*^9, 3.635269645220949*^9}, 3.635269728194304*^9, {
   3.8554986690267487`*^9, 3.85549868178732*^9}},
 FontSize->16,
 CellLabel->"In[27]:=",ExpressionUUID->"8c2cad5a-cd1e-4d46-9c12-f91019b722de"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Directory\"\>",
       HoldForm]},
     {"\<\"/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/unidyn\"\
\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {None, {"Directory"}}]]]], "Output",\

 CellChangeTimes->{
  3.661470714474102*^9, 3.6614791775702543`*^9, 3.661532656000002*^9, 
   3.6615344249571257`*^9, 3.661534573808139*^9, 3.661535959139999*^9, 
   3.661536185384212*^9, 3.661536221855288*^9, 3.661536464436379*^9, 
   3.661537152465351*^9, 3.6615377100776463`*^9, 3.66154016547451*^9, 
   3.6615423691474123`*^9, 3.661599473745071*^9, 3.6828518978793163`*^9, 
   3.682860490547509*^9, 3.682860707131661*^9, 3.682861587979883*^9, 
   3.682861787946982*^9, 3.8366762070430727`*^9, {3.855498682969221*^9, 
   3.8554986949325*^9}, 3.8554993131785*^9, 3.855508880428122*^9, 
   3.855508989299453*^9, 3.8555092723370943`*^9, 3.855511762897407*^9, 
   3.855512238884666*^9, {3.855512743886434*^9, 3.855512771172565*^9}},
 CellLabel->
  "Out[28]//TableForm=",ExpressionUUID->"43e6779d-f330-4ded-8f0c-\
ce456e05c869"]
}, Open  ]],

Cell["\<\
Get the names of all the unit-testing files included with the package \
(following my convention that the unit testing file end in \
\[OpenCurlyDoubleQuote]-tests.m\[CloseCurlyDoubleQuote]).   Pretty-print the \
names of the unit-test files included with the package.\
\>", "Text",
 CellChangeTimes->{
  3.6352696714534483`*^9, {3.6352697371205063`*^9, 3.6352697785313387`*^9}, {
   3.6352698393266697`*^9, 3.635269839517961*^9}, 3.6609243923593283`*^9},
 FontSize->18,ExpressionUUID->"f066a196-5844-4b85-8fa4-78a71c0d7d77"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fn", " ", "=", " ", 
   RowBox[{"FileNames", "[", "\"\<*-tests.m\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "fn", "}"}], "}"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", "\"\<Test files found\>\"", "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6610821906566467`*^9, 3.661082193022552*^9}},
 FontSize->16,
 CellLabel->"In[29]:=",ExpressionUUID->"64231d27-0bce-42ea-b9d6-f63ce6c02bb6"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Test files found\"\>",
       HoldForm]},
     {
      TagBox[GridBox[{
         {"\<\"Comm-tests.m\"\>"},
         {"\<\"Evolve-tests.m\"\>"},
         {"\<\"Mult-tests.m\"\>"},
         {"\<\"OpCreate-tests.m\"\>"},
         {"\<\"Osc-tests.m\"\>"},
         {"\<\"Spins-tests.m\"\>"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {None, {"Test files found"}}]]]], "Output",
 CellChangeTimes->{
  3.6614707145112534`*^9, 3.6614791776199837`*^9, 3.66153265603694*^9, 
   3.66153442498964*^9, 3.661534573841134*^9, 3.6615359591910343`*^9, 
   3.661536185418442*^9, 3.661536221887788*^9, 3.661536464468541*^9, 
   3.661537152497046*^9, 3.661537710112206*^9, 3.661540165508061*^9, 
   3.6615423691764097`*^9, 3.661599473777424*^9, 3.682851897920143*^9, 
   3.682860490576693*^9, 3.68286070716717*^9, 3.6828615880297537`*^9, 
   3.682861787970718*^9, 3.8366762071079683`*^9, {3.8554986888454733`*^9, 
   3.855498695041863*^9}, 3.855499313282568*^9, 3.8555088805167007`*^9, 
   3.855508989328553*^9, 3.8555092723989*^9, 3.855511762911343*^9, 
   3.85551223931644*^9, {3.855512744470059*^9, 3.855512771183525*^9}},
 CellLabel->
  "Out[30]//TableForm=",ExpressionUUID->"cdb416cc-55fb-4a7d-a5c3-\
55e92ac21d60"]
}, Open  ]],

Cell["Finally, carry out the unit tests and make a report.", "Text",
 CellChangeTimes->{{3.635269787557482*^9, 3.6352698056777897`*^9}},
 FontSize->18,ExpressionUUID->"a45755e1-b303-4fa9-8287-c9aa13e6116c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tr", " ", "=", 
   RowBox[{"TestReport", " ", "/@", " ", "fn"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"tr", " ", "[", 
     RowBox[{"[", "k", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      RowBox[{"Length", "[", "tr", "]"}]}], "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.661056096117302*^9, 3.6610561018069153`*^9}, {
   3.661057070228121*^9, 3.6610570741421413`*^9}, {3.661081914458424*^9, 
   3.661081936122706*^9}, {3.6610826347312403`*^9, 3.6610826394672413`*^9}, {
   3.6611400376524487`*^9, 3.661140039730514*^9}, {3.855509021373403*^9, 
   3.855509021797516*^9}, 3.855512258241598*^9, {3.855512622396385*^9, 
   3.8555126233753777`*^9}},
 FontSize->16,
 CellLabel->"In[31]:=",ExpressionUUID->"90433bd8-d59d-4c8b-a733-562dc43b0402"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Comm-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Comm-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with wrong results: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with errors: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.16`", "\"s\"", "seconds", "\"Seconds\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], 
                    "\[SpanFromLeft]"}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: Comm-tests.m", "TimeElapsed" -> 
         Quantity[0.16, "Seconds"], "TestsSucceededCount" -> 12, 
         "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[1 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 1, "TestID" -> 
              "Comm > test01a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000186`2.4200279420499102, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001829999999998222, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 2 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 2, "TestID" -> 
              "Comm > test01b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000157`2.3464146502412278, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015700000000151704`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 3, "TestID" -> 
              "Comm > test01c", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000137`2.287235564988398, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001279999999965753, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 4, "TestID" -> 
              "Comm > test01d", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000101`2.1548363716146324, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001010000000007949, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 5, "TestID" -> 
              "Comm > test01e", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000181`2.4081935727011765, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00018000000000029104`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 6, "TestID" -> 
              "Comm > test02a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000114`2.207419849168462, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011699999999947863`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 7, "TestID" -> 
              "Comm > test03a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000251`2.55018871931303, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0002439999999985787, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 8, "TestID" -> 
              "Comm > test03b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.0005`2.8494850021680085, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0007060000000009836, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 9, "TestID" -> 
              "Comm > test03c", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000262`2.568816289151737, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00024700000000166256`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 10, "TestID" -> 
              "Comm > test04a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000126`2.2508855429495545, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.000128000000000128, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 11, "TestID" -> 
              "Comm > test04b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000119`2.2260619592245225, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001220000000010657, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 12, "TestID" -> 
              "Comm > test05a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000121`2.233300368148442, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012299999999854094`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]]], 
         "TestsSucceededIndices" -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, 
         "TestsFailedIndices" -> {}, "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Test Report: Evolve-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["27", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Test Report: Evolve-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["27", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["27", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with wrong results: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with errors: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"16.06`", "\"s\"", "seconds", "\"Seconds\""},
                     "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], 
                    "\[SpanFromLeft]"}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: Evolve-tests.m", "TimeElapsed" -> 
         Quantity[16.06, "Seconds"], "TestsSucceededCount" -> 27, 
         "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[1 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 1, "TestID" -> 
              "Osc > test01a > distribute addition", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000164`2.36535884587969, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00016499999999908255`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 2 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 2, "TestID" -> 
              "Osc > test01b > distribute multiplication", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000149`2.3237012662442638, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001490000000003988, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 3, "TestID" -> 
              "Osc > test01c > distribute complicated expression", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000163`2.3627026022359474, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001620000000031041, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 4, "TestID" -> 
              "Osc > test01d > NCExpand bottom-out test 1", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000144`2.3088774899272435, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00014200000000030855`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 5, "TestID" -> 
              "Osc > test01e > NCExpand bottom-out test 2", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000131`2.267786293487758, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.000128000000000128, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 6, "TestID" -> 
              "Osc > test01f > NCExpand bottom-out test 3", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00013`2.2644583501388285, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001260000000016248, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 7, "TestID" -> 
              "Osc > test02a > commuting test 1", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000132`2.2710889290378398, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00013000000000218392`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 8, "TestID" -> 
              "Osc > test02b > commuting test 2", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000134`2.277619796196799, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001319999999971344, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 9, "TestID" -> 
              "Osc > test02c > commuting test 3", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00013`2.2644583501388285, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001279999999965753, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 10, "TestID" -> 
              "Osc > test03a > Evolve expand test 1", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000124`2.2439366829942267, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011999999999900979`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 11, "TestID" -> 
              "Osc > test03b > Evolve expand test 2", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000118`2.222397005138117, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011700000000303135`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 12, "TestID" -> 
              "Osc > test03c > Evolve expand test 3", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000163`2.3627026022359514, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015699999999796432`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 13, "TestID" -> 
              "Osc > test04a > DSolve test", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000105`2.1717042969019316, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010700000000340992`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 14 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 14, "TestID" -> 
              "Osc > test05a > free evolution of Ix test", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000123`2.2404201092713896, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012500000000059686`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 15 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 15, "TestID" -> 
              "Osc > test05a > free evolution of Ix", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.0002`2.451544993495973, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00018400000000085015`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 16 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 16, "TestID" -> 
              "Osc > test05b > on-resonance nutation of Iz", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00012`2.229696243879616, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012400000000667433`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 17 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 17, "TestID" -> 
              "Osc > test05c > free evolution of I+", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000137`2.2872355649883986, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001390000000043301, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 18 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 18, "TestID" -> 
              "Osc > test05d > scalar-coupling evolution of Ix", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000121`2.2333003681484396, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012200000000461841`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 19 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 19, "TestID" -> 
              "Osc > test05e > Off-resonance nutation of of Iz", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000138`2.290394084233228, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00014000000000180535`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 20 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 20, "TestID" -> 
              "Osc > test06a1 > free evolution of lowering operator", 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000141`2.299734110487374, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001409999999992806, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 21 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 21, "TestID" -> 
              "Osc > test06a2 > free evolution of raising operator", 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000194`2.4383167277622153, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00019199999999841566`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 22 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 22, "TestID" -> 
              "Osc > test06b > test Q definition", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000198`2.447180188093521, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0002020000000015898, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 23 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 23, "TestID" -> 
              "Osc > test06c > test P definition", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000115`2.2112128381856055, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011599999999845068`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 24 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 24, "TestID" -> 
              "Osc > test06d > free evolution of Q", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000141`2.2997341104873716, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00014200000000386126`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 25 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 25, "TestID" -> 
              "Osc > test06e > free evolution of P", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000194`2.4383167277622197, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015100000000245473`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 26 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 26, "TestID" -> 
              "Osc > test06f > position kick", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000124`2.2439366829942244, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012700000000620548`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 27 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 27, "TestID" -> 
              "Osc > test06g > momentum kick", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000178`2.400935000140884, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001759999999961792, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]]], 
         "TestsSucceededIndices" -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
          13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27}, 
         "TestsFailedIndices" -> {}, "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Mult-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Mult-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with wrong results: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with errors: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.11`", "\"s\"", "seconds", "\"Seconds\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], 
                    "\[SpanFromLeft]"}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: Mult-tests.m", "TimeElapsed" -> 
         Quantity[0.11, "Seconds"], "TestsSucceededCount" -> 20, 
         "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[1 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 1, "TestID" -> 
              "Mult > test01a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00016`2.3546349804879165, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015399999999488045`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 2 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 2, "TestID" -> 
              "Mult > test02a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000138`2.290394084233228, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001390000000043301, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 3, "TestID" -> 
              "Mult > test02b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000123`2.2404201092713873, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012100000000003774`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 4, "TestID" -> 
              "Mult > test03a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000124`2.243936682994229, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012199999999751299`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 5, "TestID" -> 
              "Mult > test03b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00012`2.2296962438796144, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011899999999798183`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 6, "TestID" -> 
              "Mult > test03c", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000121`2.233300368148442, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011899999999798183`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 7, "TestID" -> 
              "Mult > test04a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000126`2.2508855429495522, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012599999999451938`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 8, "TestID" -> 
              "Mult > test04b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000113`2.2035934413154137, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011199999999433885`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 9, "TestID" -> 
              "Mult > test04c", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000112`2.1997330205021712, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001089999999948077, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 10, "TestID" -> 
              "Mult > test04d", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000109`2.1879414957726158, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010599999999527654`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 11, "TestID" -> 
              "Mult > test05a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000142`2.302803342215046, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001430000000013365, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 12, "TestID" -> 
              "Mult > test06a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000222`2.4968679722826326, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00021300000000223918`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 13, "TestID" -> 
              "Mult > test06b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000119`2.2260619592245243, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011800000000050659`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 14 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 14, "TestID" -> 
              "Mult > test07a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000156`2.3436395961864513, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015799999999899228`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 15 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 15, "TestID" -> 
              "Mult > test08a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000131`2.267786293487756, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001319999999935817, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 16 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 16, "TestID" -> 
              "Mult > test08b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000133`2.2743666387990777, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00013400000000984846`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 17 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 17, "TestID" -> 
              "Mult > test08b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000161`2.3573408738638397, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00016199999999599868`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 18 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 18, "TestID" -> 
              "Mult > test08d", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00016`2.3546349804879165, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001620000000031041, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 19 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 19, "TestID" -> 
              "Mult > test09a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000155`2.3408466960022816, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015500000000656655`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 20 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 20, "TestID" -> 
              "Mult > test10a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000113`2.2035934413154092, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011700000000303135`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]]], 
         "TestsSucceededIndices" -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
          13, 14, 15, 16, 17, 18, 19, 20}, "TestsFailedIndices" -> {}, 
         "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Test Report: OpCreate-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Test Report: OpCreate-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with wrong results: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with errors: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.12`", "\"s\"", "seconds", "\"Seconds\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], 
                    "\[SpanFromLeft]"}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: OpCreate-tests.m", "TimeElapsed" -> 
         Quantity[0.12, "Seconds"], "TestsSucceededCount" -> 23, 
         "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[1 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 1, "TestID" -> 
              "OpCreate > test01a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000218`2.488971491436595, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.000194000000007577, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 2 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 2, "TestID" -> 
              "OpCreate > test01b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000133`2.2743666387990773, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001339999999956376, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 3, "TestID" -> 
              "OpCreate > test01c", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000155`2.3408466960022807, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015400000000198588`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 4, "TestID" -> 
              "OpCreate > test02a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000415`2.7685630945440822, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00039599999999495594`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 5, "TestID" -> 
              "OpCreate > test02b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000188`2.4246728470956698, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015599999999693637`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 6, "TestID" -> 
              "OpCreate > test02c", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00031`2.6418766916662664, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0002789999999919246, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 7, "TestID" -> 
              "OpCreate > test03a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000183`2.4129660875624235, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001790000000028158, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 8, "TestID" -> 
              "OpCreate > test03b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000195`2.440549609194512, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001920000000055211, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 9, "TestID" -> 
              "OpCreate > test03c", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000187`2.422356604368493, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00018399999999729744`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 10, "TestID" -> 
              "OpCreate > test04a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000183`2.4129660875624213, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00018399999999729744`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 11, "TestID" -> 
              "OpCreate > test04b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000211`2.4747974531296846, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00021000000000270802`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 12, "TestID" -> 
              "OpCreate > test04c", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000137`2.287235564988401, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.000137999999992644, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 13, "TestID" -> 
              "OpCreate > test04d", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000132`2.271088929037842, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00013100000000321188`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 14 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 14, "TestID" -> 
              "OpCreate > test04e", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000202`2.4558663672786176, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00019900000000205864`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 15 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 15, "TestID" -> 
              "OpCreate > test04f", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000115`2.2112128381856055, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011500000000097543`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 16 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 16, "TestID" -> 
              "OpCreate > test04g", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000112`2.1997330205021712, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011299999999891952`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 17 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 17, "TestID" -> 
              "OpCreate > test04h", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000158`2.349172084786417, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015899999999646752`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 18 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 18, "TestID" -> 
              "OpCreate > test05a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000118`2.222397005138119, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001200000000025625, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 19 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 19, "TestID" -> 
              "OpCreate > test05b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000107`2.1798987755172012, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010600000000238197`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 20 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 20, "TestID" -> 
              "OpCreate > test05c", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000106`2.175820863096764, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010400000000032605`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 21 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 21, "TestID" -> 
              "OpCreate > test05d", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000118`2.222397005138115, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011599999999845068`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 22 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 22, "TestID" -> 
              "OpCreate > test06a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000118`2.222397005138119, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012000000000966793`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 23 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 23, "TestID" -> 
              "OpCreate > test06b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000121`2.2333003681484396, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012300000000209366`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]]], 
         "TestsSucceededIndices" -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
          13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}, 
         "TestsFailedIndices" -> {}, "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Osc-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Osc-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with wrong results: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with errors: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.13`", "\"s\"", "seconds", "\"Seconds\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], 
                    "\[SpanFromLeft]"}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: Osc-tests.m", "TimeElapsed" -> 
         Quantity[0.13, "Seconds"], "TestsSucceededCount" -> 20, 
         "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[1 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 1, "TestID" -> 
              "Osc > test00a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000222`2.4968679722826304, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0002230000000054133, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 2 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 2, "TestID" -> 
              "Osc > test00b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000151`2.3294919451251634, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015300000000451064`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 3, "TestID" -> 
              "Osc > test00c", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000162`2.3600300123746205, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00016499999999552983`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 4, "TestID" -> 
              "Osc > test01a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00017`2.3809639192102656, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001699999999971169, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 5, "TestID" -> 
              "Osc > test01b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000123`2.2404201092713896, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012199999999751299`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 6, "TestID" -> 
              "Osc > test01c", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000124`2.2439366829942267, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001200000000025625, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 7, "TestID" -> 
              "Osc > test01d", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000125`2.247425010840048, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012300000000209366`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 8, "TestID" -> 
              "Osc > test02a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000132`2.271088929037842, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00013299999999816237`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 9, "TestID" -> 
              "Osc > test02b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000118`2.222397005138115, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001160000000055561, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 10, "TestID" -> 
              "Osc > test02c", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000127`2.2543187187879465, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012900000000115597`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 11, "TestID" -> 
              "Osc > test02d", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000126`2.2508855429495545, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001279999999965753, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 12, "TestID" -> 
              "Osc > test03a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000121`2.233300368148442, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012399999999246347`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 13, "TestID" -> 
              "Osc > test03b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000195`2.4405496091945076, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00017000000000422233`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 14 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 14, "TestID" -> 
              "Osc > test04a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000186`2.420027942049906, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00018599999999935335`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 15 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 15, "TestID" -> 
              "Osc > test04b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00018`2.405787502935298, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00018000000000739647`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 16 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 16, "TestID" -> 
              "Osc > test04c", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000505`2.8538063759506533, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00029499999999416104`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 17 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 17, "TestID" -> 
              "Osc > test04d", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000189`2.4269768020052336, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001869999999968286, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 18 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 18, "TestID" -> 
              "Osc > test04e", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000126`2.2508855429495545, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012800000000368073`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 19 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 19, "TestID" -> 
              "Osc > test04f", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000119`2.2260619592245243, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001200000000025625, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 20 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 20, "TestID" -> 
              "Osc > test05a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000108`2.1839387533189414, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001060000000094874, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]]], 
         "TestsSucceededIndices" -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
          13, 14, 15, 16, 17, 18, 19, 20}, "TestsFailedIndices" -> {}, 
         "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Spins-tests.m\"", "SummaryItem"]}],
                     "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["14", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Spins-tests.m\"", "SummaryItem"]}],
                     "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["14", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["14", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with wrong results: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with errors: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.11`", "\"s\"", "seconds", "\"Seconds\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], 
                    "\[SpanFromLeft]"}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: Spins-tests.m", "TimeElapsed" -> 
         Quantity[0.11, "Seconds"], "TestsSucceededCount" -> 14, 
         "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[1 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 1, "TestID" -> 
              "Spins > test00a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000157`2.3464146502412273, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015700000000151704`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 2 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 2, "TestID" -> 
              "Spins > test00b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000153`2.335206428649588, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001529999999974052, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 3, "TestID" -> 
              "Spins > test00c", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000227`2.5065408550251163, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00022699999999531428`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 4, "TestID" -> 
              "Spins > test01a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000224`2.5007630161661565, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0002210000000033574, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 5, "TestID" -> 
              "Spins > test01b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000216`2.4849687489829226, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0002190000000013015, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 6, "TestID" -> 
              "Spins > test01c", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000126`2.2508855429495567, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012399999999246347`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 7, "TestID" -> 
              "Spins > test01d", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000116`2.2149729870589105, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011500000000097543`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 8, "TestID" -> 
              "Spins > test02a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000211`2.474797453129687, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00021200000000476393`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 9, "TestID" -> 
              "Spins > test02b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00013`2.2644583501388285, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00013099999999610645`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 10, "TestID" -> 
              "Spins > test03a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000128`2.257724967479858, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00013000000000573664`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 11, "TestID" -> 
              "Spins > test03b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000113`2.2035934413154092, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011099999999686361`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 12, "TestID" -> 
              "Spins > test03c", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000108`2.183938753318939, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010599999999527654`, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 13, "TestID" -> 
              "Spins > test04a", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000195`2.4405496091945076, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001850000000018781, "Seconds"], "MemoryUsed" -> 
              Quantity[112, "Bytes"]]], 14 -> TestResultObject[
             Association[
             "TestClass" -> None, "TestIndex" -> 14, "TestID" -> 
              "Spins > test04b", "Outcome" -> "Success", "Input" -> 
              HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.0001270000000000001`2.254318718787949, "Seconds"], 
              "CPUTimeUsed" -> Quantity[0.00012900000000115597`, "Seconds"], 
              "MemoryUsed" -> Quantity[112, "Bytes"]]]], 
         "TestsSucceededIndices" -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
          13, 14}, "TestsFailedIndices" -> {}, 
         "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.661470722417647*^9, 3.66147918435612*^9, 3.661532663394189*^9, 
   3.6615344318326693`*^9, 3.661534580284011*^9, 3.6615359671576033`*^9, 
   3.6615361924939737`*^9, 3.66153622908307*^9, 3.661536471669261*^9, 
   3.661537159097395*^9, 3.6615377171990423`*^9, 3.6615401726024437`*^9, 
   3.661542377949746*^9, 3.661599483227991*^9, 3.68285190519596*^9, 
   3.682860496662904*^9, 3.682860716425064*^9, 3.682861596524255*^9, 
   3.682861796649197*^9, 3.836676215914925*^9, 3.8554987467114067`*^9, 
   3.855499374588567*^9, 3.8555088993627787`*^9, 3.855509006749028*^9, 
   3.855509287683649*^9, 3.855511779328334*^9, 3.855512242547312*^9, {
   3.855512643612452*^9, 3.8555126721329393`*^9}, {3.855512761528514*^9, 
   3.855512787989524*^9}},
 CellLabel->
  "Out[32]//TableForm=",ExpressionUUID->"124a77a2-64b5-498f-9fe7-\
630c5986cdcb"]
}, Open  ]],

Cell["Make a report.", "Text",
 CellChangeTimes->{{3.635269787557482*^9, 3.6352698056777897`*^9}, {
  3.855512588963078*^9, 3.855512608940481*^9}},
 FontSize->18,ExpressionUUID->"95fe649a-8e59-499e-854e-ff37d92fdfe8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tests$passed$total", " ", "=", " ", 
   RowBox[{"Plus", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"tr", "[", 
         RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<TestsSucceededCount\>\"", 
        "]"}], "&"}], " ", "/@", " ", 
      RowBox[{"List", " ", "@@", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"k", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"Length", "[", "tr", "]"}]}], "}"}]}], "]"}]}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tests$failed$total", " ", "=", " ", 
   RowBox[{"Plus", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"tr", "[", 
         RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<TestsFailedCount\>\"", 
        "]"}], "&"}], " ", "/@", " ", 
      RowBox[{"List", " ", "@@", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"k", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"Length", "[", "tr", "]"}]}], "}"}]}], "]"}]}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ToString", "[", "tests$passed$total", " ", "]"}], " ", "<>", 
     " ", "\"\< tests passed\>\""}], ",", "\[IndentingNewLine]", 
    RowBox[{"FontWeight", "\[Rule]", " ", "Bold"}], ",", 
    RowBox[{"FontSize", "\[Rule]", " ", "18"}], ",", 
    RowBox[{"FontColor", "\[Rule]", " ", "Blue"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ToString", "[", "tests$failed$total", " ", "]"}], " ", "<>", 
     " ", "\"\< tests failed\>\""}], " ", ",", "\[IndentingNewLine]", 
    RowBox[{"FontWeight", "\[Rule]", " ", "Bold"}], ",", 
    RowBox[{"FontSize", "\[Rule]", " ", "18"}], ",", 
    RowBox[{"FontColor", "\[Rule]", " ", "Red"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.855512813021071*^9, 3.855512882596389*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"1a2b1bfe-4738-4185-a2e2-26ef206bd1ae"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"116 tests passed\"\>",
  StripOnInput->False,
  FontSize->18,
  FontWeight->Bold,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{
  3.855512646817952*^9, {3.855512762388159*^9, 3.8555127887022657`*^9}, 
   3.855512844728139*^9, 3.855512897303314*^9},
 CellLabel->
  "During evaluation of \
In[150]:=",ExpressionUUID->"a6b3a7c5-c05b-40e2-9d9a-0672777ae0fe"],

Cell[BoxData[
 StyleBox["\<\"0 tests failed\"\>",
  StripOnInput->False,
  FontSize->18,
  FontWeight->Bold,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{
  3.855512646817952*^9, {3.855512762388159*^9, 3.8555127887022657`*^9}, 
   3.855512844728139*^9, 3.85551289730779*^9},
 CellLabel->
  "During evaluation of \
In[150]:=",ExpressionUUID->"5ffb28f1-a5c3-4171-8e5c-f04ad0b90155"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Single spin: Taking repeated commutators", "Section",
 CellChangeTimes->{{3.6615992412243643`*^9, 
  3.6615992640686407`*^9}},ExpressionUUID->"dfefb8e6-da99-4bd0-9ed1-\
b6a5a4d41ff7"],

Cell["Create a  single-spin system to play with.", "Text",
 CellChangeTimes->{{3.661268509659028*^9, 3.6612685346131*^9}},
 FontSize->18,ExpressionUUID->"96351404-c45d-448b-bc63-4e93635996bb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<UniDyn`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "H", ",", "Ix", ",", " ", "Iy", ",", " ", "Iz", ",", "\[CapitalDelta]", ",",
    "\[Omega]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"{", 
    RowBox[{"\[CapitalDelta]", ",", "\[Omega]"}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SpinSingle$CreateOperators", "[", 
   RowBox[{"Ix", ",", " ", "Iy", ",", " ", "Iz"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.661209723717368*^9, 3.661209781037619*^9}, {
  3.661209830458013*^9, 3.661209884242929*^9}, {3.6612099236667957`*^9, 
  3.661209945634691*^9}, {3.6612105356033173`*^9, 3.66121054655971*^9}, {
  3.661210693381155*^9, 3.661210703790155*^9}, {3.661210750490106*^9, 
  3.661210763528246*^9}, {3.661211264597097*^9, 3.6612112665302753`*^9}, {
  3.661211551837948*^9, 3.661211598420218*^9}, {3.661211727699301*^9, 
  3.661211734299876*^9}, {3.6612126056876993`*^9, 3.661212605841806*^9}, {
  3.661213289440082*^9, 3.661213292682469*^9}, {3.661472121218009*^9, 
  3.661472127467431*^9}, {3.6614732226012573`*^9, 3.661473226009387*^9}, {
  3.661599753513829*^9, 3.66159975380103*^9}},
 FontSize->16,
 CellLabel->"In[37]:=",ExpressionUUID->"d3806585-b421-434c-abd9-2e9f505618f8"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "create", "\"Creating spin operators.\"", 2, 
   40, 5, 19343796877427458990, "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.661470731696002*^9, {3.661473226827879*^9, 3.6614732413574743`*^9}, 
   3.6614733653533897`*^9, 3.661479190802512*^9, {3.661532671097946*^9, 
   3.661532701734028*^9}, 3.661534438258952*^9, 3.661534587024744*^9, 
   3.661535974370524*^9, 3.6615361993293753`*^9, 3.6615362359561853`*^9, 
   3.661536478543803*^9, 3.661537166092059*^9, 3.661537724176804*^9, 
   3.661540179639825*^9, 3.661542387818375*^9, 3.661599483941996*^9, {
   3.661599757967067*^9, 3.661599762625066*^9}, 3.6828519054306498`*^9, 
   3.682860496924384*^9, 3.6828607165773783`*^9, 3.682861596587351*^9, 
   3.682861796748444*^9, 3.8366762289941187`*^9, 3.8554987472825127`*^9, 
   3.8554993754304028`*^9, 3.855509007465207*^9, 3.855509288263238*^9, 
   3.855511780175066*^9, 3.855512273050947*^9, 3.8555127887227097`*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"d5b426ea-e791-44fa-88ca-c2bb2aba2419"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "comm", 
   "\"Adding spin commutations relations.\"", 2, 40, 6, 19343796877427458990, 
   "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.661470731696002*^9, {3.661473226827879*^9, 3.6614732413574743`*^9}, 
   3.6614733653533897`*^9, 3.661479190802512*^9, {3.661532671097946*^9, 
   3.661532701734028*^9}, 3.661534438258952*^9, 3.661534587024744*^9, 
   3.661535974370524*^9, 3.6615361993293753`*^9, 3.6615362359561853`*^9, 
   3.661536478543803*^9, 3.661537166092059*^9, 3.661537724176804*^9, 
   3.661540179639825*^9, 3.661542387818375*^9, 3.661599483941996*^9, {
   3.661599757967067*^9, 3.661599762625066*^9}, 3.6828519054306498`*^9, 
   3.682860496924384*^9, 3.6828607165773783`*^9, 3.682861596587351*^9, 
   3.682861796748444*^9, 3.8366762289941187`*^9, 3.8554987472825127`*^9, 
   3.8554993754304028`*^9, 3.855509007465207*^9, 3.855509288263238*^9, 
   3.855511780175066*^9, 3.855512273050947*^9, 3.8555127887375927`*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"59f2e08c-4288-4725-a553-bfdd999a377f"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "nosimplify", 
   "\"No angular momentum L defined.\"", 2, 40, 7, 19343796877427458990, 
   "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.661470731696002*^9, {3.661473226827879*^9, 3.6614732413574743`*^9}, 
   3.6614733653533897`*^9, 3.661479190802512*^9, {3.661532671097946*^9, 
   3.661532701734028*^9}, 3.661534438258952*^9, 3.661534587024744*^9, 
   3.661535974370524*^9, 3.6615361993293753`*^9, 3.6615362359561853`*^9, 
   3.661536478543803*^9, 3.661537166092059*^9, 3.661537724176804*^9, 
   3.661540179639825*^9, 3.661542387818375*^9, 3.661599483941996*^9, {
   3.661599757967067*^9, 3.661599762625066*^9}, 3.6828519054306498`*^9, 
   3.682860496924384*^9, 3.6828607165773783`*^9, 3.682861596587351*^9, 
   3.682861796748444*^9, 3.8366762289941187`*^9, 3.8554987472825127`*^9, 
   3.8554993754304028`*^9, 3.855509007465207*^9, 3.855509288263238*^9, 
   3.855511780175066*^9, 3.855512273050947*^9, 3.855512788749164*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"5b66a6c0-1e99-4077-b39c-73c03b11d240"]
}, Open  ]],

Cell["Define a Hamiltonian", "Text",
 CellChangeTimes->{{3.661599281144273*^9, 3.661599289244596*^9}},
 FontSize->18,ExpressionUUID->"790179ad-eee3-4590-9ea5-c33ab8188bdb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"H", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", " ", "Iz"}], " ", "+", " ", 
    RowBox[{"\[Omega]", " ", "Ix"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.661599299803336*^9, 3.661599305960333*^9}},
 FontSize->16,
 CellLabel->"In[41]:=",ExpressionUUID->"05cbd74f-efee-4f1b-a208-324ee6d0e8c7"],

Cell[CellGroupData[{

Cell["Repeated commutators", "Subsection",
 CellChangeTimes->{{3.661599685100058*^9, 
  3.6615996923128147`*^9}},ExpressionUUID->"3edc2822-178a-4639-8fec-\
8b6ef46811f8"],

Cell[TextData[{
 "Define a function to take ",
 StyleBox["n",
  FontSlant->"Italic"],
 " commutators of an operator ",
 StyleBox["Op",
  FontSlant->"Italic"],
 " with the -i times the Hamiltonian ",
 StyleBox["H",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.6615993113406057`*^9, 3.661599347492508*^9}},
 FontSize->18,ExpressionUUID->"34675cf0-7997-4d0b-a96f-f8d967d8b44a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "RepeatedComm", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RepeatedComm", "[", 
    RowBox[{"1", ",", "H_", ",", "Op_"}], "]"}], " ", ":=", "  ", 
   RowBox[{"List", "[", "Op", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RepeatedComm", "[", 
    RowBox[{"n_", ",", "H_", ",", "Op_"}], "]"}], " ", ":=", "  ", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"RepeatedComm", "[", 
      RowBox[{
       RowBox[{"n", "-", "1"}], ",", "H", ",", "Op"}], "]"}], ",", 
     RowBox[{
      RowBox[{"-", "I"}], " ", 
      RowBox[{"Comm", "[", 
       RowBox[{"H", ",", 
        RowBox[{
         RowBox[{"RepeatedComm", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", "H", ",", "Op"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.661212641100292*^9, 3.661212767076599*^9}, {
  3.6612128063190527`*^9, 3.6612128825633593`*^9}, {3.661212919216586*^9, 
  3.661212939855138*^9}, {3.661212982178464*^9, 3.661213025278123*^9}, {
  3.6612130737536497`*^9, 3.661213151209804*^9}, {3.66121319869022*^9, 
  3.6612132063347263`*^9}},
 FontSize->16,
 CellLabel->"In[42]:=",ExpressionUUID->"00b31c7a-1c82-4221-8d6b-8ea8027766bc"],

Cell["Example calculation of repeated commutators", "Text",
 CellChangeTimes->{{3.6615993686319523`*^9, 3.66159937714777*^9}},
 FontSize->18,ExpressionUUID->"b43409e0-25e0-4280-ad0b-dcfaf4176c3f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"RepeatedComm", "[", 
      RowBox[{"5", ",", "H", ",", "Iz"}], "]"}], " ", "//", " ", "Expand"}], 
    " ", "//", " ", "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Sigma]", " ", "//", " ", "MatrixForm"}]}], "Input",
 FontSize->16,
 CellLabel->"In[45]:=",ExpressionUUID->"d89ee293-dc04-450b-b734-b369ac840c1e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Ix"}], " ", "\[CapitalDelta]"}], "+", 
          RowBox[{"Iz", " ", "\[Omega]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}], ")"}]}]},
      {
       RowBox[{"Iy", " ", "\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}], ")"}]}]},
      {
       RowBox[{"\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Ix", " ", "\[CapitalDelta]"}], "-", 
          RowBox[{"Iz", " ", "\[Omega]"}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"-", "Iy"}], " ", "\[Omega]"}]},
      {"Iz"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.66159938411355*^9, 3.6615994846077003`*^9, 
  3.6615997635683327`*^9, 3.68285190556966*^9, 3.6828604970924263`*^9, 
  3.682860716697659*^9, 3.6828615967202272`*^9, 3.682861796855742*^9, 
  3.836676229458321*^9, 3.8554987591486692`*^9, 3.855499375643495*^9, 
  3.855506170758301*^9, 3.855509007590726*^9, 3.855509288399206*^9, 
  3.855511780380909*^9, 3.855512282490025*^9, 3.855512788868209*^9},
 CellLabel->
  "Out[46]//MatrixForm=",ExpressionUUID->"b040c1ae-8aa0-4185-abf0-\
ed0af2fbaf84"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evolution", "Subsection",
 CellChangeTimes->{{3.6615996956735153`*^9, 
  3.661599699524911*^9}},ExpressionUUID->"21e579fd-e317-4909-88f0-\
fcd87faade2f"],

Cell[TextData[{
 "Use the Evolver function to calculate the evolution of the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "x"], TraditionalForm]],ExpressionUUID->
  "59019542-4873-491b-853a-ff8c00e829a6"],
 " operator under the on-resonance Zeeman Hamiltonian first."
}], "Text",
 CellChangeTimes->{{3.66147272233392*^9, 3.6614727570869102`*^9}, {
   3.6614727958845654`*^9, 3.661472872662071*^9}, {3.661473131854478*^9, 
   3.661473138759437*^9}, 3.6614733335244417`*^9, {3.6615993982390747`*^9, 
   3.661599469119955*^9}, {3.6615996560801477`*^9, 3.661599657964798*^9}, {
   3.661599702534917*^9, 3.6615997089029007`*^9}, {3.8555060700626297`*^9, 
   3.855506078104827*^9}},
 FontSize->18,ExpressionUUID->"c2b7809c-24c2-4413-a8f0-940fecbbaca8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalDelta]", " ", "\[Element]", "Reals"}], ",", 
     RowBox[{"\[CapitalDelta]", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Evolver", ",", 
     RowBox[{"quiet", " ", "->", " ", "True"}]}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "this", " ", "to", " ", "False", " ", "when", " ", 
    RowBox[{"debugging", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Evolver", "[", 
  RowBox[{
   RowBox[{"\[CapitalDelta]", " ", "Iz"}], ",", "t", ",", "Ix"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.855506099808861*^9, 3.85550613899752*^9}, {
  3.855506263713902*^9, 3.855506265407618*^9}, {3.855506708116395*^9, 
  3.8555067098087063`*^9}, {3.855509257319785*^9, 3.855509267460223*^9}, {
  3.855513001736157*^9, 3.855513013972969*^9}},
 FontSize->16,ExpressionUUID->"47722331-ebc1-4891-8149-acdea61bf41f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ix", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}], "+", 
  RowBox[{"Iy", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.855506141322672*^9, 3.855506174328322*^9, 
  3.855506593919085*^9, 3.855506710715446*^9, 3.8555090086884117`*^9, 
  3.8555092892690153`*^9, 3.855511781340281*^9, 3.8555118394049673`*^9, 
  3.85551228732617*^9, 3.855512789787835*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"47dba91c-7091-4db0-9762-fd582a8fa7ef"]
}, Open  ]],

Cell[TextData[{
 "As a check, use the Evolver function to calculate the evolution of the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "x"], TraditionalForm]],ExpressionUUID->
  "4e712f95-c2fc-45c3-a452-9daaefe90143"],
 " operator under the off-resonance Zeeman Hamiltonian."
}], "Text",
 CellChangeTimes->{{3.66147272233392*^9, 3.6614727570869102`*^9}, {
   3.6614727958845654`*^9, 3.661472872662071*^9}, {3.661473131854478*^9, 
   3.661473138759437*^9}, 3.6614733335244417`*^9, {3.6615993982390747`*^9, 
   3.661599469119955*^9}, {3.6615996560801477`*^9, 3.661599657964798*^9}, {
   3.661599702534917*^9, 3.6615997089029007`*^9}, {3.8555118011141853`*^9, 
   3.8555118060420322`*^9}},
 FontSize->18,ExpressionUUID->"33b08f2f-4f44-4b47-9de5-bca03ba21ea7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalDelta]", " ", "\[Element]", "Reals"}], ",", 
     RowBox[{"\[CapitalDelta]", " ", ">", " ", "0"}], ",", " ", 
     RowBox[{"\[Omega]", " ", "\[Element]", "Reals"}], ",", " ", 
     RowBox[{"\[Omega]", ">=", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Evolver", ",", 
     RowBox[{"quiet", " ", "->", " ", "True"}]}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "this", " ", "to", " ", "False", " ", "when", " ", 
    RowBox[{"debugging", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Evolver", "[", 
  RowBox[{"H", ",", "t", ",", "Ix"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6614726049703293`*^9, 3.661472606627006*^9}, {
   3.661472660162282*^9, 3.6614727211706247`*^9}, {3.661472858979467*^9, 
   3.66147291870306*^9}, {3.661473067543955*^9, 3.6614731530575647`*^9}, {
   3.661599416817731*^9, 3.661599417596442*^9}, {3.6615995568730087`*^9, 
   3.6615996382419167`*^9}, {3.855499929944619*^9, 3.8554999442292833`*^9}, {
   3.855506003173958*^9, 3.855506036357575*^9}, 3.8555061546068697`*^9, {
   3.855511808585477*^9, 3.85551182568471*^9}, {3.855513016260429*^9, 
   3.855513018282111*^9}},
 FontSize->16,ExpressionUUID->"5d7ee539-d3f4-48ca-aabe-bc10646fb5f2"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", "Iy", " ", 
      SuperscriptBox["\[CapitalDelta]", "3"]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}]]}]], " ", "Iy", " ", 
      SuperscriptBox["\[CapitalDelta]", "3"]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", "Iy", " ", "\[CapitalDelta]", " ", 
      SuperscriptBox["\[Omega]", "2"]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}]]}]], " ", "Iy", " ", 
      "\[CapitalDelta]", " ", 
      SuperscriptBox["\[Omega]", "2"]}], "+", 
     RowBox[{"Ix", " ", 
      SuperscriptBox["\[CapitalDelta]", "2"], " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}]]}]], " ", "Ix", " ", 
      SuperscriptBox["\[CapitalDelta]", "2"], " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "-", 
     RowBox[{"Iz", " ", "\[CapitalDelta]", " ", "\[Omega]", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}]]}]], " ", "Iz", " ", 
      "\[CapitalDelta]", " ", "\[Omega]", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}]]}]], " ", "Iz", " ", 
      "\[CapitalDelta]", " ", "\[Omega]", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}]]}]], " ", "Ix", " ", 
      SuperscriptBox["\[Omega]", "2"], " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.855499937277273*^9, 3.855499944620843*^9}, {
   3.855506008762875*^9, 3.855506037114565*^9}, {3.855506148307513*^9, 
   3.855506180680359*^9}, 3.8555090094071198`*^9, 3.855509289871201*^9, 
   3.855511782093729*^9, 3.85551279044482*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"36c43bba-fd42-4639-923d-ad8d1d1a05e5"]
}, Open  ]],

Cell["Some simplification is needed to get a nice-looking answer.", "Text",
 CellChangeTimes->{{3.66147272233392*^9, 3.6614727570869102`*^9}, {
   3.6614727958845654`*^9, 3.661472872662071*^9}, {3.661473131854478*^9, 
   3.661473138759437*^9}, 3.6614733335244417`*^9, {3.6615993982390747`*^9, 
   3.661599469119955*^9}, {3.6615996560801477`*^9, 3.661599657964798*^9}, {
   3.661599702534917*^9, 3.6615997089029007`*^9}, {3.8555118011141853`*^9, 
   3.8555118060420322`*^9}, {3.855512976407572*^9, 3.855512991990921*^9}},
 FontSize->18,ExpressionUUID->"329bcee6-c85d-4796-b76f-e8dc316da813"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalDelta]", " ", "\[Element]", "Reals"}], ",", 
     RowBox[{"\[CapitalDelta]", " ", ">", " ", "0"}], ",", " ", 
     RowBox[{"\[Omega]", " ", "\[Element]", "Reals"}], ",", " ", 
     RowBox[{"\[Omega]", ">=", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Rho]", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"ExpToTrig", "[", 
       RowBox[{"Evolver", "[", 
        RowBox[{"H", ",", "t", ",", "Ix"}], "]"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"Ix", ",", "Iy", ",", "Iz"}], "}"}], ",", "Simplify"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6614726049703293`*^9, 3.661472606627006*^9}, {
  3.661472660162282*^9, 3.6614727211706247`*^9}, {3.661472858979467*^9, 
  3.66147291870306*^9}, {3.661473067543955*^9, 3.6614731530575647`*^9}, {
  3.661599416817731*^9, 3.661599417596442*^9}, {3.6615995568730087`*^9, 
  3.6615996382419167`*^9}},
 FontSize->16,
 CellLabel->"In[55]:=",ExpressionUUID->"1d4ee958-21cd-4ee4-ab4d-3ebd68362402"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Ix", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], "+", 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "+", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox["\[CapitalDelta]", "2"], "+", 
    SuperscriptBox["\[Omega]", "2"]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", "Iz", " ", "\[CapitalDelta]", " ", "\[Omega]", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", "t", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[CapitalDelta]", "2"], "+", 
         SuperscriptBox["\[Omega]", "2"]}]]}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox["\[CapitalDelta]", "2"], "+", 
    SuperscriptBox["\[Omega]", "2"]}]], "+", 
  FractionBox[
   RowBox[{"Iy", " ", "\[CapitalDelta]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"t", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[CapitalDelta]", "2"], "+", 
     SuperscriptBox["\[Omega]", "2"]}]]]}]], "Output",
 CellChangeTimes->{
  3.6615995612094717`*^9, {3.661599591285344*^9, 3.661599639387163*^9}, 
   3.661599764230302*^9, 3.6828519060776367`*^9, 3.682860497552389*^9, 
   3.682860717136703*^9, 3.682861597114459*^9, 3.6828617972493477`*^9, 
   3.83667622985785*^9, 3.8554987674353733`*^9, 3.855499376675844*^9, 
   3.855509011327396*^9, 3.855509291544833*^9, 3.855511783969473*^9, 
   3.8555127924646463`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"1d37bd6f-cbf9-4daa-a2c4-4fe0371e18d6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantum optics", "Section",
 CellChangeTimes->{{3.661599727498398*^9, 
  3.661599733336445*^9}},ExpressionUUID->"075ed698-265d-4b6e-82d3-\
693ec9c7ae65"],

Cell[CellGroupData[{

Cell["Operators", "Subsection",
 CellChangeTimes->{{3.66159987182402*^9, 3.661599876507362*^9}},
 FontSize->24,ExpressionUUID->"8e5e675f-c4bf-4619-b9a3-6d74b82b3c81"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<UniDyn`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "H", ",", "Ix", ",", " ", "Iy", ",", " ", "Iz", ",", "\[CapitalDelta]", ",",
    "\[Omega]", ",", " ", "g", ",", " ", "F", ",", " ", "aL", ",", "aR", ",", 
   "Q$sym", ",", " ", "P$sym", ",", " ", "Q", ",", "P", ",", "QP$rules"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"{", 
    RowBox[{
    "\[CapitalDelta]", ",", "\[Omega]", ",", "\[CapitalDelta]\[Omega]", ",", 
     "g", ",", " ", "F", ",", "\[Phi]"}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CreateOperator", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ix", ",", " ", "Iy", ",", " ", "Iz"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"aL", ",", "aR"}], "}"}]}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SpinSingle$CreateOperators", "[", 
   RowBox[{"Ix", ",", " ", "Iy", ",", " ", "Iz", ",", " ", 
    RowBox[{"1", "/", "2"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OscSingle$CreateOperators", "[", 
    RowBox[{"aL", ",", "aR"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q$sym", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"aR", "+", "aL"}], ")"}], "/", 
    RowBox[{"Sqrt", "[", "2", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P$sym", " ", "=", 
   RowBox[{"I", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"aR", "-", "aL"}], ")"}], "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QP$rules", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"aR", " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Q", " ", "-", " ", 
         RowBox[{"I", " ", "P"}]}], ")"}], "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}]}], ",", " ", 
     RowBox[{"aL", " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Q", " ", "+", " ", 
         RowBox[{"I", " ", "P"}]}], ")"}], "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQve5LGb+J+2tHXZOFYiCae8U5GRAtfKxdGUSnhJVq
gGl/E20QneD3uQREq74MLAPROUZrOkD0Z4+fnWB63fl+sPrnBRNBdLa08AUQ
zfIjAExXXPj1GUTnFp39CaLXJHzjNAXS02ac5ALRixi3lYNo4Q+7wLS6qN5Z
EH3y2lQw/e6nmv4WIG309R2YbrC9vANEP/Nx2AmirVgiGj4B6fXTGvpAtJLn
zzUg+k43z3oQva5x414QfWVSyj4QvcH91XkQfWki7yUQnWL//iaIrtVf+BhE
P/I+9ApEK/SJvQfRbFe/fwHRxs7830D0vkUeYp+BdNKt+eIg+pNFqCyIfrGp
DUzPXKO9HkSHzLwEpnfXpn2vL3jtKG99GUwDAAcQx/E=
  "],
 FontSize->16,
 CellLabel->"In[57]:=",ExpressionUUID->"fcf52e1f-2f00-4ab4-9769-ba630c5f4602"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "nocreate", 
   "\"Spin operators already exist.\"", 2, 61, 8, 19343796877427458990, 
   "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.6615997768521233`*^9, 3.661599796428073*^9}, 
   3.661599827919055*^9, 3.6615998611201982`*^9, 3.66160012144375*^9, 
   3.661600246675536*^9, 3.6616002770961447`*^9, {3.661600384545188*^9, 
   3.66160040191814*^9}, {3.661600538596599*^9, 3.6616005417500257`*^9}, 
   3.6616006467360973`*^9, 3.66160068952705*^9, 3.661601005186863*^9, 
   3.661601526245742*^9, 3.6616021797482977`*^9, 3.6828519061147223`*^9, 
   3.6828604976082277`*^9, 3.6828607171824493`*^9, 3.682860991230378*^9, 
   3.682861516176228*^9, 3.682861597138839*^9, 3.68286179727414*^9, 
   3.836676240413369*^9, 3.855509011414583*^9, 3.855509291645068*^9, 
   3.855511784067314*^9, 3.855512792518065*^9},
 CellLabel->
  "During evaluation of \
In[57]:=",ExpressionUUID->"e847adb9-dc68-48a7-afd3-98d60819355f"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "comm", 
   "\"Adding spin commutations relations.\"", 2, 61, 9, 19343796877427458990, 
   "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.6615997768521233`*^9, 3.661599796428073*^9}, 
   3.661599827919055*^9, 3.6615998611201982`*^9, 3.66160012144375*^9, 
   3.661600246675536*^9, 3.6616002770961447`*^9, {3.661600384545188*^9, 
   3.66160040191814*^9}, {3.661600538596599*^9, 3.6616005417500257`*^9}, 
   3.6616006467360973`*^9, 3.66160068952705*^9, 3.661601005186863*^9, 
   3.661601526245742*^9, 3.6616021797482977`*^9, 3.6828519061147223`*^9, 
   3.6828604976082277`*^9, 3.6828607171824493`*^9, 3.682860991230378*^9, 
   3.682861516176228*^9, 3.682861597138839*^9, 3.68286179727414*^9, 
   3.836676240413369*^9, 3.855509011414583*^9, 3.855509291645068*^9, 
   3.855511784067314*^9, 3.855512792530558*^9},
 CellLabel->
  "During evaluation of \
In[57]:=",ExpressionUUID->"105968ac-ddb6-4ca3-a17e-27491348997c"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "simplify", 
   "\"Angular momentum L = 1/2. Adding operator simplification rules.\"", 2, 
   61, 10, 19343796877427458990, "Local", "Spins`SpinSingle$CreateOperators"},
  
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.6615997768521233`*^9, 3.661599796428073*^9}, 
   3.661599827919055*^9, 3.6615998611201982`*^9, 3.66160012144375*^9, 
   3.661600246675536*^9, 3.6616002770961447`*^9, {3.661600384545188*^9, 
   3.66160040191814*^9}, {3.661600538596599*^9, 3.6616005417500257`*^9}, 
   3.6616006467360973`*^9, 3.66160068952705*^9, 3.661601005186863*^9, 
   3.661601526245742*^9, 3.6616021797482977`*^9, 3.6828519061147223`*^9, 
   3.6828604976082277`*^9, 3.6828607171824493`*^9, 3.682860991230378*^9, 
   3.682861516176228*^9, 3.682861597138839*^9, 3.68286179727414*^9, 
   3.836676240413369*^9, 3.855509011414583*^9, 3.855509291645068*^9, 
   3.855511784067314*^9, 3.855512792547571*^9},
 CellLabel->
  "During evaluation of \
In[57]:=",ExpressionUUID->"38d9a82e-6fb0-42cf-8804-10645ca3e819"],

Cell[BoxData[
 TemplateBox[{
  "OscSingle$CreateOperators", "nocreate", 
   "\"Oscillator operators already exist.\"", 2, 62, 11, 19343796877427458990,
    "Local", "Osc`OscSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.6615997768521233`*^9, 3.661599796428073*^9}, 
   3.661599827919055*^9, 3.6615998611201982`*^9, 3.66160012144375*^9, 
   3.661600246675536*^9, 3.6616002770961447`*^9, {3.661600384545188*^9, 
   3.66160040191814*^9}, {3.661600538596599*^9, 3.6616005417500257`*^9}, 
   3.6616006467360973`*^9, 3.66160068952705*^9, 3.661601005186863*^9, 
   3.661601526245742*^9, 3.6616021797482977`*^9, 3.6828519061147223`*^9, 
   3.6828604976082277`*^9, 3.6828607171824493`*^9, 3.682860991230378*^9, 
   3.682861516176228*^9, 3.682861597138839*^9, 3.68286179727414*^9, 
   3.836676240413369*^9, 3.855509011414583*^9, 3.855509291645068*^9, 
   3.855511784067314*^9, 3.8555127925593348`*^9},
 CellLabel->
  "During evaluation of \
In[57]:=",ExpressionUUID->"dd03164b-2a00-45f7-89aa-f894f3adbcfa"],

Cell[BoxData[
 TemplateBox[{
  "OscSingle$CreateOperators", "comm", 
   "\"Adding oscillator commutations relations.\"", 2, 62, 12, 
   19343796877427458990, "Local", "Osc`OscSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.6615997768521233`*^9, 3.661599796428073*^9}, 
   3.661599827919055*^9, 3.6615998611201982`*^9, 3.66160012144375*^9, 
   3.661600246675536*^9, 3.6616002770961447`*^9, {3.661600384545188*^9, 
   3.66160040191814*^9}, {3.661600538596599*^9, 3.6616005417500257`*^9}, 
   3.6616006467360973`*^9, 3.66160068952705*^9, 3.661601005186863*^9, 
   3.661601526245742*^9, 3.6616021797482977`*^9, 3.6828519061147223`*^9, 
   3.6828604976082277`*^9, 3.6828607171824493`*^9, 3.682860991230378*^9, 
   3.682861516176228*^9, 3.682861597138839*^9, 3.68286179727414*^9, 
   3.836676240413369*^9, 3.855509011414583*^9, 3.855509291645068*^9, 
   3.855511784067314*^9, 3.8555127925703487`*^9},
 CellLabel->
  "During evaluation of \
In[57]:=",ExpressionUUID->"43712394-68ab-457d-ad29-2cd23cf5805d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Q$sym", " ", "/.", " ", "QP$rules"}], " ", "//", " ", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P$sym", " ", "/.", " ", "QP$rules"}], " ", "//", " ", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.682860938059808*^9, 3.6828609575341873`*^9}},
 FontSize->16,
 CellLabel->"In[66]:=",ExpressionUUID->"3557371a-385f-4036-85c1-cb279db328ba"],

Cell[BoxData["Q"], "Output",
 CellChangeTimes->{{3.6828609406195993`*^9, 3.682860957997595*^9}, {
   3.6828609930187063`*^9, 3.682861007672043*^9}, 3.682861517989829*^9, 
   3.682861597249576*^9, 3.6828617973676558`*^9, 3.8366762407134733`*^9, 
   3.855509011493307*^9, 3.855509291774535*^9, 3.855511784193738*^9, 
   3.855512792589796*^9},
 FontSize->16,
 CellLabel->"Out[66]=",ExpressionUUID->"d6e33791-9808-47aa-b1c0-83e598065710"],

Cell[BoxData["P"], "Output",
 CellChangeTimes->{{3.6828609406195993`*^9, 3.682860957997595*^9}, {
   3.6828609930187063`*^9, 3.682861007672043*^9}, 3.682861517989829*^9, 
   3.682861597249576*^9, 3.6828617973676558`*^9, 3.8366762407134733`*^9, 
   3.855509011493307*^9, 3.855509291774535*^9, 3.855511784193738*^9, 
   3.855512792595601*^9},
 FontSize->16,
 CellLabel->"Out[67]=",ExpressionUUID->"06d94bd2-04ec-411b-81bb-2d8569855990"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hamiltonians", "Subsection",
 CellChangeTimes->{{3.6615998667071342`*^9, 3.661599884226001*^9}, 
   3.661601417076589*^9},
 FontSize->24,ExpressionUUID->"2ee4a907-cd3a-4091-aa99-b9f4faca65b3"],

Cell[CellGroupData[{

Cell["Free evolution", "Subsubsection",
 CellChangeTimes->{{3.6616014374360332`*^9, 
  3.661601442085188*^9}},ExpressionUUID->"23381176-f60d-4f95-a313-\
e254cbc06dc7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"\[Omega]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[Omega]", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$0", " ", "=", " ", 
   RowBox[{
    FractionBox["\[Omega]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"aR", "**", "aL"}], " ", "+", " ", 
      RowBox[{"aL", "**", "aR"}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599989586681*^9}, {
  3.661600801286552*^9, 3.661600807763794*^9}, {3.6616014623905563`*^9, 
  3.6616014681434603`*^9}, {3.661602151408037*^9, 3.661602151876782*^9}},
 FontSize->16,
 CellLabel->"In[68]:=",ExpressionUUID->"f1498f4a-d74e-4bbc-ac14-f62106dde580"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Evolver", "[", 
    RowBox[{"H$0", ",", "t", ",", "Q$sym"}], "]"}], "  ", "/.", " ", 
   "QP$rules"}], "]"}]], "Input",
 CellChangeTimes->{{3.6615999979301577`*^9, 3.661600052902892*^9}, {
  3.661600252980455*^9, 3.6616003005713778`*^9}, {3.661600331228952*^9, 
  3.6616003753055487`*^9}, {3.661600425748569*^9, 3.6616004460721083`*^9}, {
  3.661600561499104*^9, 3.661600577381302*^9}, {3.661600638480967*^9, 
  3.661600666015003*^9}, {3.661600701280002*^9, 3.6616007310693493`*^9}, {
  3.661601465126539*^9, 3.66160147977136*^9}},
 FontSize->16,
 CellLabel->"In[70]:=",ExpressionUUID->"44173c89-4aae-449c-80c4-0631752e388b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Q", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"t", " ", "\[Omega]"}], "]"}]}], "-", 
  RowBox[{"P", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"t", " ", "\[Omega]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.661600376064962*^9, {3.661600426843581*^9, 3.66160044692731*^9}, {
   3.661600567841215*^9, 3.66160057816276*^9}, {3.661600643374647*^9, 
   3.6616006677359037`*^9}, {3.661600698704836*^9, 3.661600731836134*^9}, 
   3.6616015274701843`*^9, 3.661602183557083*^9, 3.661602503908524*^9, 
   3.6828519066941977`*^9, 3.6828604981175003`*^9, 3.6828607177263117`*^9, {
   3.68286157872759*^9, 3.682861597688429*^9}, 3.682861797767411*^9, 
   3.836676241304038*^9, 3.855509012916051*^9, 3.855509292913879*^9, 
   3.855511785499755*^9, 3.855512793866416*^9},
 FontSize->16,
 CellLabel->"Out[70]=",ExpressionUUID->"151c9eb8-4a5a-4729-8b98-d9216aea5145"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Position or momentum kick", "Subsubsection",
 CellChangeTimes->{{3.682860588363377*^9, 3.682860595142614*^9}, {
  3.682860754542385*^9, 
  3.682860756985935*^9}},ExpressionUUID->"732605c5-2fc7-4600-84f6-\
1843950a2e2a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Delta]x", ",", "\[Delta]p"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"\[Delta]x", ",", " ", "Reals"}], "]"}], ",", 
     RowBox[{"Element", "[", 
      RowBox[{"\[Delta]p", ",", " ", "Reals"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$0$x$kick", " ", "=", " ", 
   RowBox[{"\[Delta]x", " ", "P$sym"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$0$p$kick", " ", "=", " ", 
   RowBox[{"\[Delta]p", " ", "Q$sym"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.682860602373087*^9, 3.6828606886124907`*^9}, {
  3.6828607412552156`*^9, 3.682860783850297*^9}, {3.6828608502780323`*^9, 
  3.6828609082849617`*^9}, {3.682861014319292*^9, 3.682861025296002*^9}},
 FontSize->16,
 CellLabel->"In[71]:=",ExpressionUUID->"486f6406-f25c-4edf-89ab-3706c90469ca"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Evolver", "[", 
     RowBox[{"H$0$x$kick", " ", ",", "t", ",", "Q$sym"}], "]"}], "  ", "/.", 
    " ", 
    RowBox[{"QP$rules", " ", "~", "Join", "~", " ", 
     RowBox[{"{", 
      RowBox[{"t", "\[Rule]", " ", "1"}], "}"}]}]}], "]"}], "  ", "//", " ", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Evolver", "[", 
     RowBox[{"H$0$p$kick", " ", ",", "t", ",", "P$sym"}], "]"}], "  ", "/.", 
    " ", 
    RowBox[{"QP$rules", " ", "~", "Join", "~", " ", 
     RowBox[{"{", 
      RowBox[{"t", "\[Rule]", " ", "1"}], "}"}]}]}], "]"}], "  ", "//", " ", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.682860694277486*^9, 3.682860700189041*^9}, {
  3.6828607877223043`*^9, 3.682860856687479*^9}},
 FontSize->16,
 CellLabel->"In[75]:=",ExpressionUUID->"9a3a138a-7ef8-42be-9233-03185cb08747"],

Cell[BoxData[
 RowBox[{"Q", "-", "\[Delta]x"}]], "Output",
 CellChangeTimes->{{3.6828607011285877`*^9, 3.682860717825715*^9}, 
   3.682860748017318*^9, {3.682860809881761*^9, 3.682860826895647*^9}, {
   3.682860858932296*^9, 3.6828609104825687`*^9}, {3.6828610116017857`*^9, 
   3.6828610270359163`*^9}, {3.6828615787867107`*^9, 3.6828615978124113`*^9}, 
   3.682861797864156*^9, 3.836676241425955*^9, 3.855509013048161*^9, 
   3.855509293062652*^9, 3.8555117856780767`*^9, 3.85551279398372*^9},
 FontSize->16,
 CellLabel->"Out[75]=",ExpressionUUID->"a44671da-5ff4-4f04-96d9-45f266d5a98e"],

Cell[BoxData[
 RowBox[{"P", "+", "\[Delta]p"}]], "Output",
 CellChangeTimes->{{3.6828607011285877`*^9, 3.682860717825715*^9}, 
   3.682860748017318*^9, {3.682860809881761*^9, 3.682860826895647*^9}, {
   3.682860858932296*^9, 3.6828609104825687`*^9}, {3.6828610116017857`*^9, 
   3.6828610270359163`*^9}, {3.6828615787867107`*^9, 3.6828615978124113`*^9}, 
   3.682861797864156*^9, 3.836676241425955*^9, 3.855509013048161*^9, 
   3.855509293062652*^9, 3.8555117856780767`*^9, 3.855512793989051*^9},
 FontSize->16,
 CellLabel->"Out[76]=",ExpressionUUID->"ea6f59f7-9a0e-464c-8fff-8b37e35e348d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Phase Kick", "Subsubsection",
 CellChangeTimes->{{3.6616014374360332`*^9, 3.661601442085188*^9}, {
  3.661602158368636*^9, 
  3.6616021598723507`*^9}},ExpressionUUID->"41858e2d-7e10-4e49-b231-\
c669ae98c3af"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"\[Omega]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[Omega]", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$0$phase$kick", " ", "=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"(", 
      RowBox[{"\[Omega]", "+", "\[CapitalDelta]\[Omega]"}], ")"}], "2"], " ", 
    
    RowBox[{"(", 
     RowBox[{
      RowBox[{"aR", "**", "aL"}], " ", "+", " ", 
      RowBox[{"aL", "**", "aR"}]}], ")"}]}]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599989586681*^9}, {
  3.661600801286552*^9, 3.661600807763794*^9}, {3.6616014623905563`*^9, 
  3.6616014681434603`*^9}, {3.661602151408037*^9, 3.661602214021371*^9}, {
  3.661602491512672*^9, 3.661602492367771*^9}, {3.6828606400056334`*^9, 
  3.682860643777688*^9}},
 FontSize->16,
 CellLabel->"In[77]:=",ExpressionUUID->"08e6d34d-c4fb-43b3-b202-a94f0f18fa91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Evolver", "[", 
      RowBox[{"H$0$phase$kick", ",", "t", ",", "Q$sym"}], "]"}], "  ", "/.", 
     " ", "QP$rules"}], "]"}], " ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{"\[CapitalDelta]\[Omega]", "\[Rule]", " ", 
     RowBox[{"\[CapitalDelta]\[Phi]", "/", "t"}]}], "}"}]}], " ", "//", " ", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.6615999979301577`*^9, 3.661600052902892*^9}, {
  3.661600252980455*^9, 3.6616003005713778`*^9}, {3.661600331228952*^9, 
  3.6616003753055487`*^9}, {3.661600425748569*^9, 3.6616004460721083`*^9}, {
  3.661600561499104*^9, 3.661600577381302*^9}, {3.661600638480967*^9, 
  3.661600666015003*^9}, {3.661600701280002*^9, 3.6616007310693493`*^9}, {
  3.661601465126539*^9, 3.66160147977136*^9}, {3.6616022234776773`*^9, 
  3.661602260916905*^9}, {3.661602496981515*^9, 3.661602497788101*^9}, {
  3.6828606480883417`*^9, 3.682860649632365*^9}},
 FontSize->16,
 CellLabel->"In[79]:=",ExpressionUUID->"c76ec6b7-1daf-424d-af2b-440c438305a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Q", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[CapitalDelta]\[Phi]", "+", 
     RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], "-", 
  RowBox[{"P", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[CapitalDelta]\[Phi]", "+", 
     RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.661600376064962*^9, {3.661600426843581*^9, 3.66160044692731*^9}, {
   3.661600567841215*^9, 3.66160057816276*^9}, {3.661600643374647*^9, 
   3.6616006677359037`*^9}, {3.661600698704836*^9, 3.661600731836134*^9}, 
   3.6616015274701843`*^9, 3.6616021840186167`*^9, 3.6616022191381903`*^9, {
   3.6616022558467607`*^9, 3.661602262348469*^9}, {3.661602499638403*^9, 
   3.6616025048683853`*^9}, 3.682851907815606*^9, 3.6828604990126743`*^9, 
   3.682860650825396*^9, 3.6828607187728977`*^9, {3.682861578859144*^9, 
   3.6828615988174343`*^9}, 3.682861798703857*^9, 3.836676242485388*^9, 
   3.855509016930999*^9, 3.8555092963246403`*^9, 3.8555117890645943`*^9, 
   3.855512797599947*^9},
 FontSize->16,
 CellLabel->"Out[79]=",ExpressionUUID->"9dfe378d-03c2-42eb-986b-07186e46b018"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Force ", "Subsubsection",
 CellChangeTimes->{{3.661601509513736*^9, 3.661601517167842*^9}, {
  3.661601685086095*^9, 
  3.6616016856139593`*^9}},ExpressionUUID->"7c90b3f8-f411-4d32-af1e-\
1f756afc0518"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"F", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"F", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$1", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", " ", "F"}], " ", "Q$sym"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599989586681*^9}, {
  3.661600801286552*^9, 3.661600807763794*^9}, {3.661600966070225*^9, 
  3.661601010459141*^9}, {3.661601621266842*^9, 3.661601648932316*^9}, {
  3.682861688695294*^9, 3.682861758265929*^9}},
 FontSize->16,
 CellLabel->"In[80]:=",ExpressionUUID->"746e8bbc-b64f-4a76-a7ad-0943b01b70ae"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Evolver", "[", 
    RowBox[{"H$1", ",", "t", ",", "Q$sym"}], "]"}], " ", "/.", " ", 
   "QP$rules"}], " ", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Evolver", "[", 
    RowBox[{"H$1", ",", "t", ",", "P$sym"}], "]"}], " ", "/.", " ", 
   "QP$rules"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6615999979301577`*^9, 3.661600052902892*^9}, {
  3.661600252980455*^9, 3.6616003005713778`*^9}, {3.661600331228952*^9, 
  3.6616003753055487`*^9}, {3.661600425748569*^9, 3.6616004460721083`*^9}, {
  3.661600561499104*^9, 3.661600577381302*^9}, {3.661600638480967*^9, 
  3.661600666015003*^9}, {3.661600701280002*^9, 3.6616007310693493`*^9}, {
  3.661601025010738*^9, 3.6616010520976973`*^9}, {3.66160156137223*^9, 
  3.661601567965077*^9}, {3.66160169077514*^9, 3.661601690909215*^9}, {
  3.682861636522544*^9, 3.682861637763401*^9}, {3.682861709435505*^9, 
  3.682861711471403*^9}, {3.682861764480056*^9, 3.682861784985497*^9}, {
  3.682861846394918*^9, 3.682861862295977*^9}, {3.682861922558144*^9, 
  3.682861922952827*^9}},
 FontSize->16,
 CellLabel->"In[82]:=",ExpressionUUID->"8e911bd6-e939-4418-b6f5-a7c007985682"],

Cell[BoxData["Q"], "Output",
 CellChangeTimes->{
  3.661600376064962*^9, {3.661600426843581*^9, 3.66160044692731*^9}, {
   3.661600567841215*^9, 3.66160057816276*^9}, {3.661600643374647*^9, 
   3.6616006677359037`*^9}, {3.661600698704836*^9, 3.661600731836134*^9}, {
   3.6616010484626513`*^9, 3.6616010618633747`*^9}, 3.6616015385193167`*^9, 
   3.6616015689219103`*^9, {3.6616016294550962`*^9, 3.661601652197709*^9}, 
   3.661601691539207*^9, 3.6616021841194553`*^9, 3.661602350590143*^9, 
   3.661602505026248*^9, 3.6828519079221478`*^9, 3.68286049913379*^9, 
   3.682860718851204*^9, {3.682861578905405*^9, 3.682861598900725*^9}, {
   3.6828616487690983`*^9, 3.682861733899745*^9}, 3.682861798764843*^9, 
   3.6828619034474077`*^9, {3.6828619514686813`*^9, 3.682861957007148*^9}, 
   3.836676242610971*^9, 3.85550901706633*^9, 3.8555092964683027`*^9, 
   3.855511789222*^9, 3.855512797721835*^9},
 FontSize->16,
 CellLabel->"Out[82]=",ExpressionUUID->"ab99d5a2-d1f1-4226-8fe8-1282fb696642"],

Cell[BoxData[
 RowBox[{"P", "-", 
  RowBox[{"F", " ", "t"}]}]], "Output",
 CellChangeTimes->{
  3.661600376064962*^9, {3.661600426843581*^9, 3.66160044692731*^9}, {
   3.661600567841215*^9, 3.66160057816276*^9}, {3.661600643374647*^9, 
   3.6616006677359037`*^9}, {3.661600698704836*^9, 3.661600731836134*^9}, {
   3.6616010484626513`*^9, 3.6616010618633747`*^9}, 3.6616015385193167`*^9, 
   3.6616015689219103`*^9, {3.6616016294550962`*^9, 3.661601652197709*^9}, 
   3.661601691539207*^9, 3.6616021841194553`*^9, 3.661602350590143*^9, 
   3.661602505026248*^9, 3.6828519079221478`*^9, 3.68286049913379*^9, 
   3.682860718851204*^9, {3.682861578905405*^9, 3.682861598900725*^9}, {
   3.6828616487690983`*^9, 3.682861733899745*^9}, 3.682861798764843*^9, 
   3.6828619034474077`*^9, {3.6828619514686813`*^9, 3.682861957007148*^9}, 
   3.836676242610971*^9, 3.85550901706633*^9, 3.8555092964683027`*^9, 
   3.855511789222*^9, 3.855512797727778*^9},
 FontSize->16,
 CellLabel->"Out[83]=",ExpressionUUID->"5edcbd0c-d609-4fff-8657-2c5186ec4e85"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{"Evolver", "[", 
   RowBox[{"H$1", ",", "t", ",", "aR"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"Evolver", "[", 
   RowBox[{"H$1", ",", "t", ",", "aL"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6828619659969263`*^9, 3.682861968297961*^9}},
 FontSize->16,
 CellLabel->"In[84]:=",ExpressionUUID->"f747de03-a945-4f2f-9a8e-2e12764ebdf5"],

Cell[BoxData[
 RowBox[{"aR", "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "F", " ", "t"}], 
   SqrtBox["2"]]}]], "Output",
 CellChangeTimes->{{3.682861957126622*^9, 3.68286196884212*^9}, 
   3.836676242708151*^9, 3.855509017237321*^9, 3.8555092966211243`*^9, 
   3.855511789395536*^9, 3.8555127978441*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"ea78e384-0d4d-4570-8284-6f7fa742c495"],

Cell[BoxData[
 RowBox[{"aL", "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "F", " ", "t"}], 
   SqrtBox["2"]]}]], "Output",
 CellChangeTimes->{{3.682861957126622*^9, 3.68286196884212*^9}, 
   3.836676242708151*^9, 3.855509017237321*^9, 3.8555092966211243`*^9, 
   3.855511789395536*^9, 3.855512797876795*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"8e97d75d-bf51-4aa5-a4e7-0068e92fcd8f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Squeezing", "Subsubsection",
 CellChangeTimes->{{3.661601484143311*^9, 
  3.661601489493829*^9}},ExpressionUUID->"00e1af55-0f63-4636-bebc-\
c1a90e5a9f97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"\[CapitalDelta]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[CapitalDelta]", " ", ">", " ", "0"}], ",", " ", 
     RowBox[{"Element", "[", 
      RowBox[{"\[Omega]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[Omega]", " ", ">", " ", "0"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599983983083*^9}, {
  3.66160078782301*^9, 3.661600795025132*^9}, {3.661600826867373*^9, 
  3.6616008381735077`*^9}, {3.661603544609684*^9, 3.6616035787360067`*^9}, {
  3.6616036156599503`*^9, 3.661603619612896*^9}},
 FontSize->16,
 CellLabel->"In[86]:=",ExpressionUUID->"222b41f0-d4c0-4bd3-8b75-35b0f7259305"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Evolver", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[CapitalDelta]", "2"]}], " ", "I", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"aR", "**", "aR"}], " ", "-", " ", 
          RowBox[{"aL", "**", "aL"}]}], ")"}]}], ",", "t", ",", "#"}], "]"}], 
     "  ", "/.", " ", "QP$rules"}], "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"Q$sym", ",", " ", "P$sym"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6616038851683683`*^9, 3.661603946848551*^9}},
 FontSize->16,
 CellLabel->"In[87]:=",ExpressionUUID->"c90fd35e-d52f-4e84-8b4c-a1ae6030084e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"t", " ", "\[CapitalDelta]"}]], " ", "Q"}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "t"}], " ", "\[CapitalDelta]"}]], " ", "P"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.661603896686514*^9, 3.6616039476747227`*^9}, 
   3.682851908296933*^9, 3.6828604995403557`*^9, 3.6828607191935053`*^9, {
   3.682861578972477*^9, 3.6828615992656927`*^9}, 3.682861799203569*^9, 
   3.836676243159493*^9, 3.8555090182488403`*^9, 3.8555092975539513`*^9, 
   3.8555117903572683`*^9, 3.8555127988572817`*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"1adb322c-44a7-48c3-8bae-f59027e2c340"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Evolver", "[", 
      RowBox[{
       RowBox[{
        FractionBox["\[CapitalDelta]", "2"], " ", "I", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"aR", "**", "aR"}], " ", "-", " ", 
          RowBox[{"aL", "**", "aL"}]}], ")"}]}], ",", "t", ",", "#"}], "]"}], 
     "  ", "/.", " ", "QP$rules"}], "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"Q$sym", ",", " ", "P$sym"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6616007406826563`*^9, 3.6616007508623447`*^9}, {
  3.6616008463686867`*^9, 3.661600863540935*^9}, {3.661602942624221*^9, 
  3.661602943210248*^9}, {3.661603589595882*^9, 3.661603793454712*^9}, {
  3.661603959052683*^9, 3.66160396075235*^9}},
 FontSize->16,
 CellLabel->"In[88]:=",ExpressionUUID->"e9f53545-3cd2-418c-a762-9bddaa4dfaca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "t"}], " ", "\[CapitalDelta]"}]], " ", "Q"}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"t", " ", "\[CapitalDelta]"}]], " ", "P"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.66160369963689*^9, 3.661603794264834*^9}, 
   3.661603962100545*^9, 3.682851908574813*^9, 3.682860499800934*^9, 
   3.682860719461383*^9, {3.68286157901229*^9, 3.6828615995153017`*^9}, 
   3.682861799455964*^9, 3.83667624341029*^9, 3.855509019120508*^9, 
   3.85550929832764*^9, 3.8555117911342087`*^9, 3.855512799653749*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"1c5aacc9-a35f-4f0d-b361-b350bbccf330"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{"ExpToTrig", "[", 
      RowBox[{
       RowBox[{"Evolver", "[", 
        RowBox[{
         RowBox[{
          FractionBox["\[CapitalDelta]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"aR", "**", "aR"}], " ", "+", " ", 
            RowBox[{"aL", "**", "aL"}]}], ")"}]}], ",", "t", ",", "#"}], 
        "]"}], "  ", "/.", " ", "QP$rules"}], "]"}], "]"}], "]"}], "&"}], " ",
   "/@", " ", 
  RowBox[{"{", 
   RowBox[{"Q$sym", ",", " ", "P$sym"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6616038251199303`*^9, 3.661603864590372*^9}, {
  3.661603970006435*^9, 3.661603993355975*^9}},
 FontSize->16,
 CellLabel->"In[89]:=",ExpressionUUID->"ac92671f-ef50-487e-a4b2-b021ebe29395"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Q", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}], "+", 
    RowBox[{"P", " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"P", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}], "+", 
    RowBox[{"Q", " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.661603833222344*^9, 3.661603865179731*^9}, 
   3.661603994345737*^9, 3.682851908760969*^9, 3.6828604999552317`*^9, 
   3.682860719662142*^9, {3.682861579062324*^9, 3.6828615997022867`*^9}, 
   3.68286179962737*^9, 3.836676243584896*^9, 3.855509019730845*^9, 
   3.855509298919083*^9, 3.8555117917102013`*^9, 3.855512800373817*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"7b1531bc-2d73-4519-ba43-ce38fad71607"]
}, Open  ]],

Cell["\<\
Let's remind ourselves what the hyperbolic functions look like\
\>", "Text",
 CellChangeTimes->{{3.661603457102549*^9, 3.661603493792601*^9}},
 FontSize->16,ExpressionUUID->"81e0ca37-16af-4660-9af1-97927ef146b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cosh", "[", "T", "]"}], ",", 
     RowBox[{"Sinh", "[", "T", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.661603424774187*^9, 3.661603455277131*^9}},
 FontSize->16,
 CellLabel->"In[90]:=",ExpressionUUID->"74dc47f7-3fa2-473a-bb35-8498ff99903e"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw12Hc8V9//AHAZyUxSQmRlb1JEr0go2ckoiYw+VpIZ2QktSYVkl1G2MsLh
jbytbImoVEJ5v6+sNw3f0+Px+/11H8/H4zzuPfeec17jijhdtHChp6Oj495E
R/fvqgA75zY2qOhP4ZqefxkNLq6Jxa2tU1HC4GB5ZDENyiqVJRaXqei5lH/d
7SIaqEgZO01/x54iZRTl0WD/tpix7rdU5GQQVT6bQoPDnxc6U0upqHvJjhoT
SQOL6z3PVB2oiBpxy0jRkgaBvTFebo0UdOzGwRumtFUYGmKba3acR6ZaqTm2
B1dBsOkiz/7dP9CSVoHAk+QVeOHRyrR1Yg5N7Mnn2b6+DOduKhPvomaRTbTz
PY4zy0BLColDMIMyBPK/OfcvQS7nJF/Kp2nUtD/LPkRvCdKPK/sOxn9F34mP
svYtixDl6RgkfewL8g8VWli2WIQQhqJA3/kppM82wpv76Sc4RvSKjxR8QmlL
Q3ovwn/C/YavKenuH1GR58zHHxI/oe6DFPtz0UnktPFGNvbNAohxHdY9mTGO
LhuPBttEL0CFTJz71OdRRO4jq5ZqLMCHtnJhdfURpMQp0yezRsBXufsq6OUg
+j6x8me8hYBtYYXqCpv6kZdDq4X3XQJiX0qRuVb70NZ3N8ObEglYp+TbLv7o
Q8dWdHdux55yeBpaM9qHMjpdI2tvE1Chk0vSLetDxQd4TNhuEmDB9NjE2qEP
ib0+1kCKJUCST6SHLqQXKSm0D0eEEiCnTpV7stiN/N/Ns2v8R4CrQnh47UQ3
6tG210+9QECmxNaBnvZuNNH/d33NjQBuXsXAlUfdqP9923C9KwGrq97NBnrd
6NfdT2aGzgSQailWc8ldqGHByDbAgQAbbUqYononKiu8dU/hFAFJ+8L6jwh3
otTqEJkMKwK65DnFbVg7EdWXQ4sT+5CQQkfEZAea42brpVoSILbhtX0gtgPV
F6xV1pgTQGmaz/d7S0bMoUwBjsYEROvN99UGtSPl3oxGzqP4+YY/TNXOt6Mn
/L3rd/QIoDP+/qbEuB1ZdNY934YdajXbnSvajuy2vby08wgBAa5fybe6XyPX
He/C9+oQcCFuoslR+DWiSyMV2moTcKK7p4yF3Ip8NB1286sTkNDXrRhT0Yoc
fcxZivYRQB7qKvmb3oqyDtzz0MQ+OtHxfPFSK9L8QrtzRg2/D6WtYEKgFS0J
LVs/VSFAiasxq/xiC4p4tfHJVJGAHSdLEm15SWjicETHuhReP4kbdUcZSOgC
+fLHTGyzNbcvytRm1EqVtz+KnZAhcoC1vRmxHZi/fleSgL8zyR/qAprRuwXb
HAUJAqavhijsHmlCArabZ0PECPA2vZvSII1QWzNdqZMQAQVLx3/c34TQtELB
FR7sqVTGw97vGlF2/+Cz14IEnPoS+E0ovhFt5y47JIcNwWfVI2YakFiUgcRv
AQK4cmWHdPPrEbe7xa8SPjzflbatZPE6ZFptX3ZuBwG3i3JIh9ZqkcYxlkI+
bI+z4f4vemrRXHH7rkEeAsRfHxjPCahFBh1+9gbYD+4/e3qVXIOO/7YO2bed
gCtqd7VVPauRpO4NZqlteD4zXkTh4WqUnRPgM8NFgGr68VzhHdWop8vKrBD7
BwMjC2fjSySrMOMnh312MGBoZutLtHtexvzAVgJ0fc94ZFRWIeSVfdKVgwAh
CQ2hHXFViKdzWVYB+9e7Hf03zlShZivRKyvsBFTp9KoHM1Uh0Vt/rsRhS2zT
pT9pXYm8NBM5K9gIYC2TTGX5VY42d/SGCLAS8GT8663ZmBIUMPnC2YCZgLHQ
nZmPVUvQncsib4SxOYUMysynipF86kbG+ma8384VDNRCMepq3BpYiq3/1Z03
Yf0ZOizmQieEPUOhZsn4FKID9vyBnEwE7E4UrpgUKkTc0jrWFEa8H5TNW5J6
CpCMdXfGG+yayxVf12UKUEshu3MidjzNT6br61NkdmFP+y5sGfr1So/TeWh+
+BtFiwF/n1yZtj2secgzcl1PDDtJ7/TIYE0uUvvtQs+KvR5bTzu4Mxfxj+hV
jtLj88kWrs3en41c5rjmr2DTFZeaNIVnI+Ge0avO2GomHx38FLLRQOmSvwl2
eqJO1PsbWYhySCJdDHtUZstt21sZ6HWaY9PAJgIOe/1X1jz3GFVG1t1A2AWl
nQPSho/RHzjf+Bw7WO0W7zp9OnrrkGMbh81/iDs7LSgVTSR0uulhR0VcbqEf
SUH5Qfe91LC/k4a+uqumoG+vno+JY9cbPJQ5SHmATlU2zm3GtjffXTV+PhmF
sLlO9dLh/bK4rOHfeg/5knMcW7BDH/Qizr330NmX4nrV2OnjUV0603fR+PqK
Sha2XNgZ83H9u8iKpA/3sV8Jq7/1y09EyeljJQnYVV0Dbab9t1HRtZ7qAOwh
rtj+qKRbKH+XnLkX9qKVxsQLy5uo5nWPsTO2ysfMJYGReDTy4J2PJbb5Xks6
04dxyNDsyEMjbB/3zexRNtfRQ0uqsB526ZKn2MxYDGKL5Dirjv1GQ1hRID0a
DVqFb1PCpoQNaprYR6GGDhUpGWyO1lj9SKFIJFQjmSOObcPtl3cBhaPKv/bh
e7Afpo+9eqNzFWVeHUb82CMSOoNqrVeQN+/t8zuxecrz59L0gxBP+XV3bmzL
g5z0mzr80Q9l0hAndlKbH5+b0WVUG62dw4bdZzqu1NPjg54krQ1swRaqik50
zfJEusYrrpuxH5HNkMoTN3QjT/UsI/auCUHK30In9OlGeQ09tuznYY0H9qcR
x9rFgE3YEuw+DxXczNHhL94P6bAjhqSGBFq0EY9hicA/y22dcGeSF4frIgoM
/zyyEJXJRTMEBh+K8T8TppI/L/qeAut91F//HHJPv9ND7RzU+Stx/Hve37Dg
R5mKLtC1vyKS4d/93Z97Dsq4Q1KMny0TNsOpD9rMEhch1C0wmRm7RTj++mMu
XzhHqVNhxY55IOqz/7YfhEqDGge2Pnu9TT9bIPjJMqZyYTNHWel4xAeDNQur
Iw82eZUizcQcCiljZjd3YSd4xXFnxoTBztpRfkHspwuJV3dHRsD25mx2UWw3
NxnXl3+jIK9zlU8e21A00C5aOwbIXNf2qWJLTbSYmIVeg3iWk1Ua2HMW9vvn
1q5D8MvqcQPsTo4i2eoD8eBHOhFjiv2MvLInJjAB8pXEE62xPQ8lbhFavgnN
f9L6L2Abr73/Pad6GyraNZl9sRWqpBeqfe/AQodgVgg2LfnTDylaInxwK/l1
B7uWNWSY5H8PlsU22TVgZ8nvGCwVTQYNKVJtJ3asWWlfem8yLOvZ3B7FPvng
c1eA9ANgd2B6sPxvfUROkGQmUuDNT+89+/D5fKs3jXgTUuFhxJe9+tiNbhEN
jPvT4NszlWxr7BvFVTWTiY9g6b3dSgi2hIZgaZJeBuj4zPJ3YrOfqX4evpAB
F9NUyJPYi2HmRZ4ZmRBYbzO3iH1uimQhFpoFd04eurUHxyMFqVXjP8PZ8CE2
wjgUu6PSQa88Pg/aLgfXGOH4p9Um1yL5MQ/8az5VumGXjazpZKg/gTvSKuIx
2A/W7sGNz0+gb+D2+UZsZyBrumjnwyLZxP4AjrcbnUrKfAuFsHaxTFsXx2/f
939K7xgUwfwuxjgX7On5ToXNGUVgF2RiEI/dzeUit3j8GUxe6hIfwE47lSrZ
k/ccthdHn/4P54N9U5uEIm1K4b7o55pinE8U6qwXlApLQTN2NmAYWyKpuPXj
WimQZMfT/mCzZT/fl2VcBn0HY3hMtxDw28zm/QalDPjWWHpXsCfKSqWRcgV4
RPQ52uL8NZZut53XrgJs5LaEX8ceiWP64x1VARraWvQvsd+cO90nNFgBWooZ
mjw4/zVyMQeG+VXCVyP3y8PYmT5nW7Wrq4DwU93sgfNp+hmWkvsfqqA0pTk6
EzvFsOrhPPMLeN/t4DaEnSjM6vHY5gVwFPWfA058/vpebPuz9gIaMsp28+N8
7ajE4VCvVQ3H12/XTuF8Lka8WtMk1YLLLOVuE64XQnuOxCzN1wK3iYA5M64v
Roq6OEv46mDU2ynOBDvBZVxM5FIdPNp/zGESmxhbN2YWfgUFlMoSBl48/zaN
nMGr9f/Wd9gZ1y92j6qPe2ogqN3ws4rE9VBVEAzvdUFQb3Rk91tszlPtDh8S
ETil+Z+W30NAM9dbP4sZBAmWXEfGsXmOhJimGzVBxjWXai0RHG9q0oKj1pug
9ueQ+k5xAo7lvusxsSHB/r6yXDEZPJ9rJa5tXiR4W9mcG4udciF642A0Cd5U
KO6aw56Rl1eWLiFBzD6FsxWyBMTVRCQzMLYA+QKjg6E8jic9kqdrSlughS9V
PUGJAAOa/4wIcxuwqslZuOzH9acxN8Pyi3b4cI/uR7A+rsccWRbWOtphQHZT
0AL2qD/dh78T7ZBoRf3vPwMC3DModVs2k+GkYFa4nSEeT+303X2KDF90nvrq
HMfj70ZPHVkhwz6Fz8GiJnj8yFJzknonyAveF1XG9fwdh7cRStXd4D9YmxiJ
+4PYH1ow3d0NYRO7V4Vw/xAWnPPn0VQ3uOhajtRje9/zusLM2QN9x09srOF+
w6SdwW/SGduO+ivYE39vRSW3m9xvQJiZKS/xEp7P3zjjGa9eaB+N7NuF+5V2
E0EOM+5+qJnuKbmfRMC8yI6wgbRB0HxddaqkmQB/P1nHOztHgC9Qt8BhBceX
91wWruRR+MjoZ7aovgDngrW+MZ8Yh46xkx2HrixAi+z+hBamScgRNdSn61oA
CZb6mTzDj1A55uY/IfgTBOs9jjLFfYK9Cu+CNAJ+At06faHv1BTMtViyqkz+
hFXzhrNte7+As7BiK5PBIoyrOQjsjfkKW09vOWTSvAg+1lzbRN9Pg9XfZPEz
ukvAl/zFhlFwBuZOTd39TVqCktNZ+YtBs1CnHrhQbL0M1trhhuSGOWj35Jk7
/30Zys96iWr+/g6bs5jHSDErQGM9wlBrNQ+uB5aSmPatgkX/QXXBFAoUxZd6
MX1eBdaDbM31jymwuGxUIja9Cs15Y0ZncimgunX4me7sKigFBTs+KqHA7N+t
k1HUVeDcU32Tr40CQTsnRNh/r0KHp8rnHT8pOB7Fa+nuwP37FulEzhNUQMdY
vLQNaUC7ROMvMadCsOWVkMtGNCgdb39ibE2Fje+0Y0UmNBAqdX1104kKhE+M
JL8VDX5b5U2zBlPB+tnjb/RONKjO3aPN/JQKHz1Vk2ghNPDmoLY/fYbvb3G5
WDOcBhKBjRb65VTw5rVLuBpFg+Tj9heu1VOBwSk6nimeBr4LafcYBqlQfmJX
ltADGsicdhfKHaXClKlTl2sqDT61ahTqTlJBlle0tjSdBmYpo42Rs1TIGXF/
fySXBlvoC46JUKkg1ifJfecpDZBH4FDTEhVcEkms44U0CBjWdzi3TgV+SavX
ksU0+L//IfD//0P+B9GTqS8=
       "]]},
     Annotation[#, "Charting`Private`Tag$26285#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtlFlQkwcUhVmKUDZxl7IJCoNKBQVxquJFLVaUKIlSqCibigygWFyApu5B
oqIg4IgU1wQlLknBrUDghq0JSgYhGIhBlkACiUl+8lMUGSylMz6cOXMev/Pw
ucal0PabGBkZUabyfy+DuZrJSQL1efFPb4tJTPm8kPl5nECKQpCCTST++XS5
x8gogYzSZ/d6Gklc4UmJU30g8ETTtGTXGhJXzWC8a+4g0IXKufCQS2Jgv+HV
DR6B3Lu58rYcEmlZ4ke+0QSq+U3edBqJaS2Mgwdq9MhcG0lzlxmwvd1KUxur
w1vnj/1k3TmMToKU2asctShuE1nZdxP4PKnBbPp7Df51yUErcNVjTPbyYdlZ
Na60YLM+hWhxLI/ORBhCfuToGk+WBlm23faFfSr8YhMgf9A3hMVblqdKLijR
ik0ffOI7iGeTY9MXBw+gYP0+qdVjJdJNH6al6hTobBVk+Gg9gLGnWxZJS/vw
dVpUouSqAq9VKwuLE3sxr8iPut+9Dyt7PK0fu3WjWaVSq93QgwvtAjfsvCXH
CZHlewm9C8uXMBMV/Z1oZ1xypDJThj2NZQv8/aVYNXzC04YjRaXXtRX4QoIB
WXesiWntOOMkx3+ZcStuM1qbV+DXil7+hFfJSDN2nNg6aOQrxnM/6t5UpAvx
+uHggaNFQpyzk5v7y7w6DHUw1Yg86rD8Y+N00aJKvNtcI0zyqcQSufKymsFF
Ufhjn4sXuLiH6vhMvrcAGfTbJn77CrDCkv627lg+/K1KvDH9eD6sVBg7n4ng
gci7g83Yw4OFw1WfV9dVAEbsGNktroBglky8LaIOJlzu9MQn1EEQZabp6HMh
RIcrZlV1CiEnuuO0z8tmuDk7WWk82gzCbU42oTNbIZJ9EmmbWkHnOudkW5EE
9iUcSuSqJXDs6NLYnLlSuKKiBP2eJYWOLjtavKgTWMu8u9wTZBCTsXbQPEQO
r19ZFEpdu6B+6aqL9WbdcGWXt77erQc8vuUPsTf3gup6Jkf5by848ZOCzJh9
IAuMWqdNUoDRuAknVaEAcVnE6i+T/fCJWh3V6D4AyQu283adUYLcL9rBnaEE
p1qHXo7XIBwOt5vh1qWCgVl+lOp3Q2BfMBDxjdMQlOcqos2Pa4AbeefBSLoa
5OXhr2pBC+EBpzaLqjUQzS4tkn3UQVnUQbfVEx+ggftk1LSMgDHLjaYVYTpw
PuAnCG0ZBlrrGn+nQj3w7scUn+MbwHKNVS3/ph4mW8dTXwgMUMt+t3U3Sw+X
zn94q24wgE96RuwfXD2M7w1bTxMbwNblZbZ9ox5yW3Rli7sN0JS8on8OqYcj
3J/njUwaINBica5tCAHM4vnvhzeSMPbr2HdcKgEzd3ufWrmZBJ5cWEIJJ+BA
3euy30JIcObFV2XHTe0cx6ZpYSRMhLFVlhkElKS/qXePJ+ElyyXA/D4BXlw3
81NMEg7ZEML7jwhIzTpc25xNgkdaDW3TFOdziLN1uEpCwZY9CZl8AiwyKmIq
bpCQaijKN5UQ0AYGzcRDEpZEJjqzOgkIdJu/bjuPhL6GHzgbuglILBtZdO8p
CaGFnTVn1ATszKdyg/kkWJiUBrsSBHwfOp96S0ACJqW1C/6Z+vWyI3OkgYTj
bzdFx4wT4Hv59I7gJhK++gu++gv+A1hLo6A=
       "]]},
     Annotation[#, "Charting`Private`Tag$26285#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 1}, {-1.1752011306609194`, 1.5430805868478494`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.661603443468926*^9, 3.661603449072255*^9}, 
   3.6828519089965754`*^9, 3.682860500161415*^9, 3.6828607197060204`*^9, {
   3.682861579107472*^9, 3.682861599735804*^9}, 3.682861799666389*^9, 
   3.836676244258029*^9, 3.855509020168858*^9, 3.855509299102849*^9, 
   3.855511792632676*^9, 3.855512800777873*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"fea2c8a5-5492-4f85-afe6-1ef161331e90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"ExpToTrig", "[", 
       RowBox[{
        RowBox[{"Evolver", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox["\[Omega]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"aR", "**", "aL"}], " ", "+", " ", 
              RowBox[{"aL", "**", "aR"}]}], ")"}]}], "-", 
           RowBox[{
            FractionBox["\[CapitalDelta]", "2"], " ", "I", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"aR", "**", "aR"}], " ", "-", " ", 
              RowBox[{"aL", "**", "aL"}]}], ")"}]}]}], ",", "t", ",", "#"}], 
         "]"}], "  ", "/.", " ", "QP$rules"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Q", ",", "P"}], "}"}]}], "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"Q$sym", ",", " ", "P$sym"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6616007406826563`*^9, 3.6616007508623447`*^9}, {
   3.6616008463686867`*^9, 3.661600913052218*^9}, {3.661602359732606*^9, 
   3.661602475878283*^9}, {3.661602521111289*^9, 3.661602558018815*^9}, {
   3.661602619035358*^9, 3.661602633379653*^9}, 3.661602980534584*^9, {
   3.661604027321581*^9, 3.661604067830595*^9}},
 FontSize->16,
 CellLabel->"In[91]:=",ExpressionUUID->"aaf1adfb-451e-40be-823e-749d9419d781"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"P", " ", "\[Omega]", " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"t", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "-", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "-", 
        SuperscriptBox["\[Omega]", "2"]}]]]}], "+", 
    RowBox[{"Q", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cosh", "[", 
        RowBox[{"t", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "-", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}], "+", 
       FractionBox[
        RowBox[{"\[CapitalDelta]", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[CapitalDelta]", "2"], "-", 
             SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "-", 
          SuperscriptBox["\[Omega]", "2"]}]]]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"Q", " ", "\[Omega]", " ", 
      RowBox[{"Sinh", "[", 
       RowBox[{"t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "-", 
          SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "-", 
       SuperscriptBox["\[Omega]", "2"]}]]], "+", 
    RowBox[{"P", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cosh", "[", 
        RowBox[{"t", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "-", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}], "-", 
       FractionBox[
        RowBox[{"\[CapitalDelta]", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[CapitalDelta]", "2"], "-", 
             SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "-", 
          SuperscriptBox["\[Omega]", "2"]}]]]}], ")"}]}]}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.661602380236158*^9, 3.661602447324978*^9}, {
   3.661602477997684*^9, 3.661602559382513*^9}, 3.661602634276566*^9, {
   3.6616029734159317`*^9, 3.661602981462379*^9}, 3.6616040071201143`*^9, {
   3.6616040554574623`*^9, 3.661604070622085*^9}, 3.6828519104576473`*^9, 
   3.682860501345872*^9, 3.6828607208483267`*^9, {3.682861579139751*^9, 
   3.68286160083195*^9}, 3.68286180084659*^9, 3.836676245293192*^9, 
   3.8555090240273743`*^9, 3.855509303060874*^9, 3.855511796413269*^9, 
   3.855512806852582*^9},
 FontSize->16,
 CellLabel->"Out[91]=",ExpressionUUID->"53cbcd4e-2e07-49fa-a446-a788b823fb50"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Another quantum optics example", "Section",
 CellChangeTimes->{{3.836676278620495*^9, 
  3.836676285785801*^9}},ExpressionUUID->"4b89dec7-6a48-4de3-b090-\
1c14f2c7865e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<UniDyn`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Lambda]", ",", "t", ",", " ", "Ix", ",", " ", "Iy", ",", " ", "Iz", ",",
     "I$m", ",", " ", "I$p", ",", "aL", ",", "aR", ",", " ", "H"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "t"}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CreateOperator", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ix", ",", " ", "Iy", ",", " ", "Iz", ",", "I$m", ",", "I$p"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"aL", ",", "aR"}], "}"}]}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OscSingle$CreateOperators", "[", 
   RowBox[{"aL", ",", "aR"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdyk0og3EAx/HRkpfJYZkD2tBYLVbbRLRYDogMmdxobSKWJW+pZRy8pGir
iZM4aIdne5C8ZolSDl7aEHIZwkbIZvMo8fz+h2+fyzdD11VviOZwOEI26Ar1
JSnLX9S5ygUBTHCcpEH+4VgW1Df2SogapRS21AR7oNhf1wc75dQ4DFYwE0TX
6TT5n0xW2JHKP4Pc71riwNlPEBq7jxlItYTj8llnZo/i4WLUej/kf2wTc5Lz
juHRpZ34xmTL1ljlX29Ei8q7CR+rS7dgEbfJ8slKz1imYGYlQ8HbSR4NXcMr
u/DcpnfD5fLAKfRYEz1QX/J+Dc2yhXt4V7UfgKIpwTuMuYiEoKIsKQzdixWC
IKvuZj4FfhZq0+Hz6ihxjpLSsGHOQ9wxt0aGTC9qYbGXGBlh0nz2V7U2ECuE
vPa/TEgnp4uh36srgBtLDuKeSDEIf1UlxHrKZ4O25lE7lDgNTlj3bSQePGjO
Ydu0+Qr+A51hCW8=
  "],
 FontSize->16,
 CellLabel->"In[92]:=",ExpressionUUID->"1dfb0cad-1b54-4142-9aa7-21c0c1614cda"],

Cell[BoxData[
 TemplateBox[{
  "OscSingle$CreateOperators", "nocreate", 
   "\"Oscillator operators already exist.\"", 2, 96, 13, 19343796877427458990,
    "Local", "Osc`OscSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.836676377695684*^9, 3.836676397579143*^9}, 
   3.8366765421099987`*^9, 3.8366770748458033`*^9, {3.8366772766322117`*^9, 
   3.8366772929020357`*^9}, 3.836677339149886*^9, 3.836677486586904*^9, {
   3.836677818551963*^9, 3.836677828406592*^9}, 3.8366796392192097`*^9, 
   3.85550902420951*^9, 3.855509303141596*^9, 3.855511796616886*^9, 
   3.8555128073183928`*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"5609a85b-f6a8-4834-a7a8-6c46b2d2c14d"],

Cell[BoxData[
 TemplateBox[{
  "OscSingle$CreateOperators", "comm", 
   "\"Adding oscillator commutations relations.\"", 2, 96, 14, 
   19343796877427458990, "Local", "Osc`OscSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.836676377695684*^9, 3.836676397579143*^9}, 
   3.8366765421099987`*^9, 3.8366770748458033`*^9, {3.8366772766322117`*^9, 
   3.8366772929020357`*^9}, 3.836677339149886*^9, 3.836677486586904*^9, {
   3.836677818551963*^9, 3.836677828406592*^9}, 3.8366796392192097`*^9, 
   3.85550902420951*^9, 3.855509303141596*^9, 3.855511796616886*^9, 
   3.855512807335001*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"6745273e-d1fa-4c54-b378-d683a0b760e5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"I$p", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"I$p", ",", "I$m"}], "]"}], "=", 
   RowBox[{"2", " ", "Iz"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"I$p", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"I$p", ",", "Iz"}], "]"}], "=", 
   RowBox[{"-", "I$p"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$m", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"I$m", ",", "I$p"}], "]"}], "=", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "Iz"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"I$m", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"I$m", ",", "Iz"}], "]"}], "=", "I$m"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Iz", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"Iz", ",", "I$p"}], "]"}], "=", "I$p"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Iz", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"Iz", ",", "I$m"}], "]"}], "=", 
   RowBox[{"-", "I$m"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8366774989243097`*^9, 3.83667749925176*^9}, {
  3.836677559362499*^9, 3.8366776213838663`*^9}, {3.8366777728844557`*^9, 
  3.836677789961767*^9}, {3.83667783078938*^9, 3.836677960774514*^9}, {
  3.8366780124640627`*^9, 3.836678026117797*^9}, {3.836678096600881*^9, 
  3.8366781021921167`*^9}},
 FontSize->16,
 CellLabel->"In[97]:=",ExpressionUUID->"42ade78e-2cb7-4eeb-b907-81b2885d75f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Iz", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "Iz", ",", "Iz", ",", "b___"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a", ",", "b"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$p", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "I$p", ",", "I$p", ",", "b___"}], "]"}], ":=", "0"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I$m", "/:", 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a___", ",", "I$m", ",", "I$m", ",", "b___"}], "]"}], ":=", 
    "0"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$p", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "I$p", ",", "Iz", ",", "b___"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", " ", 
     FractionBox["1", "2"]}], 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a", ",", "I$p", ",", "b"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I$p", "/:", 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a___", ",", "I$p", ",", "I$m", ",", "b___"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}], "+", 
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"a", ",", "Iz", ",", "b"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$m", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "I$m", ",", "Iz", ",", "b___"}], "]"}], ":=", " ", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a", ",", "I$m", ",", "b"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I$m", "/:", 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a___", ",", "I$m", ",", "I$p", ",", "b___"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}], "-", 
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"a", ",", "Iz", ",", "b"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$z", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "I$z", ",", "Ip", ",", "b___"}], "]"}], ":=", "  ", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a", ",", "I$p", ",", "b"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$z", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "I$z", ",", "I$m", ",", "b___"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a", ",", "I$m", ",", "b"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.836678223740842*^9, 3.83667824021528*^9}, {
   3.8366793286094112`*^9, 3.836679617748658*^9}, 3.836679674230486*^9},
 FontSize->16,
 CellLabel->
  "In[103]:=",ExpressionUUID->"36cab0d1-5783-4276-91ca-5e0b2cf81e49"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", " ", "=", " ", 
   RowBox[{"\[Lambda]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"I$p", "**", "aL"}], "+", 
      RowBox[{"I$m", "**", "aR"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Comm", "[", 
  RowBox[{
   RowBox[{"I", " ", "H"}], ",", "aL"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8366801945311832`*^9, 3.836680260688924*^9}},
 FontSize->16,
 CellLabel->
  "In[112]:=",ExpressionUUID->"0152f6e7-6dd3-49c4-b784-87785b88346c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[ImaginaryI]"}], " ", "I$m", " ", "\[Lambda]"}]], "Output",
 CellChangeTimes->{{3.836680210494046*^9, 3.8366802622154827`*^9}, 
   3.855509024359262*^9, 3.8555093032568207`*^9, 3.855511796739843*^9, 
   3.8555128074501534`*^9},
 FontSize->16,
 CellLabel->
  "Out[113]=",ExpressionUUID->"aa743c86-8f39-4834-aaff-620d68e14a5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Comm", "[", 
  RowBox[{
   RowBox[{"I", " ", "H"}], ",", 
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{"I", " ", "H"}], ",", "aL"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.836680263211213*^9, 3.836680278955698*^9}},
 FontSize->16,
 CellLabel->
  "In[114]:=",ExpressionUUID->"2389743e-3926-46c6-b54d-4edab22162fa"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["\[Lambda]", "2"], " ", 
  RowBox[{"Iz", "**", "aL"}]}]], "Output",
 CellChangeTimes->{{3.836680275574112*^9, 3.8366802793846197`*^9}, 
   3.8555090243848133`*^9, 3.855509303271435*^9, 3.8555117967667*^9, 
   3.855512807590749*^9},
 FontSize->16,
 CellLabel->
  "Out[114]=",ExpressionUUID->"67b1f963-c3e3-45aa-b316-ff1e3c45c1f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Comm", "[", 
  RowBox[{
   RowBox[{"I", " ", "H"}], ",", " ", "aR"}], "]"}]], "Input",
 CellChangeTimes->{{3.836694703371355*^9, 3.8366947128340282`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"40de0c0f-f1e1-4fb8-acab-c96f277b0fb0"],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", "I$p", " ", "\[Lambda]"}]], "Output",
 CellChangeTimes->{3.8366947134105473`*^9, 3.85550902447073*^9, 
  3.855509303286314*^9, 3.8555117968333063`*^9, 3.8555128076120243`*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"9671fc4c-f7ba-4d6b-8c5f-c4535ef1e8ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Comm", "[", 
  RowBox[{
   RowBox[{"I", " ", "H"}], ",", 
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{"I", " ", "H"}], ",", "aR"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.836694655842784*^9},
 CellLabel->
  "In[116]:=",ExpressionUUID->"0d9e265e-1a04-49a8-bb2a-ba912f819101"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["\[Lambda]", "2"], " ", 
  RowBox[{"Iz", "**", "aR"}]}]], "Output",
 CellChangeTimes->{3.836694656400078*^9, 3.855509024484847*^9, 
  3.8555093033414183`*^9, 3.855511796846627*^9, 3.85551280767724*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"3a7258c1-a911-4bfb-8f26-832dfd863452"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{
    RowBox[{"I", " ", "H"}], ",", 
    RowBox[{"Comm", "[", 
     RowBox[{
      RowBox[{"I", " ", "H"}], ",", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"I", " ", "H"}], ",", "aL"}], "]"}]}], "]"}]}], "]"}], "  ", "//",
   " ", "Simplify"}]], "Input",
 CellChangeTimes->{{3.836680293145762*^9, 3.8366803437969112`*^9}},
 FontSize->16,
 CellLabel->
  "In[117]:=",ExpressionUUID->"b5a95bf0-f590-48ba-9623-1a477eefc176"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[ImaginaryI]"}], " ", 
  SuperscriptBox["\[Lambda]", "3"], " ", 
  RowBox[{"(", 
   RowBox[{"I$m", "-", 
    RowBox[{"2", " ", 
     RowBox[{"I$m", "**", "aL", "**", "aR"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"I$p", "**", "aL", "**", "aL"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.836680306060295*^9, 3.836680374092651*^9}, 
   3.855509024564012*^9, 3.855509303401422*^9, 3.855511796926034*^9, 
   3.8555128078415947`*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"4037486a-994f-4701-b034-8f6551da246a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{
    RowBox[{"I", " ", "H"}], ",", " ", 
    RowBox[{"Comm", "[", 
     RowBox[{
      RowBox[{"I", " ", "H"}], ",", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"I", " ", "H"}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"I", " ", "H"}], ",", "aL"}], "]"}]}], "]"}]}], "]"}]}], 
   " ", "]"}], " ", "//", " ", "Simplify", " "}]], "Input",
 CellChangeTimes->{{3.836680349847651*^9, 3.836680360897409*^9}},
 FontSize->16,
 CellLabel->
  "In[118]:=",ExpressionUUID->"5629108b-749a-4d29-b105-17710c99b8e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[Lambda]", "4"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"3", " ", "aL"}], "-", 
    RowBox[{"4", " ", 
     RowBox[{"Iz", "**", "aL"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"Iz", "**", "aL", "**", "aL", "**", "aR"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"Iz", "**", "aL", "**", "aR", "**", "aL"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.836680368959243*^9, 3.85550902465274*^9, 
  3.855509303464295*^9, 3.855511797000949*^9, 3.855512807987322*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"a85058a6-77a1-47cf-8b7b-b48ed0601649"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Evolver", "[", 
  RowBox[{
   RowBox[{"\[Lambda]", " ", "Iz"}], ",", "t", ",", "I$p"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Evolver", "[", 
  RowBox[{
   RowBox[{"\[Lambda]", " ", "Iz"}], ",", "t", ",", "I$m"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.836678046010539*^9, 3.83667808469143*^9}, {
  3.836678118978841*^9, 3.836678120390438*^9}},
 FontSize->16,
 CellLabel->
  "In[119]:=",ExpressionUUID->"7de76042-1344-4ab3-a1c3-92588030fa02"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Lambda]"}]], " ", 
  "I$p"}]], "Output",
 CellChangeTimes->{{3.836678069229344*^9, 3.8366781210042553`*^9}, 
   3.836678255910529*^9, 3.8366796395233803`*^9, 3.83667967811913*^9, 
   3.8555090251025953`*^9, 3.8555093038913603`*^9, 3.855511797333362*^9, 
   3.8555128085343237`*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"62ad286e-8bcc-4118-85ce-c953a7495576"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Lambda]"}]], " ", 
  "I$m"}]], "Output",
 CellChangeTimes->{{3.836678069229344*^9, 3.8366781210042553`*^9}, 
   3.836678255910529*^9, 3.8366796395233803`*^9, 3.83667967811913*^9, 
   3.8555090251025953`*^9, 3.8555093038913603`*^9, 3.855511797333362*^9, 
   3.8555128088057203`*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"5b6774e1-0aab-42c0-aaba-e1cbe3ee4786"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evolver", "[", 
   RowBox[{
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"I$p", "**", "aL"}], "+", 
       RowBox[{"I$m", "**", "aR"}]}], ")"}]}], ",", "t", ",", "aL"}], "]"}], 
  " ", "//", " ", "Simplify"}]], "Input",
 CellChangeTimes->{{3.8366781435408993`*^9, 3.8366781720361767`*^9}, {
  3.8366796919248123`*^9, 3.836679694601782*^9}},
 FontSize->16,
 CellLabel->
  "In[121]:=",ExpressionUUID->"a9735267-6089-487e-848e-33acf0468835"],

Cell[BoxData[
 TemplateBox[{
  "Evolver", "unsolvable", "\"Unrecognized evolution\"", 2, 121, 15, 
   19343796877427458990, "Local", "Evolve`Evolver"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.836678173343528*^9, 3.83667825784004*^9, 3.836679639981099*^9, {
   3.8366796811629553`*^9, 3.836679695236924*^9}, 3.855509026324443*^9, 
   3.855509304903817*^9, 3.855511798334396*^9, 3.8555128095956287`*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"9ceab006-7bf9-4d5d-9d80-e2fcb83ea58b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"aL", ",", 
   RowBox[{"\[ImaginaryI]", " ", "I$m", " ", "\[Lambda]"}], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[Lambda]", "2"], " ", 
    RowBox[{"Iz", "**", "aL"}]}], ",", 
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[Lambda]", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"I$m", "-", 
      RowBox[{"2", " ", 
       RowBox[{"I$m", "**", "aL", "**", "aR"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"I$p", "**", "aL", "**", "aL"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[Lambda]", "4"]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "aL"}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL", "**", "aL", "**", "aR"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL", "**", "aR", "**", "aL"}]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.836678173356738*^9, 3.836678257871814*^9, 3.8366796400133057`*^9, {
   3.8366796812002697`*^9, 3.83667969526368*^9}, 3.855509026340374*^9, 
   3.855509304915236*^9, 3.8555117983456793`*^9, 3.855512809612894*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"47edff23-7411-4663-8a07-7aa40b494f7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evolver", "[", 
   RowBox[{
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"(", 
      RowBox[{"I$m", "**", "aR"}], ")"}]}], ",", "t", ",", "aL"}], "]"}], " ",
   "//", " ", "Simplify"}]], "Input",
 CellChangeTimes->{3.836682235871724*^9},
 CellLabel->
  "In[122]:=",ExpressionUUID->"fce5eff0-10eb-4b76-a5ff-d16fc165d0da"],

Cell[BoxData[
 RowBox[{"aL", "+", 
  RowBox[{
  "\[ImaginaryI]", " ", "I$m", " ", "t", " ", "\[Lambda]"}]}]], "Output",
 CellChangeTimes->{3.836682239136174*^9, 3.85550902639255*^9, 
  3.855509304960096*^9, 3.85551179838907*^9, 3.855512809753599*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"e69251a1-d359-413b-80a1-a7944e53754c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evolver", "[", 
   RowBox[{
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"I$p", "**", "aL"}], "+", 
       RowBox[{"I$m", "**", "aR"}]}], ")"}]}], ",", "t", ",", 
    RowBox[{"(", 
     RowBox[{"aL", " ", "-", " ", "aR"}], ")"}]}], "]"}], " ", "//", " ", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.836695794938993*^9, 3.836695800856147*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"9f6f87e7-27cf-4b76-8ef6-91aa3f20ade5"],

Cell[BoxData[
 TemplateBox[{
  "Evolver", "unsolvable", "\"Unrecognized evolution\"", 2, 123, 16, 
   19343796877427458990, "Local", "Evolve`Evolver"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.836695802454815*^9, 3.855509028695838*^9, 
  3.855509307164106*^9, 3.855511800573542*^9, 3.8555128123338003`*^9},
 CellLabel->
  "During evaluation of \
In[123]:=",ExpressionUUID->"c2e6246f-077d-473a-a475-b3360458f7c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"aL", "-", "aR"}], ",", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{"I$m", "+", "I$p"}], ")"}], " ", "\[Lambda]"}], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[Lambda]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Iz", "**", "aL"}], "-", 
      RowBox[{"Iz", "**", "aR"}]}], ")"}]}], ",", 
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[Lambda]", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"I$m", "-", "I$p", "-", 
      RowBox[{"2", " ", 
       RowBox[{"I$m", "**", "aL", "**", "aR"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"I$m", "**", "aR", "**", "aR"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"I$p", "**", "aL", "**", "aL"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"I$p", "**", "aR", "**", "aL"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[Lambda]", "4"]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "aL"}], "-", 
      RowBox[{"3", " ", "aR"}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL"}]}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aR"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL", "**", "aL", "**", "aR"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL", "**", "aR", "**", "aL"}]}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aR", "**", "aL", "**", "aR"}]}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aR", "**", "aR", "**", "aL"}]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8366958024675703`*^9, 3.855509028801942*^9, 
  3.8555093072546873`*^9, 3.8555118006287518`*^9, 3.8555128123582897`*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"a86ad508-b565-4674-93cd-81e7b8a371c7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Failing cases", "Section",
 CellChangeTimes->{{3.661604273535866*^9, 
  3.6616042801731567`*^9}},ExpressionUUID->"1123775e-cb4a-4e3d-8bd9-\
2566684252fd"],

Cell[CellGroupData[{

Cell["Off-resonance evolution of Iz is touchy", "Subsubsection",
 CellChangeTimes->{{3.682853897109785*^9, 
  3.682853924034186*^9}},ExpressionUUID->"74c49c22-35e0-44bd-9343-\
26c9a570889b"],

Cell["\<\
This Evolution broke in upgrading from Mathematica 10 to 11.  Figure out why.\
\
\>", "Text",
 CellChangeTimes->{{3.682853925069911*^9, 
  3.6828539480419188`*^9}},ExpressionUUID->"7d125066-aa16-49c4-99d7-\
cb8772e0d7c1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "Ix$sym", ",", " ", "Iy$sym", ",", " ", "Iz$sym", ",", " ", "Sx$sym", ",", 
   " ", "Sy$sym", ",", " ", "Sz$sym", ",", " ", "\[Omega]", ",", " ", "d$sym",
    ",", " ", "\[CapitalDelta]", ",", " ", "rho$sym", ",", " ", "t$sym"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "A", ",", " ", "r", ",", " ", "lhs$list", ",", " ", "rhs$list", ",", " ", 
    "time", ",", " ", "eqns", ",", " ", "system", ",", " ", "rho$calc", ",", 
    " ", "rho$known", ",", " ", "X"}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"\[Omega]", ",", " ", "d$sym", ",", " ", "\[CapitalDelta]"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CreateOperator", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ix$sym", ",", " ", "Iy$sym", ",", " ", "Iz$sym"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"Sx$sym", ",", " ", "Sy$sym", ",", " ", "Sz$sym"}], "}"}]}], 
    "}"}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"SpinSingle$CreateOperators", "[", 
   RowBox[{"Ix$sym", ",", " ", "Iy$sym", ",", " ", "Iz$sym", ",", " ", 
    RowBox[{"L", "=", 
     RowBox[{"1", "/", "2"}]}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SpinSingle$CreateOperators", "[", 
   RowBox[{"Sx$sym", ",", " ", "Sy$sym", ",", " ", "Sz$sym", ",", " ", 
    RowBox[{"L", "=", 
     RowBox[{"1", "/", "2"}]}]}], "]"}], ";"}]}], "Input",
 CellLabel->
  "In[124]:=",ExpressionUUID->"e84fc74a-5679-4d4b-9b0e-348b1dbb7c6a"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "nocreate", 
   "\"Spin operators already exist.\"", 2, 128, 17, 19343796877427458990, 
   "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.682853965104638*^9, 3.682854304160749*^9, 
  3.6828605014188547`*^9, 3.682860720889642*^9, 3.682861600871541*^9, 
  3.682861800920054*^9, 3.855509028947279*^9, 3.855509307365576*^9, 
  3.855511800727784*^9, 3.855512812431897*^9},
 CellLabel->
  "During evaluation of \
In[124]:=",ExpressionUUID->"a3e492a5-7501-4fc2-aebd-4b5893eb8a14"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "comm", 
   "\"Adding spin commutations relations.\"", 2, 128, 18, 
   19343796877427458990, "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.682853965104638*^9, 3.682854304160749*^9, 
  3.6828605014188547`*^9, 3.682860720889642*^9, 3.682861600871541*^9, 
  3.682861800920054*^9, 3.855509028947279*^9, 3.855509307365576*^9, 
  3.855511800727784*^9, 3.855512812433703*^9},
 CellLabel->
  "During evaluation of \
In[124]:=",ExpressionUUID->"d284307b-f025-4436-ab43-7665f285f435"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "simplify", 
   "\"Angular momentum L = 1/2. Adding operator simplification rules.\"", 2, 
   128, 19, 19343796877427458990, "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.682853965104638*^9, 3.682854304160749*^9, 
  3.6828605014188547`*^9, 3.682860720889642*^9, 3.682861600871541*^9, 
  3.682861800920054*^9, 3.855509028947279*^9, 3.855509307365576*^9, 
  3.855511800727784*^9, 3.8555128124516993`*^9},
 CellLabel->
  "During evaluation of \
In[124]:=",ExpressionUUID->"cc45cf4a-c7e7-4ccc-b8a7-495a1bd876aa"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "nocreate", 
   "\"Spin operators already exist.\"", 2, 129, 20, 19343796877427458990, 
   "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.682853965104638*^9, 3.682854304160749*^9, 
  3.6828605014188547`*^9, 3.682860720889642*^9, 3.682861600871541*^9, 
  3.682861800920054*^9, 3.855509028947279*^9, 3.855509307365576*^9, 
  3.855511800727784*^9, 3.855512812463636*^9},
 CellLabel->
  "During evaluation of \
In[124]:=",ExpressionUUID->"9298bb6e-ef29-413b-9a86-2fa4501741dd"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "comm", 
   "\"Adding spin commutations relations.\"", 2, 129, 21, 
   19343796877427458990, "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.682853965104638*^9, 3.682854304160749*^9, 
  3.6828605014188547`*^9, 3.682860720889642*^9, 3.682861600871541*^9, 
  3.682861800920054*^9, 3.855509028947279*^9, 3.855509307365576*^9, 
  3.855511800727784*^9, 3.855512812473974*^9},
 CellLabel->
  "During evaluation of \
In[124]:=",ExpressionUUID->"ea5c6073-46fd-4082-b370-450e4b0526fa"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "simplify", 
   "\"Angular momentum L = 1/2. Adding operator simplification rules.\"", 2, 
   129, 22, 19343796877427458990, "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.682853965104638*^9, 3.682854304160749*^9, 
  3.6828605014188547`*^9, 3.682860720889642*^9, 3.682861600871541*^9, 
  3.682861800920054*^9, 3.855509028947279*^9, 3.855509307365576*^9, 
  3.855511800727784*^9, 3.855512812484066*^9},
 CellLabel->
  "During evaluation of \
In[124]:=",ExpressionUUID->"8ba57842-a1c0-4f09-b345-7bdbaf4b6fc8"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rho$known", " ", "=", " ", 
    RowBox[{"Collect", "[", "\n", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"constant1", " ", "Iz$sym"}], " ", "+", " ", 
        RowBox[{"constant2", " ", "Ix$sym"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"constant3", " ", "Iz$sym"}], " ", "-", " ", 
           RowBox[{"constant2", " ", "Ix$sym"}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"omega$eff", " ", "t$sym"}], "]"}]}], " ", "-", " ", 
        RowBox[{"constant4", " ", "Iy$sym", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"omega$eff", " ", "t$sym"}], "]"}]}]}], " ", "//", " ", 
       "\n", "    ", "Expand"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Ix$sym", ",", " ", "Iy$sym", ",", " ", "Iz$sym"}], "}"}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rho$calc", " ", "=", " ", 
    RowBox[{"Collect", "[", "\n", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"Evolver", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[CapitalDelta]", " ", "Iz$sym"}], " ", "+", " ", 
          RowBox[{"\[Omega]", " ", "Ix$sym"}]}], " ", ",", " ", "t$sym", ",", 
         " ", "Iz$sym", ",", " ", 
         RowBox[{"quiet", " ", "->", " ", "True"}]}], "]"}], " ", "//", " ", 
       "FullSimplify"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Ix$sym", ",", " ", "Iy$sym", ",", " ", "Iz$sym"}], "}"}], ",",
       "Expand"}], "]"}]}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.6828539971267843`*^9, 3.682854142716613*^9}, {
  3.682854234186981*^9, 3.6828542652062473`*^9}, {3.682854330660592*^9, 
  3.6828543329939013`*^9}, {3.682854708606367*^9, 3.682854727712431*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"833979b0-559c-4832-8ddc-79760cd2f9ba"],

Cell[CellGroupData[{

Cell[BoxData["rho$known"], "Input",
 CellLabel->
  "In[132]:=",ExpressionUUID->"55c28625-7aac-469b-85bc-13070f709222"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ix$sym", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"\[CapitalDelta]", " ", "\[Omega]"}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]], "-", 
     FractionBox[
      RowBox[{"\[CapitalDelta]", " ", "\[Omega]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t$sym", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "+", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]}], ")"}]}], "+", 
  RowBox[{"Iz$sym", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[CapitalDelta]", "2"], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Omega]", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t$sym", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "+", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{"Iy$sym", " ", "\[Omega]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"t$sym", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[CapitalDelta]", "2"], "+", 
     SuperscriptBox["\[Omega]", "2"]}]]]}]], "Output",
 CellChangeTimes->{{3.6828542855384903`*^9, 3.682854309037294*^9}, 
   3.6828547322708073`*^9, 3.6828605032000713`*^9, 3.682860722907832*^9, 
   3.682861602632804*^9, 3.682861802769744*^9, 3.855509037127586*^9, 
   3.8555093161225853`*^9, 3.855511808300912*^9, 3.85551282110198*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"a96942ba-671a-400a-9921-b337e411b407"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rho$calc", " "}]], "Input",
 CellChangeTimes->{{3.6828542698954763`*^9, 3.6828542731195374`*^9}, {
  3.682854565784657*^9, 3.6828546066844263`*^9}, {3.68285464301569*^9, 
  3.6828546958659763`*^9}, {3.682854737272936*^9, 3.682854740237505*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"0f327f76-4261-4f6d-8f02-d9de5a67598c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ix$sym", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"\[CapitalDelta]", " ", "\[Omega]"}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]], "-", 
     FractionBox[
      RowBox[{"\[CapitalDelta]", " ", "\[Omega]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t$sym", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "+", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]}], ")"}]}], "+", 
  RowBox[{"Iz$sym", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[CapitalDelta]", "2"], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Omega]", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t$sym", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "+", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{"Iy$sym", " ", "\[Omega]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"t$sym", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[CapitalDelta]", "2"], "+", 
     SuperscriptBox["\[Omega]", "2"]}]]]}]], "Output",
 CellChangeTimes->{{3.682854287332494*^9, 3.682854311339834*^9}, {
   3.68285456954366*^9, 3.68285460715519*^9}, {3.682854646537404*^9, 
   3.682854697941959*^9}, 3.682854740611821*^9, 3.682860503244466*^9, 
   3.682860722936603*^9, 3.682861602654777*^9, 3.6828618028038397`*^9, 
   3.855509037145136*^9, 3.8555093161338778`*^9, 3.855511808314687*^9, 
   3.855512821188497*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"6729b782-a1ad-4958-93a5-8b369fc5b9ef"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Force with a phase factor ", "Subsubsection",
 CellChangeTimes->{{3.661601509513736*^9, 3.661601517167842*^9}, {
  3.661601685086095*^9, 3.6616016856139593`*^9}, {3.661604369472599*^9, 
  3.661604373430613*^9}},ExpressionUUID->"ed11fadd-da27-44fa-8971-\
693b19711d91"],

Cell[TextData[{
 "This fails because Mathematica cannot recognize that ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{"aL", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}], "\[Rule]",
    "  ", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "i"}], " ", "\[Phi]"}]], " ", 
     RowBox[{"Comm", "[", 
      RowBox[{"aL", ",", "aR"}], "]"}]}], "\[Rule]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "i"}], " ", "\[Phi]"}]]}]}]],
  CellChangeTimes->{
   3.661600376064962*^9, {3.661600426843581*^9, 3.66160044692731*^9}, {
    3.661600567841215*^9, 3.66160057816276*^9}, {3.661600643374647*^9, 
    3.6616006677359037`*^9}, {3.661600698704836*^9, 3.661600731836134*^9}, {
    3.6616010484626513`*^9, 3.6616010618633747`*^9}, 3.6616015385193167`*^9, 
    3.6616015689219103`*^9, {3.6616016294550962`*^9, 3.661601652197709*^9}, 
    3.661601691539207*^9, 3.6616021841194553`*^9, 3.661602350590143*^9, 
    3.661602505026248*^9, 3.661604317425989*^9, {3.6616043721031218`*^9, 
    3.66160438973948*^9}, 3.6828519218874083`*^9, 3.682860512411813*^9, 
    3.6828607332919893`*^9, 3.6828616117405653`*^9, 3.682861811635421*^9, 
    3.682862041754469*^9, 3.682862099291905*^9},
  FontSize->16,ExpressionUUID->"ee49f84a-729d-4496-92c7-bc1ddb078959"],
 ".  Conclude that the Comm[] function is not yet smart enough to factor a",
 StyleBox[" function of scalar",
  FontSlant->"Italic"],
 " out of a commutator.  "
}], "Text",
 CellChangeTimes->{{3.682862327680539*^9, 3.682862438992874*^9}},
 FontSize->18,ExpressionUUID->"cd3234c9-a50f-4cdb-8cfc-5b0f207ddf0f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"{", 
    RowBox[{"F", ",", "\[Phi]"}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"F", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"F", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$1", " ", "=", " ", 
   RowBox[{"F", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "i"}], " ", "\[Phi]"}], "]"}], " ", "aL"}], " ", "+", 
      " ", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"i", " ", "\[Phi]"}], "]"}], " ", "aL"}]}], " ", ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599989586681*^9}, {
  3.661600801286552*^9, 3.661600807763794*^9}, {3.661600966070225*^9, 
  3.661601010459141*^9}, {3.661601621266842*^9, 3.661601648932316*^9}, {
  3.6616043049887943`*^9, 3.66160435768355*^9}, {3.6828620738967447`*^9, 
  3.682862087158081*^9}},
 FontSize->16,
 CellLabel->
  "In[134]:=",ExpressionUUID->"89a7f557-2f12-47c9-9cd6-1b86e6ec1cde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evolver", "[", 
   RowBox[{"H$1", ",", "t", ",", "aR"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.6615999979301577`*^9, 3.661600052902892*^9}, {
  3.661600252980455*^9, 3.6616003005713778`*^9}, {3.661600331228952*^9, 
  3.6616003753055487`*^9}, {3.661600425748569*^9, 3.6616004460721083`*^9}, {
  3.661600561499104*^9, 3.661600577381302*^9}, {3.661600638480967*^9, 
  3.661600666015003*^9}, {3.661600701280002*^9, 3.6616007310693493`*^9}, {
  3.661601025010738*^9, 3.6616010520976973`*^9}, {3.66160156137223*^9, 
  3.661601567965077*^9}, {3.66160169077514*^9, 3.661601690909215*^9}, {
  3.661604378984228*^9, 3.661604387210058*^9}},
 FontSize->16,
 CellLabel->
  "In[137]:=",ExpressionUUID->"169bb051-39eb-4eb7-afbc-82b19fa93e13"],

Cell[BoxData[
 TemplateBox[{
  "Evolver", "unsolvable", "\"Unrecognized evolution\"", 2, 137, 23, 
   19343796877427458990, "Local", "Evolve`Evolver"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.661604317396896*^9, {3.661604372092123*^9, 3.661604389733602*^9}, 
   3.682851921865035*^9, 3.682860512394071*^9, 3.682860733274548*^9, 
   3.6828616117240887`*^9, 3.6828618116192636`*^9, 3.682862041738008*^9, 
   3.682862099275535*^9, 3.855509062056419*^9, 3.855511829833206*^9, 
   3.855512844640329*^9},
 CellLabel->
  "During evaluation of \
In[137]:=",ExpressionUUID->"19f9517c-7b04-40e4-9b2a-d685b8da9948"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"aR", ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "F", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["F", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], ")"}]}], 
   ",", 
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["F", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}], 
      "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}], 
      "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}], 
      "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}], 
     ")"}]}], ",", 
   RowBox[{
    SuperscriptBox["F", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
                RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}],
        "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
                RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}],
        "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
                RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}],
        "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
                RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}],
        "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
                RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}],
        "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
                RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}],
        "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
                RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}],
        "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
                RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}],
        "]"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.661600376064962*^9, {3.661600426843581*^9, 3.66160044692731*^9}, {
   3.661600567841215*^9, 3.66160057816276*^9}, {3.661600643374647*^9, 
   3.6616006677359037`*^9}, {3.661600698704836*^9, 3.661600731836134*^9}, {
   3.6616010484626513`*^9, 3.6616010618633747`*^9}, 3.6616015385193167`*^9, 
   3.6616015689219103`*^9, {3.6616016294550962`*^9, 3.661601652197709*^9}, 
   3.661601691539207*^9, 3.6616021841194553`*^9, 3.661602350590143*^9, 
   3.661602505026248*^9, 3.661604317425989*^9, {3.6616043721031218`*^9, 
   3.66160438973948*^9}, 3.6828519218874083`*^9, 3.682860512411813*^9, 
   3.6828607332919893`*^9, 3.6828616117405653`*^9, 3.682861811635421*^9, 
   3.682862041754469*^9, 3.682862099291905*^9, 3.855509062077426*^9, 
   3.855511829851041*^9, 3.855512844664589*^9},
 FontSize->16,
 CellLabel->
  "Out[137]=",ExpressionUUID->"dd0b44c7-fe8d-4d10-8a33-60ffc9ac7fb5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1190, 1169},
WindowMargins->{{Automatic, 664}, {Automatic, 76}},
TaggingRules->Association["TryRealOnly" -> False],
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (June 19, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"039357db-4bf2-465c-bcef-5f181f5db5b2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 269, 4, 98, "Title",ExpressionUUID->"391a202e-1e28-48b9-91a8-88743dfbb72d"],
Cell[852, 28, 211, 6, 90, "Text",ExpressionUUID->"9c13195a-2f5b-44a0-b9d6-7d334412a0b8"],
Cell[1066, 36, 418, 10, 38, "Text",ExpressionUUID->"d5e7dddf-7378-41a8-a0a7-42b519c56421"],
Cell[CellGroupData[{
Cell[1509, 50, 171, 3, 67, "Section",ExpressionUUID->"4f5edf7b-f0b5-41bd-98ab-96ef2604d472"],
Cell[1683, 55, 370, 9, 84, "Text",ExpressionUUID->"72627f24-66c0-4362-93bf-94bb3be82d04"],
Cell[2056, 66, 831, 17, 61, "Input",ExpressionUUID->"1d4257d9-d4f6-4f1d-ad1c-8f90af652578"],
Cell[2890, 85, 207, 2, 36, "Text",ExpressionUUID->"5a5f6383-8d48-41c2-b70f-bd0112887a06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3134, 92, 160, 3, 67, "Section",ExpressionUUID->"b69153fa-f825-45f0-8739-690e4abd6b5a"],
Cell[3297, 97, 741, 15, 64, "Text",ExpressionUUID->"3655837e-64da-408c-9c7c-8c2b99bb2c37"],
Cell[CellGroupData[{
Cell[4063, 116, 797, 18, 113, "Input",ExpressionUUID->"ab7657da-a278-4379-a33e-689bfd39b35b"],
Cell[4863, 136, 890, 12, 34, "Output",ExpressionUUID->"714b9a0b-9303-4d87-9bff-fabe9895ed68"],
Cell[5756, 150, 843, 11, 34, "Output",ExpressionUUID->"236a434e-d930-4b81-83f8-8244dda60a43"]
}, Open  ]],
Cell[6614, 164, 381, 7, 64, "Text",ExpressionUUID->"931bda02-bd34-4f64-836d-d38976e30a7a"],
Cell[6998, 173, 785, 18, 61, "Input",ExpressionUUID->"8777a335-4ef0-48ee-99fe-4f94f81dcf5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7820, 196, 226, 4, 67, "Section",ExpressionUUID->"40dd6435-da21-4952-afcb-9ffff154b643"],
Cell[8049, 202, 512, 9, 64, "Text",ExpressionUUID->"82a186b2-ec29-4d77-89ae-048209ebd5ef"],
Cell[CellGroupData[{
Cell[8586, 215, 1020, 21, 61, "Input",ExpressionUUID->"8c2cad5a-cd1e-4d46-9c12-f91019b722de"],
Cell[9609, 238, 1571, 36, 62, "Output",ExpressionUUID->"43e6779d-f330-4ded-8f0c-ce456e05c869"]
}, Open  ]],
Cell[11195, 277, 534, 9, 64, "Text",ExpressionUUID->"f066a196-5844-4b85-8fa4-78a71c0d7d77"],
Cell[CellGroupData[{
Cell[11754, 290, 583, 16, 61, "Input",ExpressionUUID->"64231d27-0bce-42ea-b9d6-f63ce6c02bb6"],
Cell[12340, 308, 2065, 50, 142, "Output",ExpressionUUID->"cdb416cc-55fb-4a7d-a5c3-55e92ac21d60"]
}, Open  ]],
Cell[14420, 361, 206, 2, 38, "Text",ExpressionUUID->"a45755e1-b303-4fa9-8287-c9aa13e6116c"],
Cell[CellGroupData[{
Cell[14651, 367, 893, 20, 61, "Input",ExpressionUUID->"90433bd8-d59d-4c8b-a733-562dc43b0402"],
Cell[15547, 389, 125127, 2221, 320, "Output",ExpressionUUID->"124a77a2-64b5-498f-9fe7-630c5986cdcb"]
}, Open  ]],
Cell[140689, 2613, 217, 3, 38, "Text",ExpressionUUID->"95fe649a-8e59-499e-854e-ff37d92fdfe8"],
Cell[CellGroupData[{
Cell[140931, 2620, 2146, 56, 136, "Input",ExpressionUUID->"1a2b1bfe-4738-4185-a2e2-26ef206bd1ae"],
Cell[CellGroupData[{
Cell[143102, 2680, 400, 11, 32, "Print",ExpressionUUID->"a6b3a7c5-c05b-40e2-9d9a-0672777ae0fe"],
Cell[143505, 2693, 397, 11, 32, "Print",ExpressionUUID->"5ffb28f1-a5c3-4171-8e5c-f04ad0b90155"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143963, 2711, 189, 3, 67, "Section",ExpressionUUID->"dfefb8e6-da99-4bd0-9ed1-b6a5a4d41ff7"],
Cell[144155, 2716, 192, 2, 38, "Text",ExpressionUUID->"96351404-c45d-448b-bc63-4e93635996bb"],
Cell[CellGroupData[{
Cell[144372, 2722, 1336, 27, 113, "Input",ExpressionUUID->"d3806585-b421-434c-abd9-2e9f505618f8"],
Cell[145711, 2751, 1146, 19, 28, "Message",ExpressionUUID->"d5b426ea-e791-44fa-88ca-c2bb2aba2419"],
Cell[146860, 2772, 1159, 20, 28, "Message",ExpressionUUID->"59f2e08c-4288-4725-a553-bfdd999a377f"],
Cell[148022, 2794, 1158, 20, 28, "Message",ExpressionUUID->"5b66a6c0-1e99-4077-b39c-73c03b11d240"]
}, Open  ]],
Cell[149195, 2817, 172, 2, 38, "Text",ExpressionUUID->"790179ad-eee3-4590-9ea5-c33ab8188bdb"],
Cell[149370, 2821, 344, 8, 34, "Input",ExpressionUUID->"05cbd74f-efee-4f1b-a208-324ee6d0e8c7"],
Cell[CellGroupData[{
Cell[149739, 2833, 170, 3, 54, "Subsection",ExpressionUUID->"3edc2822-178a-4639-8fec-8b6ef46811f8"],
Cell[149912, 2838, 392, 13, 38, "Text",ExpressionUUID->"34675cf0-7997-4d0b-a96f-f8d967d8b44a"],
Cell[150307, 2853, 1314, 33, 87, "Input",ExpressionUUID->"00b31c7a-1c82-4221-8d6b-8ea8027766bc"],
Cell[151624, 2888, 196, 2, 38, "Text",ExpressionUUID->"b43409e0-25e0-4280-ad0b-dcfaf4176c3f"],
Cell[CellGroupData[{
Cell[151845, 2894, 425, 10, 61, "Input",ExpressionUUID->"d89ee293-dc04-450b-b734-b369ac840c1e"],
Cell[152273, 2906, 1864, 51, 124, "Output",ExpressionUUID->"b040c1ae-8aa0-4185-abf0-ed0af2fbaf84"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154186, 2963, 159, 3, 54, "Subsection",ExpressionUUID->"21e579fd-e317-4909-88f0-fcd87faade2f"],
Cell[154348, 2968, 751, 14, 39, "Text",ExpressionUUID->"c2b7809c-24c2-4413-a8f0-940fecbbaca8"],
Cell[CellGroupData[{
Cell[155124, 2986, 1038, 24, 87, "Input",ExpressionUUID->"47722331-ebc1-4891-8149-acdea61bf41f"],
Cell[156165, 3012, 571, 12, 34, "Output",ExpressionUUID->"47dba91c-7091-4db0-9762-fd582a8fa7ef"]
}, Open  ]],
Cell[156751, 3027, 760, 14, 39, "Text",ExpressionUUID->"33b08f2f-4f44-4b47-9de5-bca03ba21ea7"],
Cell[CellGroupData[{
Cell[157536, 3045, 1398, 28, 87, "Input",ExpressionUUID->"5d7ee539-d3f4-48ca-aabe-bc10646fb5f2"],
Cell[158937, 3075, 4065, 104, 93, "Output",ExpressionUUID->"36c43bba-fd42-4639-923d-ad8d1d1a05e5"]
}, Open  ]],
Cell[163017, 3182, 590, 7, 38, "Text",ExpressionUUID->"329bcee6-c85d-4796-b76f-e8dc316da813"],
Cell[CellGroupData[{
Cell[163632, 3193, 1171, 27, 61, "Input",ExpressionUUID->"1d4ee958-21cd-4ee4-ab4d-3ebd68362402"],
Cell[164806, 3222, 1856, 50, 66, "Output",ExpressionUUID->"1d37bd6f-cbf9-4daa-a2c4-4fe0371e18d6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166723, 3279, 159, 3, 67, "Section",ExpressionUUID->"075ed698-265d-4b6e-82d3-693ec9c7ae65"],
Cell[CellGroupData[{
Cell[166907, 3286, 166, 2, 59, "Subsection",ExpressionUUID->"8e5e675f-c4bf-4619-b9a3-6d74b82b3c81"],
Cell[CellGroupData[{
Cell[167098, 3292, 2728, 74, 269, "Input",ExpressionUUID->"fcf52e1f-2f00-4ab4-9769-ba630c5f4602"],
Cell[169829, 3368, 1034, 18, 28, "Message",ExpressionUUID->"e847adb9-dc68-48a7-afd3-98d60819355f"],
Cell[170866, 3388, 1036, 18, 28, "Message",ExpressionUUID->"105968ac-ddb6-4ca3-a17e-27491348997c"],
Cell[171905, 3408, 1072, 19, 28, "Message",ExpressionUUID->"38d9a82e-6fb0-42cf-8804-10645ca3e819"],
Cell[172980, 3429, 1039, 18, 28, "Message",ExpressionUUID->"dd03164b-2a00-45f7-89aa-f894f3adbcfa"],
Cell[174022, 3449, 1041, 18, 28, "Message",ExpressionUUID->"43712394-68ab-457d-ad29-2cd23cf5805d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175100, 3472, 395, 9, 61, "Input",ExpressionUUID->"3557371a-385f-4036-85c1-cb279db328ba"],
Cell[175498, 3483, 434, 7, 38, "Output",ExpressionUUID->"d6e33791-9808-47aa-b1c0-83e598065710"],
Cell[175935, 3492, 434, 7, 38, "Output",ExpressionUUID->"06d94bd2-04ec-411b-81bb-2d8569855990"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176418, 3505, 198, 3, 59, "Subsection",ExpressionUUID->"2ee4a907-cd3a-4091-aa99-b9f4faca65b3"],
Cell[CellGroupData[{
Cell[176641, 3512, 167, 3, 45, "Subsubsection",ExpressionUUID->"23381176-f60d-4f95-a313-e254cbc06dc7"],
Cell[176811, 3517, 833, 21, 77, "Input",ExpressionUUID->"f1498f4a-d74e-4bbc-ac14-f62106dde580"],
Cell[CellGroupData[{
Cell[177669, 3542, 689, 13, 34, "Input",ExpressionUUID->"44173c89-4aae-449c-80c4-0631752e388b"],
Cell[178361, 3557, 890, 18, 38, "Output",ExpressionUUID->"151c9eb8-4a5a-4729-8b98-d9216aea5145"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[179300, 3581, 225, 4, 45, "Subsubsection",ExpressionUUID->"732605c5-2fc7-4600-84f6-1843950a2e2a"],
Cell[179528, 3587, 987, 24, 113, "Input",ExpressionUUID->"486f6406-f25c-4edf-89ab-3706c90469ca"],
Cell[CellGroupData[{
Cell[180540, 3615, 926, 24, 61, "Input",ExpressionUUID->"9a3a138a-7ef8-42be-9233-03185cb08747"],
Cell[181469, 3641, 589, 9, 38, "Output",ExpressionUUID->"a44671da-5ff4-4f04-96d9-45f266d5a98e"],
Cell[182061, 3652, 590, 9, 38, "Output",ExpressionUUID->"ea6f59f7-9a0e-464c-8fff-8b37e35e348d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[182700, 3667, 214, 4, 45, "Subsubsection",ExpressionUUID->"41858e2d-7e10-4e49-b231-c669ae98c3af"],
Cell[182917, 3673, 1029, 26, 79, "Input",ExpressionUUID->"08e6d34d-c4fb-43b3-b202-a94f0f18fa91"],
Cell[CellGroupData[{
Cell[183971, 3703, 1063, 21, 34, "Input",ExpressionUUID->"c76ec6b7-1daf-424d-af2b-440c438305a8"],
Cell[185037, 3726, 1117, 22, 38, "Output",ExpressionUUID->"9dfe378d-03c2-42eb-986b-07186e46b018"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[186203, 3754, 208, 4, 45, "Subsubsection",ExpressionUUID->"7c90b3f8-f411-4d32-af1e-1f756afc0518"],
Cell[186414, 3760, 742, 18, 61, "Input",ExpressionUUID->"746e8bbc-b64f-4a76-a7ad-0943b01b70ae"],
Cell[CellGroupData[{
Cell[187181, 3782, 1216, 23, 61, "Input",ExpressionUUID->"8e911bd6-e939-4418-b6f5-a7c007985682"],
Cell[188400, 3807, 994, 15, 38, "Output",ExpressionUUID->"ab99d5a2-d1f1-4226-8fe8-1282fb696642"],
Cell[189397, 3824, 1039, 17, 38, "Output",ExpressionUUID->"5edcbd0c-d609-4fff-8657-2c5186ec4e85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190473, 3846, 432, 10, 61, "Input",ExpressionUUID->"f747de03-a945-4f2f-9a8e-2e12764ebdf5"],
Cell[190908, 3858, 393, 8, 54, "Output",ExpressionUUID->"ea78e384-0d4d-4570-8284-6f7fa742c495"],
Cell[191304, 3868, 395, 8, 54, "Output",ExpressionUUID->"8e97d75d-bf51-4aa5-a4e7-0068e92fcd8f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191748, 3882, 160, 3, 45, "Subsubsection",ExpressionUUID->"00e1af55-0f63-4636-bebc-c1a90e5a9f97"],
Cell[191911, 3887, 790, 16, 34, "Input",ExpressionUUID->"222b41f0-d4c0-4bd3-8b75-35b0f7259305"],
Cell[CellGroupData[{
Cell[192726, 3907, 701, 19, 51, "Input",ExpressionUUID->"c90fd35e-d52f-4e84-8b4c-a1ae6030084e"],
Cell[193430, 3928, 727, 16, 37, "Output",ExpressionUUID->"1adb322c-44a7-48c3-8bae-f59027e2c340"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194194, 3949, 872, 21, 51, "Input",ExpressionUUID->"e9f53545-3cd2-418c-a762-9bddaa4dfaca"],
Cell[195069, 3972, 730, 15, 37, "Output",ExpressionUUID->"1c5aacc9-a35f-4f0d-b361-b350bbccf330"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195836, 3992, 813, 22, 51, "Input",ExpressionUUID->"ac92671f-ef50-487e-a4b2-b021ebe29395"],
Cell[196652, 4016, 953, 22, 34, "Output",ExpressionUUID->"7b1531bc-2d73-4519-ba43-ce38fad71607"]
}, Open  ]],
Cell[197620, 4041, 222, 4, 36, "Text",ExpressionUUID->"81e0ca37-16af-4660-9af1-97927ef146b6"],
Cell[CellGroupData[{
Cell[197867, 4049, 437, 12, 34, "Input",ExpressionUUID->"74dc47f7-3fa2-473a-bb35-8498ff99903e"],
Cell[198307, 4063, 9445, 175, 239, "Output",ExpressionUUID->"fea2c8a5-5492-4f85-afe6-1ef161331e90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207789, 4243, 1399, 34, 86, "Input",ExpressionUUID->"aaf1adfb-451e-40be-823e-749d9419d781"],
Cell[209191, 4279, 2937, 82, 155, "Output",ExpressionUUID->"53cbcd4e-2e07-49fa-a446-a788b823fb50"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[212201, 4369, 175, 3, 67, "Section",ExpressionUUID->"4b89dec7-6a48-4de3-b090-1c14f2c7865e"],
Cell[CellGroupData[{
Cell[212401, 4376, 1522, 40, 139, "Input",ExpressionUUID->"1dfb0cad-1b54-4142-9aa7-21c0c1614cda"],
Cell[213926, 4418, 732, 14, 28, "Message",ExpressionUUID->"5609a85b-f6a8-4834-a7a8-6c46b2d2c14d"],
Cell[214661, 4434, 732, 14, 28, "Message",ExpressionUUID->"6745273e-d1fa-4c54-b378-d683a0b760e5"]
}, Open  ]],
Cell[215408, 4451, 1325, 37, 165, "Input",ExpressionUUID->"42ade78e-2cb7-4eeb-b907-81b2885d75f1"],
Cell[216736, 4490, 3245, 87, 512, "Input",ExpressionUUID->"36cab0d1-5783-4276-91ca-5e0b2cf81e49"],
Cell[CellGroupData[{
Cell[220006, 4581, 494, 15, 61, "Input",ExpressionUUID->"0152f6e7-6dd3-49c4-b784-87785b88346c"],
Cell[220503, 4598, 366, 8, 38, "Output",ExpressionUUID->"aa743c86-8f39-4834-aaff-620d68e14a5d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220906, 4611, 352, 10, 34, "Input",ExpressionUUID->"2389743e-3926-46c6-b54d-4edab22162fa"],
Cell[221261, 4623, 380, 9, 38, "Output",ExpressionUUID->"67b1f963-c3e3-45aa-b316-ff1e3c45c1f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221678, 4637, 261, 6, 30, "Input",ExpressionUUID->"40de0c0f-f1e1-4fb8-acab-c96f277b0fb0"],
Cell[221942, 4645, 303, 5, 34, "Output",ExpressionUUID->"9671fc4c-f7ba-4d6b-8c5f-c4535ef1e8ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222282, 4655, 313, 9, 30, "Input",ExpressionUUID->"0d9e265e-1a04-49a8-bb2a-ba912f819101"],
Cell[222598, 4666, 335, 7, 34, "Output",ExpressionUUID->"3a7258c1-a911-4bfb-8f26-832dfd863452"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222970, 4678, 496, 15, 34, "Input",ExpressionUUID->"b5a95bf0-f590-48ba-9623-1a477eefc176"],
Cell[223469, 4695, 562, 14, 34, "Output",ExpressionUUID->"4037486a-994f-4701-b034-8f6551da246a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224068, 4714, 607, 18, 34, "Input",ExpressionUUID->"5629108b-749a-4d29-b105-17710c99b8e2"],
Cell[224678, 4734, 623, 17, 34, "Output",ExpressionUUID->"a85058a6-77a1-47cf-8b7b-b48ed0601649"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225338, 4756, 476, 13, 61, "Input",ExpressionUUID->"7de76042-1344-4ab3-a1c3-92588030fa02"],
Cell[225817, 4771, 491, 11, 34, "Output",ExpressionUUID->"62ad286e-8bcc-4118-85ce-c953a7495576"],
Cell[226311, 4784, 471, 10, 34, "Output",ExpressionUUID->"5b6774e1-0aab-42c0-aaba-e1cbe3ee4786"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226819, 4799, 508, 14, 34, "Input",ExpressionUUID->"a9735267-6089-487e-848e-33acf0468835"],
Cell[227330, 4815, 533, 11, 28, "Message",ExpressionUUID->"9ceab006-7bf9-4d5d-9d80-e2fcb83ea58b"],
Cell[227866, 4828, 1263, 33, 37, "Output",ExpressionUUID->"47edff23-7411-4663-8a07-7aa40b494f7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229166, 4866, 354, 10, 30, "Input",ExpressionUUID->"fce5eff0-10eb-4b76-a5ff-d16fc165d0da"],
Cell[229523, 4878, 333, 7, 34, "Output",ExpressionUUID->"e69251a1-d359-413b-80a1-a7944e53754c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229893, 4890, 500, 14, 30, "Input",ExpressionUUID->"9f6f87e7-27cf-4b76-8ef6-91aa3f20ade5"],
Cell[230396, 4906, 434, 9, 28, "Message",ExpressionUUID->"c2e6246f-077d-473a-a475-b3360458f7c1"],
Cell[230833, 4917, 1793, 48, 60, "Output",ExpressionUUID->"a86ad508-b565-4674-93cd-81e7b8a371c7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[232675, 4971, 160, 3, 67, "Section",ExpressionUUID->"1123775e-cb4a-4e3d-8bd9-2566684252fd"],
Cell[CellGroupData[{
Cell[232860, 4978, 190, 3, 45, "Subsubsection",ExpressionUUID->"74c49c22-35e0-44bd-9343-26c9a570889b"],
Cell[233053, 4983, 231, 6, 30, "Text",ExpressionUUID->"7d125066-aa16-49c4-99d7-cb8772e0d7c1"],
Cell[CellGroupData[{
Cell[233309, 4993, 1507, 38, 180, "Input",ExpressionUUID->"e84fc74a-5679-4d4b-9b0e-348b1dbb7c6a"],
Cell[234819, 5033, 596, 12, 70, "Message",ExpressionUUID->"a3e492a5-7501-4fc2-aebd-4b5893eb8a14"],
Cell[235418, 5047, 598, 12, 70, "Message",ExpressionUUID->"d284307b-f025-4436-ab43-7665f285f435"],
Cell[236019, 5061, 632, 12, 70, "Message",ExpressionUUID->"cc45cf4a-c7e7-4ccc-b8a7-495a1bd876aa"],
Cell[236654, 5075, 596, 12, 70, "Message",ExpressionUUID->"9298bb6e-ef29-413b-9a86-2fa4501741dd"],
Cell[237253, 5089, 598, 12, 70, "Message",ExpressionUUID->"ea5c6073-46fd-4082-b370-450e4b0526fa"],
Cell[237854, 5103, 630, 12, 70, "Message",ExpressionUUID->"8ba57842-a1c0-4f09-b345-7bdbaf4b6fc8"]
}, Open  ]],
Cell[238499, 5118, 1853, 45, 180, "Input",ExpressionUUID->"833979b0-559c-4832-8ddc-79760cd2f9ba"],
Cell[CellGroupData[{
Cell[240377, 5167, 118, 2, 32, "Input",ExpressionUUID->"55c28625-7aac-469b-85bc-13070f709222"],
Cell[240498, 5171, 2088, 58, 70, "Output",ExpressionUUID->"a96942ba-671a-400a-9921-b337e411b407"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242623, 5234, 351, 6, 32, "Input",ExpressionUUID->"0f327f76-4261-4f6d-8f02-d9de5a67598c"],
Cell[242977, 5242, 2183, 60, 70, "Output",ExpressionUUID->"6729b782-a1ad-4958-93a5-8b369fc5b9ef"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[245209, 5308, 274, 4, 37, "Subsubsection",ExpressionUUID->"ed11fadd-da27-44fa-8971-693b19711d91"],
Cell[245486, 5314, 1750, 39, 66, "Text",ExpressionUUID->"cd3234c9-a50f-4cdb-8cfc-5b0f207ddf0f"],
Cell[247239, 5355, 1205, 35, 87, "Input",ExpressionUUID->"89a7f557-2f12-47c9-9cd6-1b86e6ec1cde"],
Cell[CellGroupData[{
Cell[248469, 5394, 770, 14, 34, "Input",ExpressionUUID->"169bb051-39eb-4eb7-afbc-82b19fa93e13"],
Cell[249242, 5410, 630, 13, 28, "Message",ExpressionUUID->"19f9517c-7b04-40e4-9b2a-d685b8da9948"],
Cell[249875, 5425, 25110, 696, 767, "Output",ExpressionUUID->"dd0b44c7-fe8d-4d10-8a33-60ffc9ac7fb5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

