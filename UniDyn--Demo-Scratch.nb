(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    209144,       5018]
NotebookOptionsPosition[    201527,       4775]
NotebookOutlinePosition[    201886,       4791]
CellTagsIndexPosition[    201843,       4788]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["UniDyn--Demo-Scratch.nb", "Title",
 CellChangeTimes->{{3.6352690845273046`*^9, 3.635269100847275*^9}, {
  3.6609180081345453`*^9, 3.660918013241088*^9}, {3.6615988707006617`*^9, 
  3.6615988735349627`*^9}}],

Cell["\<\
John A. Marohn
jam99@cornell.edu
Cornell University\
\>", "Text",
 CellChangeTimes->{{3.635269101985786*^9, 3.635269121580956*^9}},
 FontSize->18],

Cell[TextData[{
 StyleBox["Abstract:",
  FontWeight->"Bold"],
 "  This demonstration notebook loads the ",
 StyleBox["UniDyn",
  FontWeight->"Bold"],
 " package and executes the package\[CloseCurlyQuote]s unit tests."
}], "Text",
 CellChangeTimes->{{3.6352698622319117`*^9, 3.635269926908793*^9}, {
  3.6352701305950613`*^9, 3.635270138669529*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell["Set the path to the package", "Section",
 CellChangeTimes->{{3.635270036711257*^9, 3.63527004852262*^9}}],

Cell[TextData[{
 "Tell ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " the path to the directory containing the package.    \n\nEDIT THE \
FOLLOWING PATH STRING:"
}], "Text",
 CellChangeTimes->{{3.635270060901009*^9, 3.635270086988311*^9}, {
  3.6610825274488792`*^9, 3.6610825288209763`*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "$PackagePath", " ", "=", 
    "\"\</Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/unidyn\>\"\
"}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.6349053527016897`*^9, 3.6349054064223843`*^9}, {
  3.634910931339162*^9, 3.634910931457775*^9}, {3.634914337947165*^9, 
  3.6349143671071568`*^9}, {3.634922597904743*^9, 3.634922606812076*^9}, {
  3.635268730835155*^9, 3.635268731125407*^9}, {3.635269951638358*^9, 
  3.635269958323474*^9}, {3.660918115324842*^9, 3.660918132325369*^9}, {
  3.660918590921587*^9, 3.660918600403768*^9}},
 FontSize->16],

Cell["YOU SHOULD NOT NEED TO EDIT ANYTHING FROM HERE ONWARDS.", "Text",
 CellChangeTimes->{{3.635270073196437*^9, 3.635270077357624*^9}},
 FontSize->16]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load the package", "Section",
 CellChangeTimes->{{3.635269129230983*^9, 3.63526913095236*^9}}],

Cell[TextData[{
 "Append the package path to the system path.  Before trying to load the \
package, ask ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to find it.  This is a test that we directed ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to the correct directory.  The output of this command should be the full \
system path to the UniDyn.m file.   "
}], "Text",
 CellChangeTimes->{{3.635269223597199*^9, 3.635269340159473*^9}, {
   3.635269947982662*^9, 3.6352699492517843`*^9}, {3.635269985297124*^9, 
   3.63527000724584*^9}, 3.635270066996499*^9, {3.63527010818321*^9, 
   3.6352701131658497`*^9}, {3.660918102499856*^9, 3.6609181035465183`*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Path", " ", "=", " ", 
   RowBox[{"AppendTo", "[", 
    RowBox[{"$Path", ",", "$PackagePath"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindFile", "[", "\"\<UniDyn`\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.634906393354924*^9, 3.634906398308229*^9}, {
  3.634922599063291*^9, 3.634922599752222*^9}, {3.635268728673848*^9, 
  3.6352687402094*^9}, {3.635269954012105*^9, 3.6352699550474253`*^9}},
 FontSize->16],

Cell[BoxData["\<\"/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
UniDyn/UniDyn.m\"\>"], "Output",
 CellChangeTimes->{3.6614707136740513`*^9, 3.661479177158627*^9, 
  3.661532655938403*^9, 3.661534424524879*^9, 3.6615345733078747`*^9, 
  3.66153595871663*^9, 3.6615361849943542`*^9, 3.6615362214825907`*^9, 
  3.661536464045929*^9, 3.661537151958733*^9, 3.661537709711556*^9, 
  3.661540165053076*^9, 3.661542369100931*^9, 3.661599473254528*^9}]
}, Open  ]],

Cell["\<\
Now that we are confident that the path is set correctlly, load the package.  \
Setting the global $VerboseLoad variable to True will print out the help \
strings for key commands in the package.  \
\>", "Text",
 CellChangeTimes->{{3.635269347360386*^9, 3.63526943190546*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$VerboseLoad", " ", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<UniDyn`\>\"", "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQfYUjQpVD9LXjxxR+TRC9peyGEyeQ/lH0EExXTKuJ
BdGbVk8B0zYvFOpA9Ik35o0gmsEzcwKI3ruyF0yrn4ubDqITDHPAdMGBGUdA
9K1JG8G0V4+DGg+Q1vtwBUyLu5WcAtE8yv6nQfT861tdBUDm3NFxA9F2v/Ym
g+h4M4cUED09+VEGiC6rzcoH0RUNSUHSQHqfnVQoiP6uyGkiC6T5nmeCabdp
f25FAekIO8nbINqkKUQlBUiz/Z0DplNs3jwG0Q88GJ+A6Bf2PcZdQNqjYi6Y
XnQt//l3t9eOqzNZX4DoFiF11h9A+sM0WzANAASGiF4=
  "],
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.661599473294333*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.661599473297661*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.661599473301723*^9}],

Cell[BoxData["\<\"NCMultiplication.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473305887*^9}],

Cell[BoxData["\<\"NC1SetCommands.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473309845*^9}],

Cell[BoxData["\<\"NCInverses.m loaded\"\>"], "Print",
 CellChangeTimes->{3.66159947331378*^9}],

Cell[BoxData["\<\"NCTransposes.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473318174*^9}],

Cell[BoxData["\<\"NCAdjoints.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473322137*^9}],

Cell[BoxData["\<\"NCCo.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473326063*^9}],

Cell[BoxData["\<\"NCRoots.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473329933*^9}],

Cell[BoxData["\<\"NC2SetCommands.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473333853*^9}],

Cell[BoxData["\<\"NCCollect.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473338004*^9}],

Cell[BoxData["\<\"NCSubstitute.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473341881*^9}],

Cell[BoxData["\<\"NCMonomial.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473345847*^9}],

Cell[BoxData["\<\"NCSolve.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6615994733498096`*^9}],

Cell[BoxData["\<\"NCTools.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473353717*^9}],

Cell[BoxData["\<\"NC2SimplifyRational.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473357821*^9}],

Cell[BoxData["\<\"NC1SimplifyRational.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473361841*^9}],

Cell[BoxData["\<\"NCSimplifyRational.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6615994733671303`*^9}],

Cell[BoxData["\<\"NCComplex.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473371889*^9}],

Cell[BoxData["\<\"NCMatMult.m loaded\"\>"], "Print",
 CellChangeTimes->{3.66159947348734*^9}],

Cell[BoxData["\<\"NCDiff.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6615994735000753`*^9}],

Cell[BoxData["\<\"NCSchur.m loaded\"\>"], "Print",
 CellChangeTimes->{3.66159947350408*^9}],

Cell[BoxData["\<\"NCAlias.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473508357*^9}],

Cell[BoxData["\<\"Grabs.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473512417*^9}],

Cell[BoxData["\<\"NCTaylorCoeff.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473516474*^9}],

Cell[BoxData["\<\"NCConvexity.m and NCGuts.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473525034*^9}],

Cell[BoxData["\<\"NCRealizationFunctions.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6615994735302887`*^9}],

Cell[BoxData["\<\"NCTeXForm.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473534608*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"NCTeX::Using '\"\>", "\[InvisibleSpace]", "\<\"open\"\>", 
   "\[InvisibleSpace]", "\<\"' as PDFViewer.\"\>"}],
  SequenceForm["NCTeX::Using '", "open", "' as PDFViewer."],
  Editable->False]], "Print",
 CellChangeTimes->{3.661599473571765*^9}],

Cell[BoxData["\<\"NCTeX.m loaded\"\>"], "Print",
 CellChangeTimes->{3.661599473577305*^9}],

Cell[BoxData["\<\"NCMaster.m loaded\"\>"], "Print",
 CellChangeTimes->{3.66159947358248*^9}],

Cell[BoxData["\<\"NCOutput.m loaded\"\>"], "Print",
 CellChangeTimes->{3.6615994735866137`*^9}],

Cell["\<\
------------------------------------------------------------
NCAlgebra - Version 4.0.6
Compatible with Mathematica Version 9

Authors:
  J. William Helton*
  Mauricio de Oliveira* 
  Mark Stankus* 
  Robert L. Miller#

* Math Dept, UCSD                
# General Atomics Corp
  La  Jolla, CA 92093

Copyright: 
  Helton and Miller June 1991
  Helton 2002
  All rights reserved.

The program was written by the authors and by:
  David Hurst, Daniel Lamm, Orlando Merino, Robert Obar,
  Henry Pfister, Mike Walker, John Wavrik, Lois Yu,
  J. Camino, J. Griffin, J. Ovall, T. Shaheen, John Shopple. 
  The beginnings of the program come from eran@slac.
  Considerable recent help came from Igor Klep.


This program was written with support from 
  AFOSR, NSF, ONR, Lab for Math and Statistics at UCSD,
  UCSD Faculty Mentor Program,
  and US Department of Education.
  Primary support in 2010 is from the 
    NSF Division of Mathematical Sciences.

If you 
  (1) are a user, 
  (2) want to be a user, 
  (3) refer to NCAlgebra in a publication, or 
  (4) have had an interesting experience with NCAlgebra,
let us know by sending an e-mail message to  

  ncalg@math.ucsd.edu. 

We do not want to restrict access to NCAlgebra, but do 
  want to keep track of how it is being used.

For NCAlgebra updates see the web page:

  www.math.ucsd.edu/~ncalg 
------------------------------------------------------------\
\>", "Print",
 CellChangeTimes->{3.6615994735922813`*^9}],

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.661599473596117*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.661599473600287*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.661599473604389*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.6615994736085377`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CreateOperator", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"CreateOperator[] is used to batch-define a bunch of \
operators. Example: CreateOperator[{{Ix, Iy, Iz},{Sx,Sy,Sz}}] will create six \
operators;  each of the operators in the first list is meant to commute with \
each of the operators in the second list.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6615994736129217`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CreateScalar", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"CreateScalar[list] is used to batch-define a bunch of \
scalars. The parameter list can be a single scalar or a list of scalars.  \
Example: CreateScalar[{w1,w2}].\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661599473615766*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.6615994736183434`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.661599473620501*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.6615994736242943`*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.661599473628233*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NCSort", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NCSort[list] sorts the operators in list into canonical \
order.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661599473632144*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SortedMult", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"SortedMult[list] returns Mult[list$ordered], where \
list$ordered are the elements of list sorted into canonical order.\"\>"}]], \
"Message", "MSG",
 CellChangeTimes->{3.6615994736343107`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"MultSort", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"MultSort[NonCommutativeMultiplyt[list]] returns returns \
NonCommutativeMultiply[list$ordered], where list$ordered are the elements of \
list sorted into canonical order.  \"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6615994736369047`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.661599473639592*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6615994736421413`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.6615994736464863`*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.661599473650764*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Comm", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Comm[a,b] calculates the commutator of two \
operators.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661599473655024*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.661599473657518*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6615994736600227`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.6615994736645823`*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.661599473668806*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SpinSingle$CreateOperators", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"SpinSingle$CreateOperators[Ix,Iy,Iz,L] creates Ix, Iy, and \
Iz angular momentum operators and defines their commutation relations.  When \
the total angular momentum L = 1/2, additional rules are defined to simplify \
products of the angular momentum operators.  When the total angular momentum \
L is unspecified, no such simplification rules are defined.\"\>"}]], "Message",\
 "MSG",
 CellChangeTimes->{3.661599473673046*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.6615994736760883`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.66159947367876*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.661599473683784*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.661599473688201*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OscSingle$CreateOperators", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"OscSingle$CreateOperators[aL,aR] creates a raising \
operator aR and a lowering operator aL for single harmonic oscillator and \
defines the operator commutation relations.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661599473692585*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.6615994736952553`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.661599473697846*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.661599473702133*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.661599473706489*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Evolve", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Evolve[H,t,\[Rho]] represents unitary evolution of the \
density operator \[Rho] for a time t under the Hamiltonian H.  This function \
expands according to simplification rules but leaves the evolution \
unevaluated.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661599473711005*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Evolver", "::", "usage"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Evolver[H,t,\[Rho](0)] calculates \[Rho](t) = Exp[-I H t] \
\[Rho](0) Exp[+I H t], assuming that H is time independent, according to the \
commutation rules followed by \[Rho](0) and H.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.661599473713892*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Execute the units tests in batch", "Section",
 CellChangeTimes->{{3.635269450321582*^9, 3.635269455866803*^9}, {
  3.661082576038043*^9, 3.661082577577619*^9}}],

Cell["\<\
Included with the package are a number of files, ending in \
\[OpenCurlyDoubleQuote]-tests.m\[CloseCurlyDoubleQuote], that contain tests \
of the package\[CloseCurlyQuote]s functions -- so-called unit tests.  Set the \
working directory to the package directory and pretty-print the directory \
name.\
\>", "Text",
 CellChangeTimes->{{3.635269466546741*^9, 3.63526959787702*^9}, {
  3.6352696661918793`*^9, 3.6352697255432568`*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", "$PackagePath", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "$PackagePath", "}"}], "}"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", "\"\<Directory\>\"", "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.634944324488654*^9, 3.6349443603233624`*^9}, {
   3.6349444030097713`*^9, 3.63494440330383*^9}, {3.634944747308063*^9, 
   3.6349447481808853`*^9}, {3.634946064022402*^9, 3.634946069263152*^9}, {
   3.634946188079462*^9, 3.634946189912341*^9}, {3.6349479903618507`*^9, 
   3.6349480514686327`*^9}, {3.6349480899795113`*^9, 
   3.6349482285783367`*^9}, {3.634948408385352*^9, 3.634948452061852*^9}, {
   3.635269608570084*^9, 3.635269645220949*^9}, 3.635269728194304*^9},
 FontSize->16],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Directory\"\>",
       HoldForm]},
     {"\<\"/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/unidyn\"\
\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {None, {"Directory"}}]]]], "Output",\

 CellChangeTimes->{3.661470714474102*^9, 3.6614791775702543`*^9, 
  3.661532656000002*^9, 3.6615344249571257`*^9, 3.661534573808139*^9, 
  3.661535959139999*^9, 3.661536185384212*^9, 3.661536221855288*^9, 
  3.661536464436379*^9, 3.661537152465351*^9, 3.6615377100776463`*^9, 
  3.66154016547451*^9, 3.6615423691474123`*^9, 3.661599473745071*^9}]
}, Open  ]],

Cell["\<\
Get the names of all the unit-testing files included with the package \
(following my convention that the unit testing file end in \
\[OpenCurlyDoubleQuote]-tests.m\[CloseCurlyDoubleQuote]).   Pretty-print the \
names of the unit-test files included with the package.\
\>", "Text",
 CellChangeTimes->{
  3.6352696714534483`*^9, {3.6352697371205063`*^9, 3.6352697785313387`*^9}, {
   3.6352698393266697`*^9, 3.635269839517961*^9}, 3.6609243923593283`*^9},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fn", " ", "=", " ", 
   RowBox[{"FileNames", "[", "\"\<*-tests.m\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "fn", "}"}], "}"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", "\"\<Test files found\>\"", "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6610821906566467`*^9, 3.661082193022552*^9}},
 FontSize->16],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Test files found\"\>",
       HoldForm]},
     {
      TagBox[GridBox[{
         {"\<\"Comm-tests.m\"\>"},
         {"\<\"Evolve-tests.m\"\>"},
         {"\<\"Mult-tests.m\"\>"},
         {"\<\"OpCreate-tests.m\"\>"},
         {"\<\"Osc-tests.m\"\>"},
         {"\<\"Spins-tests.m\"\>"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {{
             Offset[0.2]}}, "RowsIndexed" -> {}}],
       Column]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {None, {"Test files found"}}]]]], "Output",
 CellChangeTimes->{3.6614707145112534`*^9, 3.6614791776199837`*^9, 
  3.66153265603694*^9, 3.66153442498964*^9, 3.661534573841134*^9, 
  3.6615359591910343`*^9, 3.661536185418442*^9, 3.661536221887788*^9, 
  3.661536464468541*^9, 3.661537152497046*^9, 3.661537710112206*^9, 
  3.661540165508061*^9, 3.6615423691764097`*^9, 3.661599473777424*^9}]
}, Open  ]],

Cell["Finally, carry out the unit tests and make a report.", "Text",
 CellChangeTimes->{{3.635269787557482*^9, 3.6352698056777897`*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tr", " ", "=", 
   RowBox[{"TestReport", " ", "/@", " ", "fn"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TableForm", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"tr", " ", "[", 
      RowBox[{"[", "k", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{"Length", "[", "tr", "]"}]}], "}"}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tests$run$total", " ", "=", " ", 
   RowBox[{"Plus", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"tr", "[", 
         RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<TestsSucceededCount\>\"", 
        "]"}], "&"}], " ", "/@", " ", 
      RowBox[{"List", " ", "@@", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"k", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"Length", "[", "tr", "]"}]}], "}"}]}], "]"}]}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"\"\<Total test run = \>\"", " ", "<>", " ", 
      RowBox[{"ToString", "[", "tests$run$total", " ", "]"}]}], ",", 
     RowBox[{"FontWeight", "\[Rule]", " ", "Bold"}], ",", 
     RowBox[{"FontSize", "\[Rule]", " ", "18"}], ",", 
     RowBox[{"FontColor", "\[Rule]", " ", "Blue"}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.661056096117302*^9, 3.6610561018069153`*^9}, {
  3.661057070228121*^9, 3.6610570741421413`*^9}, {3.661081914458424*^9, 
  3.661081936122706*^9}, {3.6610826347312403`*^9, 3.6610826394672413`*^9}, {
  3.6611400376524487`*^9, 3.661140039730514*^9}},
 FontSize->16],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False->GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{12., {0., 12.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"],
                  ImageSizeCache->{16., {4., 8.}}],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Comm-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["12",
                   "SummaryItem"]}]}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
           GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"]],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Comm-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["12",
                   "SummaryItem"]}]},
                {
                 RowBox[{
                  TagBox["\<\"Succeeded: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["12",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with wrong results: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with messages: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with errors: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
           Typeset`open$$],
           ImageSize->Automatic],
          BaselinePosition->Baseline],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: Comm-tests.m", "TimeElapsed" -> 
         Quantity[0.41000000000000003`, "Seconds"], "TestsSucceededCount" -> 
         12, "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[2 -> TestResultObject[
             Association[
             "TestIndex" -> 2, "TestID" -> "Comm > test01a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000131`2.267786293487758, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001299999999986312, "Seconds"], "MemoryUsed" -> 
              Quantity[280, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestIndex" -> 3, "TestID" -> "Comm > test01b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000111`2.1958379766186513, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010899999999836041`, "Seconds"], "MemoryUsed" -> 
              Quantity[232, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestIndex" -> 4, "TestID" -> "Comm > test01c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000118`2.222397005138119, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011399999999639476`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestIndex" -> 5, "TestID" -> "Comm > test01d", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000094`2.1236428514316925, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009200000000220143, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestIndex" -> 6, "TestID" -> "Comm > test01e", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00008`2.0536049848239375, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007899999999949614, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestIndex" -> 7, "TestID" -> "Comm > test02a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000081`2.0590000167106437, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007999999999697138, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestIndex" -> 8, "TestID" -> "Comm > test03a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000082`2.0643288502157104, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007999999999697138, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestIndex" -> 9, "TestID" -> "Comm > test03b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000085`2.079933923546286, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008399999999397778, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestIndex" -> 10, "TestID" -> "Comm > test03c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000081`2.0590000167106437, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007900000000304885, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestIndex" -> 11, "TestID" -> "Comm > test04a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00008`2.0536049848239375, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007900000000304885, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestIndex" -> 12, "TestID" -> "Comm > test04b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000099`2.1461501924295434, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009899999999873899, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestIndex" -> 13, "TestID" -> "Comm > test05a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000085`2.079933923546286, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008400000000108321, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]]], 
         "TestsSucceededIndices" -> {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, 
         "TestsFailedIndices" -> {}, "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False->GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{12., {0., 12.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"],
                  ImageSizeCache->{16., {4., 8.}}],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Evolve-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["17",
                   "SummaryItem"]}]}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
           GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"]],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Evolve-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["17",
                   "SummaryItem"]}]},
                {
                 RowBox[{
                  TagBox["\<\"Succeeded: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["17",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with wrong results: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with messages: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with errors: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
           Typeset`open$$],
           ImageSize->Automatic],
          BaselinePosition->Baseline],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: Evolve-tests.m", "TimeElapsed" -> 
         Quantity[6.48, "Seconds"], "TestsSucceededCount" -> 17, 
         "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[2 -> TestResultObject[
             Association[
             "TestIndex" -> 2, "TestID" -> "Osc > test01a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000112`2.1997330205021752, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011199999999789156`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestIndex" -> 3, "TestID" -> "Osc > test01b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000112`2.1997330205021752, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011299999999891952`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestIndex" -> 4, "TestID" -> "Osc > test01c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000101`2.154836371614637, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001029999999992981, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestIndex" -> 5, "TestID" -> "Osc > test02a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000094`2.1236428514316925, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009500000000173259, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestIndex" -> 6, "TestID" -> "Osc > test02b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000113`2.2035934413154137, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011399999999994748`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestIndex" -> 7, "TestID" -> "Osc > test02c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000102`2.1591151695939113, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001029999999992981, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestIndex" -> 8, "TestID" -> "Osc > test03a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000096`2.132786230871562, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009700000000023579, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestIndex" -> 9, "TestID" -> "Osc > test03b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00015`2.326606256887675, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015100000000245473`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestIndex" -> 10, "TestID" -> "Osc > test03c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000197`2.4449812239935866, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00019299999999944362`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestIndex" -> 11, "TestID" -> "Osc > test04a > DSolve test", 
              "Outcome" -> "Success", "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000112`2.1997330205021752, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011500000000097543`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestIndex" -> 12, "TestID" -> 
              "Osc > test05a > free evolution of Ix", "Outcome" -> "Success", 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000115`2.2112128381856055, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011699999999947863`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestIndex" -> 13, "TestID" -> 
              "Osc > test05b > on-resonance nutation of Iz", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000117`2.2187008595781554, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012099999999648503`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 14 -> TestResultObject[
             Association[
             "TestIndex" -> 14, "TestID" -> 
              "Osc > test05c > free evolution of I+", "Outcome" -> "Success", 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000134`2.2776197961968014, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00013399999999919032`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 15 -> TestResultObject[
             Association[
             "TestIndex" -> 15, "TestID" -> 
              "Osc > test05d > scalar-coupling evolution of Ix", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000119`2.2260619592245243, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011999999999900979`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 16 -> TestResultObject[
             Association[
             "TestIndex" -> 16, "TestID" -> 
              "Osc > test05e > Off-resonance nutation of of Iz", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00011`2.191907682990219, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011200000000144428`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 17 -> TestResultObject[
             Association[
             "TestIndex" -> 17, "TestID" -> 
              "Osc > test06a > free evolution of a", "Outcome" -> "Success", 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000157`2.3464146502412273, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015899999999646752`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 18 -> TestResultObject[
             Association[
             "TestIndex" -> 18, "TestID" -> 
              "Osc > test06b > free evolution of Q", "Outcome" -> "Success", 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000124`2.243936682994229, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012500000000059686`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]]], 
         "TestsSucceededIndices" -> {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
          14, 15, 16, 17, 18}, "TestsFailedIndices" -> {}, 
         "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False->GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{12., {0., 12.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"],
                  ImageSizeCache->{16., {4., 8.}}],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Mult-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["17",
                   "SummaryItem"]}]}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
           GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"]],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Mult-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["17",
                   "SummaryItem"]}]},
                {
                 RowBox[{
                  TagBox["\<\"Succeeded: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["17",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with wrong results: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with messages: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with errors: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
           Typeset`open$$],
           ImageSize->Automatic],
          BaselinePosition->Baseline],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: Mult-tests.m", "TimeElapsed" -> 
         Quantity[0.62, "Seconds"], "TestsSucceededCount" -> 17, 
         "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[2 -> TestResultObject[
             Association[
             "TestIndex" -> 2, "TestID" -> "Mult > test01a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000176`2.3960276656461437, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00017300000000020077`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestIndex" -> 3, "TestID" -> "Mult > test02a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000171`2.383511108224148, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001619999999995514, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestIndex" -> 4, "TestID" -> "Mult > test02b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000173`2.3885611009607897, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00017199999999917281`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestIndex" -> 5, "TestID" -> "Mult > test03a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000109`2.1879414957726175, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010899999999836041`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestIndex" -> 6, "TestID" -> "Mult > test03b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000114`2.2074198491684665, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011699999999947863`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestIndex" -> 7, "TestID" -> "Mult > test04a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000102`2.1591151695939113, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010200000000182285`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestIndex" -> 8, "TestID" -> "Mult > test04b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000101`2.154836371614637, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009999999999976694, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestIndex" -> 9, "TestID" -> "Mult > test05a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000098`2.1417410735244884, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009800000000126374, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestIndex" -> 10, "TestID" -> "Mult > test06a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.0001`2.150514997831994, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001010000000007949, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestIndex" -> 11, "TestID" -> "Mult > test06b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000147`2.3178323325801697, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00014600000000442037`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestIndex" -> 12, "TestID" -> "Mult > test07a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000202`2.455866367278618, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00019000000000346517`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestIndex" -> 13, "TestID" -> "Mult > test08a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000294`2.618862328244151, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.000309000000001447, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 14 -> TestResultObject[
             Association[
             "TestIndex" -> 14, "TestID" -> "Mult > test08b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000124`2.243936682994229, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001239999999995689, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 15 -> TestResultObject[
             Association[
             "TestIndex" -> 15, "TestID" -> "Mult > test08b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000233`2.5178709188580126, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001870000000003813, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 16 -> TestResultObject[
             Association[
             "TestIndex" -> 16, "TestID" -> "Mult > test08d", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000179`2.403368028811887, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00017899999999926308`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 17 -> TestResultObject[
             Association[
             "TestIndex" -> 17, "TestID" -> "Mult > test09a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000108`2.1839387533189436, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010900000000191312`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 18 -> TestResultObject[
             Association[
             "TestIndex" -> 18, "TestID" -> "Mult > test10a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000163`2.3627026022359514, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001660000000001105, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]]], 
         "TestsSucceededIndices" -> {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
          14, 15, 16, 17, 18}, "TestsFailedIndices" -> {}, 
         "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False->GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{12., {0., 12.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"],
                  ImageSizeCache->{16., {4., 8.}}],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: OpCreate-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["23",
                   "SummaryItem"]}]}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
           GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"]],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: OpCreate-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["23",
                   "SummaryItem"]}]},
                {
                 RowBox[{
                  TagBox["\<\"Succeeded: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["23",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with wrong results: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with messages: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with errors: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
           Typeset`open$$],
           ImageSize->Automatic],
          BaselinePosition->Baseline],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: OpCreate-tests.m", "TimeElapsed" -> 
         Quantity[0.53, "Seconds"], "TestsSucceededCount" -> 23, 
         "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[2 -> TestResultObject[
             Association[
             "TestIndex" -> 2, "TestID" -> "OpCreate > test01a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000109`2.1879414957726175, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010599999999882925`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestIndex" -> 3, "TestID" -> "OpCreate > test01b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000094`2.1236428514316925, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009100000000117348, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestIndex" -> 4, "TestID" -> "OpCreate > test01c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.1047575072713185, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008800000000164232, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestIndex" -> 5, "TestID" -> "OpCreate > test02a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000085`2.079933923546286, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008300000000005525, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestIndex" -> 6, "TestID" -> "OpCreate > test02b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000093`2.118997946385929, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009199999999864872, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestIndex" -> 7, "TestID" -> "OpCreate > test02c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000095`2.1282386031208413, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009599999999920783, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestIndex" -> 8, "TestID" -> "OpCreate > test03a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000115`2.2112128381856055, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011499999999742272`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestIndex" -> 9, "TestID" -> "OpCreate > test03b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000091`2.1095563901530876, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009000000000369823, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestIndex" -> 10, "TestID" -> "OpCreate > test03c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000097`2.1372867320982385, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009699999999668307, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestIndex" -> 11, "TestID" -> "OpCreate > test04a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000084`2.0747942838938753, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008300000000005525, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestIndex" -> 12, "TestID" -> "OpCreate > test04b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000098`2.1417410735244884, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009799999999771103, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestIndex" -> 13, "TestID" -> "OpCreate > test04c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000096`2.132786230871562, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009399999999715192, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 14 -> TestResultObject[
             Association[
             "TestIndex" -> 14, "TestID" -> "OpCreate > test04d", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000093`2.118997946385929, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009199999999864872, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 15 -> TestResultObject[
             Association[
             "TestIndex" -> 15, "TestID" -> "OpCreate > test04e", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000102`2.1591151695939113, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010299999999574538`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 16 -> TestResultObject[
             Association[
             "TestIndex" -> 16, "TestID" -> "OpCreate > test04f", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000112`2.1997330205021752, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011399999999994748`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 17 -> TestResultObject[
             Association[
             "TestIndex" -> 17, "TestID" -> "OpCreate > test04g", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000095`2.1282386031208413, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009199999999864872, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 18 -> TestResultObject[
             Association[
             "TestIndex" -> 18, "TestID" -> "OpCreate > test04h", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000095`2.1282386031208413, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009299999999612396, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 19 -> TestResultObject[
             Association[
             "TestIndex" -> 19, "TestID" -> "OpCreate > test05a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000094`2.1236428514316925, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009299999999612396, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 20 -> TestResultObject[
             Association[
             "TestIndex" -> 20, "TestID" -> "OpCreate > test05b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000097`2.1372867320982385, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009400000000070463, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 21 -> TestResultObject[
             Association[
             "TestIndex" -> 21, "TestID" -> "OpCreate > test05c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000096`2.132786230871562, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009400000000070463, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 22 -> TestResultObject[
             Association[
             "TestIndex" -> 22, "TestID" -> "OpCreate > test05d", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000099`2.1461501924295434, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009800000000126374, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 23 -> TestResultObject[
             Association[
             "TestIndex" -> 23, "TestID" -> "OpCreate > test06a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000097`2.1372867320982385, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009599999999920783, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 24 -> TestResultObject[
             Association[
             "TestIndex" -> 24, "TestID" -> "OpCreate > test06b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000106`2.175820863096764, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010600000000238197`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]]], 
         "TestsSucceededIndices" -> {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
          14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}, 
         "TestsFailedIndices" -> {}, "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False->GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{12., {0., 12.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"],
                  ImageSizeCache->{16., {4., 8.}}],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Osc-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["20",
                   "SummaryItem"]}]}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
           GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"]],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Osc-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["20",
                   "SummaryItem"]}]},
                {
                 RowBox[{
                  TagBox["\<\"Succeeded: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["20",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with wrong results: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with messages: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with errors: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
           Typeset`open$$],
           ImageSize->Automatic],
          BaselinePosition->Baseline],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: Osc-tests.m", "TimeElapsed" -> 
         Quantity[0.55, "Seconds"], "TestsSucceededCount" -> 20, 
         "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[2 -> TestResultObject[
             Association[
             "TestIndex" -> 2, "TestID" -> "Osc > test00a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000097`2.1372867320982385, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009500000000173259, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestIndex" -> 3, "TestID" -> "Osc > test00b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000081`2.0590000167106437, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008000000000407681, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestIndex" -> 4, "TestID" -> "Osc > test00c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000082`2.0643288502157104, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000800000000005241, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestIndex" -> 5, "TestID" -> "Osc > test01a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000083`2.0695930902080675, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000819999999990273, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestIndex" -> 6, "TestID" -> "Osc > test01b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000083`2.0695930902080675, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008100000000155205, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestIndex" -> 7, "TestID" -> "Osc > test01c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000081`2.0590000167106437, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00007900000000304885, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestIndex" -> 8, "TestID" -> "Osc > test01d", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000094`2.1236428514316925, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009200000000220143, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestIndex" -> 9, "TestID" -> "Osc > test02a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000095`2.1282386031208413, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009400000000425734, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestIndex" -> 10, "TestID" -> "Osc > test02b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000091`2.1095563901530876, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000899999999965928, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestIndex" -> 11, "TestID" -> "Osc > test02c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000097`2.1372867320982385, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009700000000023579, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestIndex" -> 12, "TestID" -> "Osc > test02d", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000096`2.132786230871562, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009400000000070463, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestIndex" -> 13, "TestID" -> "Osc > test03a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00012`2.2296962438796184, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011899999999798183`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 14 -> TestResultObject[
             Association[
             "TestIndex" -> 14, "TestID" -> "Osc > test03b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000104`2.1675483371307744, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001049999999978013, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 15 -> TestResultObject[
             Association[
             "TestIndex" -> 15, "TestID" -> "Osc > test04a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000103`2.163352222537166, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001029999999992981, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 16 -> TestResultObject[
             Association[
             "TestIndex" -> 16, "TestID" -> "Osc > test04b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000092`2.114302825177549, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009000000000014552, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 17 -> TestResultObject[
             Association[
             "TestIndex" -> 17, "TestID" -> "Osc > test04c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000112`2.1997330205021752, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011300000000247223`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 18 -> TestResultObject[
             Association[
             "TestIndex" -> 18, "TestID" -> "Osc > test04d", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000111`2.1958379766186513, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011199999999789156`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 19 -> TestResultObject[
             Association[
             "TestIndex" -> 19, "TestID" -> "Osc > test04e", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000101`2.154836371614637, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009999999999976694, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 20 -> TestResultObject[
             Association[
             "TestIndex" -> 20, "TestID" -> "Osc > test04f", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000095`2.1282386031208413, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009400000000070463, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 21 -> TestResultObject[
             Association[
             "TestIndex" -> 21, "TestID" -> "Osc > test05a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000096`2.132786230871562, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009499999999817987, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]]], 
         "TestsSucceededIndices" -> {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
          14, 15, 16, 17, 18, 19, 20, 21}, "TestsFailedIndices" -> {}, 
         "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False->GridBox[{
             {
              PaneBox[
               ButtonBox[
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{12., {0., 12.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"],
                  ImageSizeCache->{16., {4., 8.}}],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Spins-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["14",
                   "SummaryItem"]}]}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
           GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"]],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Spins-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["14",
                   "SummaryItem"]}]},
                {
                 RowBox[{
                  TagBox["\<\"Succeeded: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["14",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with wrong results: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with messages: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with errors: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
           Typeset`open$$],
           ImageSize->Automatic],
          BaselinePosition->Baseline],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: Spins-tests.m", "TimeElapsed" -> 
         Quantity[0.6, "Seconds"], "TestsSucceededCount" -> 14, 
         "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[2 -> TestResultObject[
             Association[
             "TestIndex" -> 2, "TestID" -> "Spins > test00a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000186`2.4200279420499102, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00019100000000094042`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestIndex" -> 3, "TestID" -> "Spins > test00b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000162`2.360030012374625, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015999999999749548`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestIndex" -> 4, "TestID" -> "Spins > test00c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000159`2.351912122152445, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015900000000357295`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestIndex" -> 5, "TestID" -> "Spins > test01a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000169`2.378401702445667, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001699999999971169, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestIndex" -> 6, "TestID" -> "Spins > test01b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000148`2.3207767132269512, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00014599999999731494`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestIndex" -> 7, "TestID" -> "Spins > test01c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000145`2.311883000066969, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001429999999977838, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestIndex" -> 8, "TestID" -> "Spins > test01d", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000171`2.383511108224148, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00017199999999917281`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestIndex" -> 9, "TestID" -> "Spins > test02a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000155`2.340846696002285, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015500000000301384`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestIndex" -> 10, "TestID" -> "Spins > test02b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000148`2.3207767132269512, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001469999999983429, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestIndex" -> 11, "TestID" -> "Spins > test03a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000148`2.3207767132269512, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00014799999999937086`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestIndex" -> 12, "TestID" -> "Spins > test03b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000158`2.3491720847864164, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015900000000002024`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestIndex" -> 13, "TestID" -> "Spins > test03c", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000143`2.3058510352970556, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00013999999999825263`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 14 -> TestResultObject[
             Association[
             "TestIndex" -> 14, "TestID" -> "Spins > test04a", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000102`2.1591151695939113, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010399999999677334`, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]], 15 -> TestResultObject[
             Association[
             "TestIndex" -> 15, "TestID" -> "Spins > test04b", "Outcome" -> 
              "Success", "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000185`2.417686726235008, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001850000000018781, "Seconds"], "MemoryUsed" -> 
              Quantity[56, "Bytes"]]]], 
         "TestsSucceededIndices" -> {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
          14, 15}, "TestsFailedIndices" -> {}, 
         "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.661470722417647*^9, 3.66147918435612*^9, 
  3.661532663394189*^9, 3.6615344318326693`*^9, 3.661534580284011*^9, 
  3.6615359671576033`*^9, 3.6615361924939737`*^9, 3.66153622908307*^9, 
  3.661536471669261*^9, 3.661537159097395*^9, 3.6615377171990423`*^9, 
  3.6615401726024437`*^9, 3.661542377949746*^9, 3.661599483227991*^9}],

Cell[BoxData[
 StyleBox["\<\"Total test run = 103\"\>",
  StripOnInput->False,
  FontSize->18,
  FontWeight->Bold,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.6614707224445267`*^9, 3.661479184380262*^9, 
  3.6615326634108877`*^9, 3.661534431850305*^9, 3.6615345803017178`*^9, 
  3.661535967184895*^9, 3.6615361925157547`*^9, 3.661536229105257*^9, 
  3.661536471686837*^9, 3.661537153581953*^9, 3.661537711888056*^9, 
  3.661540172618968*^9, 3.661542377968463*^9, 3.661599483258068*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Single spin: Taking repeated commutators", "Section",
 CellChangeTimes->{{3.6615992412243643`*^9, 3.6615992640686407`*^9}}],

Cell["Create a  single-spin system to play with.", "Text",
 CellChangeTimes->{{3.661268509659028*^9, 3.6612685346131*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<UniDyn`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "H", ",", "Ix", ",", " ", "Iy", ",", " ", "Iz", ",", "\[CapitalDelta]", ",",
    "\[Omega]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"{", 
    RowBox[{"\[CapitalDelta]", ",", "\[Omega]"}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SpinSingle$CreateOperators", "[", 
   RowBox[{"Ix", ",", " ", "Iy", ",", " ", "Iz"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.661209723717368*^9, 3.661209781037619*^9}, {
  3.661209830458013*^9, 3.661209884242929*^9}, {3.6612099236667957`*^9, 
  3.661209945634691*^9}, {3.6612105356033173`*^9, 3.66121054655971*^9}, {
  3.661210693381155*^9, 3.661210703790155*^9}, {3.661210750490106*^9, 
  3.661210763528246*^9}, {3.661211264597097*^9, 3.6612112665302753`*^9}, {
  3.661211551837948*^9, 3.661211598420218*^9}, {3.661211727699301*^9, 
  3.661211734299876*^9}, {3.6612126056876993`*^9, 3.661212605841806*^9}, {
  3.661213289440082*^9, 3.661213292682469*^9}, {3.661472121218009*^9, 
  3.661472127467431*^9}, {3.6614732226012573`*^9, 3.661473226009387*^9}, {
  3.661599753513829*^9, 3.66159975380103*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SpinSingle$CreateOperators", "::", "create"}], "MessageName"], 
  RowBox[{":", " "}], "\<\"Creating spin operators.\"\>"}]], "Message", "MSG",
 
 CellChangeTimes->{
  3.661470731696002*^9, {3.661473226827879*^9, 3.6614732413574743`*^9}, 
   3.6614733653533897`*^9, 3.661479190802512*^9, {3.661532671097946*^9, 
   3.661532701734028*^9}, 3.661534438258952*^9, 3.661534587024744*^9, 
   3.661535974370524*^9, 3.6615361993293753`*^9, 3.6615362359561853`*^9, 
   3.661536478543803*^9, 3.661537166092059*^9, 3.661537724176804*^9, 
   3.661540179639825*^9, 3.661542387818375*^9, 3.661599483941996*^9, {
   3.661599757967067*^9, 3.661599762625066*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SpinSingle$CreateOperators", "::", "comm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Adding spin commutations relations.\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.661470731696002*^9, {3.661473226827879*^9, 3.6614732413574743`*^9}, 
   3.6614733653533897`*^9, 3.661479190802512*^9, {3.661532671097946*^9, 
   3.661532701734028*^9}, 3.661534438258952*^9, 3.661534587024744*^9, 
   3.661535974370524*^9, 3.6615361993293753`*^9, 3.6615362359561853`*^9, 
   3.661536478543803*^9, 3.661537166092059*^9, 3.661537724176804*^9, 
   3.661540179639825*^9, 3.661542387818375*^9, 3.661599483941996*^9, {
   3.661599757967067*^9, 3.6615997628419847`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SpinSingle$CreateOperators", "::", "nosimplify"}], "MessageName"], 
  RowBox[{":", " "}], "\<\"No angular momentum L defined.\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.661470731696002*^9, {3.661473226827879*^9, 3.6614732413574743`*^9}, 
   3.6614733653533897`*^9, 3.661479190802512*^9, {3.661532671097946*^9, 
   3.661532701734028*^9}, 3.661534438258952*^9, 3.661534587024744*^9, 
   3.661535974370524*^9, 3.6615361993293753`*^9, 3.6615362359561853`*^9, 
   3.661536478543803*^9, 3.661537166092059*^9, 3.661537724176804*^9, 
   3.661540179639825*^9, 3.661542387818375*^9, 3.661599483941996*^9, {
   3.661599757967067*^9, 3.661599763029104*^9}}]
}, Open  ]],

Cell["Define a Hamiltonian", "Text",
 CellChangeTimes->{{3.661599281144273*^9, 3.661599289244596*^9}},
 FontSize->18],

Cell[BoxData[
 RowBox[{
  RowBox[{"H", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", " ", "Iz"}], " ", "+", " ", 
    RowBox[{"\[Omega]", " ", "Ix"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.661599299803336*^9, 3.661599305960333*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell["Repeated commutators", "Subsection",
 CellChangeTimes->{{3.661599685100058*^9, 3.6615996923128147`*^9}}],

Cell[TextData[{
 "Define a function to take ",
 StyleBox["n",
  FontSlant->"Italic"],
 " commutators of an operator ",
 StyleBox["Op",
  FontSlant->"Italic"],
 " with the -i times the Hamiltonian ",
 StyleBox["H",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.6615993113406057`*^9, 3.661599347492508*^9}},
 FontSize->18],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "RepeatedComm", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RepeatedComm", "[", 
    RowBox[{"1", ",", "H_", ",", "Op_"}], "]"}], " ", ":=", "  ", 
   RowBox[{"List", "[", "Op", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RepeatedComm", "[", 
    RowBox[{"n_", ",", "H_", ",", "Op_"}], "]"}], " ", ":=", "  ", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"RepeatedComm", "[", 
      RowBox[{
       RowBox[{"n", "-", "1"}], ",", "H", ",", "Op"}], "]"}], ",", 
     RowBox[{
      RowBox[{"-", "I"}], " ", 
      RowBox[{"Comm", "[", 
       RowBox[{"H", ",", 
        RowBox[{
         RowBox[{"RepeatedComm", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", "H", ",", "Op"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.661212641100292*^9, 3.661212767076599*^9}, {
  3.6612128063190527`*^9, 3.6612128825633593`*^9}, {3.661212919216586*^9, 
  3.661212939855138*^9}, {3.661212982178464*^9, 3.661213025278123*^9}, {
  3.6612130737536497`*^9, 3.661213151209804*^9}, {3.66121319869022*^9, 
  3.6612132063347263`*^9}},
 FontSize->16],

Cell["Example calculation of repeated commutators", "Text",
 CellChangeTimes->{{3.6615993686319523`*^9, 3.66159937714777*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"RepeatedComm", "[", 
      RowBox[{"5", ",", "H", ",", "Iz"}], "]"}], " ", "//", " ", "Expand"}], 
    " ", "//", " ", "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Sigma]", " ", "//", " ", "MatrixForm"}]}], "Input",
 FontSize->16],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Ix"}], " ", "\[CapitalDelta]"}], "+", 
          RowBox[{"Iz", " ", "\[Omega]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}], ")"}]}]},
      {
       RowBox[{"Iy", " ", "\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}], ")"}]}]},
      {
       RowBox[{"\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Ix", " ", "\[CapitalDelta]"}], "-", 
          RowBox[{"Iz", " ", "\[Omega]"}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"-", "Iy"}], " ", "\[Omega]"}]},
      {"Iz"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.66159938411355*^9, 3.6615994846077003`*^9, 
  3.6615997635683327`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evolution", "Subsection",
 CellChangeTimes->{{3.6615996956735153`*^9, 3.661599699524911*^9}}],

Cell[TextData[{
 "Use the Evolver function to calculate the evolution of the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "x"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " operator under the off-resonance Zeeman Hamiltonian."
}], "Text",
 CellChangeTimes->{{3.66147272233392*^9, 3.6614727570869102`*^9}, {
   3.6614727958845654`*^9, 3.661472872662071*^9}, {3.661473131854478*^9, 
   3.661473138759437*^9}, 3.6614733335244417`*^9, {3.6615993982390747`*^9, 
   3.661599469119955*^9}, {3.6615996560801477`*^9, 3.661599657964798*^9}, {
   3.661599702534917*^9, 3.6615997089029007`*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalDelta]", " ", "\[Element]", "Reals"}], ",", 
     RowBox[{"\[CapitalDelta]", " ", ">", " ", "0"}], ",", " ", 
     RowBox[{"\[Omega]", " ", "\[Element]", "Reals"}], ",", " ", 
     RowBox[{"\[Omega]", ">=", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Rho]", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"ExpToTrig", "[", 
       RowBox[{"Evolver", "[", 
        RowBox[{"H", ",", "t", ",", "Ix"}], "]"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"Ix", ",", "Iy", ",", "Iz"}], "}"}], ",", "Simplify"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6614726049703293`*^9, 3.661472606627006*^9}, {
  3.661472660162282*^9, 3.6614727211706247`*^9}, {3.661472858979467*^9, 
  3.66147291870306*^9}, {3.661473067543955*^9, 3.6614731530575647`*^9}, {
  3.661599416817731*^9, 3.661599417596442*^9}, {3.6615995568730087`*^9, 
  3.6615996382419167`*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Ix", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], "+", 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "+", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox["\[CapitalDelta]", "2"], "+", 
    SuperscriptBox["\[Omega]", "2"]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", "Iz", " ", "\[CapitalDelta]", " ", "\[Omega]", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", "t", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[CapitalDelta]", "2"], "+", 
         SuperscriptBox["\[Omega]", "2"]}]]}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox["\[CapitalDelta]", "2"], "+", 
    SuperscriptBox["\[Omega]", "2"]}]], "+", 
  FractionBox[
   RowBox[{"Iy", " ", "\[CapitalDelta]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"t", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[CapitalDelta]", "2"], "+", 
     SuperscriptBox["\[Omega]", "2"]}]]]}]], "Output",
 CellChangeTimes->{
  3.6615995612094717`*^9, {3.661599591285344*^9, 3.661599639387163*^9}, 
   3.661599764230302*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantum optics", "Section",
 CellChangeTimes->{{3.661599727498398*^9, 3.661599733336445*^9}}],

Cell[CellGroupData[{

Cell["Operators", "Subsection",
 CellChangeTimes->{{3.66159987182402*^9, 3.661599876507362*^9}},
 FontSize->24],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<UniDyn`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "H", ",", "Ix", ",", " ", "Iy", ",", " ", "Iz", ",", "\[CapitalDelta]", ",",
    "\[Omega]", ",", " ", "g", ",", " ", "F", ",", " ", "aL", ",", "aR", ",", 
   "Q$sym", ",", " ", "P$sym", ",", " ", "Q", ",", "P", ",", "QP$rules"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"{", 
    RowBox[{
    "\[CapitalDelta]", ",", "\[Omega]", ",", "\[CapitalDelta]\[Omega]", ",", 
     "g", ",", " ", "F", ",", "\[Phi]"}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CreateOperator", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ix", ",", " ", "Iy", ",", " ", "Iz"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"aL", ",", "aR"}], "}"}]}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SpinSingle$CreateOperators", "[", 
   RowBox[{"Ix", ",", " ", "Iy", ",", " ", "Iz", ",", " ", 
    RowBox[{"1", "/", "2"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OscSingle$CreateOperators", "[", 
    RowBox[{"aL", ",", "aR"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q$sym", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"aR", "+", "aL"}], ")"}], "/", 
    RowBox[{"Sqrt", "[", "2", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P$sym", " ", "=", 
   RowBox[{"I", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"aR", "-", "aL"}], ")"}], "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QP$rules", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"aR", " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Q", " ", "+", " ", 
         RowBox[{"I", " ", "P"}]}], ")"}], "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}]}], ",", " ", 
     RowBox[{"aL", " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Q", " ", "-", " ", 
         RowBox[{"I", " ", "P"}]}], ")"}], "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQve5LGb+J+2tHXZOFYiCae8U5GRAtfKxdGUSnhJVq
gGl/E20QneD3uQREq74MLAPROUZrOkD0Z4+fnWB63fl+sPrnBRNBdLa08AUQ
zfIjAExXXPj1GUTnFp39CaLXJHzjNAXS02ac5ALRixi3lYNo4Q+7wLS6qN5Z
EH3y2lQw/e6nmv4WIG309R2YbrC9vANEP/Nx2AmirVgiGj4B6fXTGvpAtJLn
zzUg+k43z3oQva5x414QfWVSyj4QvcH91XkQfWki7yUQnWL//iaIrtVf+BhE
P/I+9ApEK/SJvQfRbFe/fwHRxs7830D0vkUeYp+BdNKt+eIg+pNFqCyIfrGp
DUzPXKO9HkSHzLwEpgHHm78B
  "],
 FontSize->16],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SpinSingle$CreateOperators", "::", "nocreate"}], "MessageName"], 
  RowBox[{":", " "}], "\<\"Spin operators already exist.\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6615997768521233`*^9, 3.661599796428073*^9}, 
   3.661599827919055*^9, 3.6615998611201982`*^9, 3.66160012144375*^9, 
   3.661600246675536*^9, 3.6616002770961447`*^9, {3.661600384545188*^9, 
   3.66160040191814*^9}, {3.661600538596599*^9, 3.6616005417500257`*^9}, 
   3.6616006467360973`*^9, 3.66160068952705*^9, 3.661601005186863*^9, 
   3.661601526245742*^9, 3.6616021797482977`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SpinSingle$CreateOperators", "::", "comm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Adding spin commutations relations.\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6615997768521233`*^9, 3.661599796428073*^9}, 
   3.661599827919055*^9, 3.6615998611201982`*^9, 3.66160012144375*^9, 
   3.661600246675536*^9, 3.6616002770961447`*^9, {3.661600384545188*^9, 
   3.66160040191814*^9}, {3.661600538596599*^9, 3.6616005417500257`*^9}, 
   3.6616006467360973`*^9, 3.66160068952705*^9, 3.661601005186863*^9, 
   3.661601526245742*^9, 3.661602179890189*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SpinSingle$CreateOperators", "::", "simplify"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Angular momentum L = 1/2. Adding operator simplification \
rules.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6615997768521233`*^9, 3.661599796428073*^9}, 
   3.661599827919055*^9, 3.6615998611201982`*^9, 3.66160012144375*^9, 
   3.661600246675536*^9, 3.6616002770961447`*^9, {3.661600384545188*^9, 
   3.66160040191814*^9}, {3.661600538596599*^9, 3.6616005417500257`*^9}, 
   3.6616006467360973`*^9, 3.66160068952705*^9, 3.661601005186863*^9, 
   3.661601526245742*^9, 3.66160218001443*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OscSingle$CreateOperators", "::", "nocreate"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Oscillator operators already exist.\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6615997768521233`*^9, 3.661599796428073*^9}, 
   3.661599827919055*^9, 3.6615998611201982`*^9, 3.66160012144375*^9, 
   3.661600246675536*^9, 3.6616002770961447`*^9, {3.661600384545188*^9, 
   3.66160040191814*^9}, {3.661600538596599*^9, 3.6616005417500257`*^9}, 
   3.6616006467360973`*^9, 3.66160068952705*^9, 3.661601005186863*^9, 
   3.661601526245742*^9, 3.661602180140465*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OscSingle$CreateOperators", "::", "comm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Adding oscillator commutations relations.\"\>"}]], \
"Message", "MSG",
 CellChangeTimes->{{3.6615997768521233`*^9, 3.661599796428073*^9}, 
   3.661599827919055*^9, 3.6615998611201982`*^9, 3.66160012144375*^9, 
   3.661600246675536*^9, 3.6616002770961447`*^9, {3.661600384545188*^9, 
   3.66160040191814*^9}, {3.661600538596599*^9, 3.6616005417500257`*^9}, 
   3.6616006467360973`*^9, 3.66160068952705*^9, 3.661601005186863*^9, 
   3.661601526245742*^9, 3.661602180269004*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hamiltonians", "Subsection",
 CellChangeTimes->{{3.6615998667071342`*^9, 3.661599884226001*^9}, 
   3.661601417076589*^9},
 FontSize->24],

Cell[CellGroupData[{

Cell["Free evolution", "Subsubsection",
 CellChangeTimes->{{3.6616014374360332`*^9, 3.661601442085188*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"\[Omega]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[Omega]", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$0", " ", "=", " ", 
   RowBox[{
    FractionBox["\[Omega]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"aR", "**", "aL"}], " ", "+", " ", 
      RowBox[{"aL", "**", "aR"}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599989586681*^9}, {
  3.661600801286552*^9, 3.661600807763794*^9}, {3.6616014623905563`*^9, 
  3.6616014681434603`*^9}, {3.661602151408037*^9, 3.661602151876782*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Evolver", "[", 
    RowBox[{"H$0", ",", "t", ",", "Q$sym"}], "]"}], "  ", "/.", " ", 
   "QP$rules"}], "]"}]], "Input",
 CellChangeTimes->{{3.6615999979301577`*^9, 3.661600052902892*^9}, {
  3.661600252980455*^9, 3.6616003005713778`*^9}, {3.661600331228952*^9, 
  3.6616003753055487`*^9}, {3.661600425748569*^9, 3.6616004460721083`*^9}, {
  3.661600561499104*^9, 3.661600577381302*^9}, {3.661600638480967*^9, 
  3.661600666015003*^9}, {3.661600701280002*^9, 3.6616007310693493`*^9}, {
  3.661601465126539*^9, 3.66160147977136*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  RowBox[{"Q", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"t", " ", "\[Omega]"}], "]"}]}], "+", 
  RowBox[{"P", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"t", " ", "\[Omega]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.661600376064962*^9, {3.661600426843581*^9, 3.66160044692731*^9}, {
   3.661600567841215*^9, 3.66160057816276*^9}, {3.661600643374647*^9, 
   3.6616006677359037`*^9}, {3.661600698704836*^9, 3.661600731836134*^9}, 
   3.6616015274701843`*^9, 3.661602183557083*^9, 3.661602503908524*^9},
 FontSize->16]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Phase Kick", "Subsubsection",
 CellChangeTimes->{{3.6616014374360332`*^9, 3.661601442085188*^9}, {
  3.661602158368636*^9, 3.6616021598723507`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"\[Omega]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[Omega]", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$0$kick", " ", "=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"(", 
      RowBox[{"\[Omega]", "+", "\[CapitalDelta]\[Omega]"}], ")"}], "2"], " ", 
    
    RowBox[{"(", 
     RowBox[{
      RowBox[{"aR", "**", "aL"}], " ", "+", " ", 
      RowBox[{"aL", "**", "aR"}]}], ")"}]}]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599989586681*^9}, {
  3.661600801286552*^9, 3.661600807763794*^9}, {3.6616014623905563`*^9, 
  3.6616014681434603`*^9}, {3.661602151408037*^9, 3.661602214021371*^9}, {
  3.661602491512672*^9, 3.661602492367771*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Evolver", "[", 
      RowBox[{"H$0$kick", ",", "t", ",", "Q$sym"}], "]"}], "  ", "/.", " ", 
     "QP$rules"}], "]"}], " ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{"\[CapitalDelta]\[Omega]", "\[Rule]", " ", 
     RowBox[{"\[CapitalDelta]\[Phi]", "/", "t"}]}], "}"}]}], " ", "//", " ", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.6615999979301577`*^9, 3.661600052902892*^9}, {
  3.661600252980455*^9, 3.6616003005713778`*^9}, {3.661600331228952*^9, 
  3.6616003753055487`*^9}, {3.661600425748569*^9, 3.6616004460721083`*^9}, {
  3.661600561499104*^9, 3.661600577381302*^9}, {3.661600638480967*^9, 
  3.661600666015003*^9}, {3.661600701280002*^9, 3.6616007310693493`*^9}, {
  3.661601465126539*^9, 3.66160147977136*^9}, {3.6616022234776773`*^9, 
  3.661602260916905*^9}, {3.661602496981515*^9, 3.661602497788101*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  RowBox[{"Q", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[CapitalDelta]\[Phi]", "+", 
     RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], "+", 
  RowBox[{"P", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[CapitalDelta]\[Phi]", "+", 
     RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.661600376064962*^9, {3.661600426843581*^9, 3.66160044692731*^9}, {
   3.661600567841215*^9, 3.66160057816276*^9}, {3.661600643374647*^9, 
   3.6616006677359037`*^9}, {3.661600698704836*^9, 3.661600731836134*^9}, 
   3.6616015274701843`*^9, 3.6616021840186167`*^9, 3.6616022191381903`*^9, {
   3.6616022558467607`*^9, 3.661602262348469*^9}, {3.661602499638403*^9, 
   3.6616025048683853`*^9}},
 FontSize->16]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Force ", "Subsubsection",
 CellChangeTimes->{{3.661601509513736*^9, 3.661601517167842*^9}, {
  3.661601685086095*^9, 3.6616016856139593`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"F", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"F", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$1", " ", "=", " ", 
   RowBox[{"F", " ", "aL"}]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599989586681*^9}, {
  3.661600801286552*^9, 3.661600807763794*^9}, {3.661600966070225*^9, 
  3.661601010459141*^9}, {3.661601621266842*^9, 3.661601648932316*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Evolver", "[", 
    RowBox[{"H$1", ",", "t", ",", "aR"}], "]"}], "  ", "/.", " ", 
   "QP$rules"}], "]"}]], "Input",
 CellChangeTimes->{{3.6615999979301577`*^9, 3.661600052902892*^9}, {
  3.661600252980455*^9, 3.6616003005713778`*^9}, {3.661600331228952*^9, 
  3.6616003753055487`*^9}, {3.661600425748569*^9, 3.6616004460721083`*^9}, {
  3.661600561499104*^9, 3.661600577381302*^9}, {3.661600638480967*^9, 
  3.661600666015003*^9}, {3.661600701280002*^9, 3.6616007310693493`*^9}, {
  3.661601025010738*^9, 3.6616010520976973`*^9}, {3.66160156137223*^9, 
  3.661601567965077*^9}, {3.66160169077514*^9, 3.661601690909215*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"\[ImaginaryI]", " ", "P"}], "+", "Q"}], 
   SqrtBox["2"]], "-", 
  RowBox[{"\[ImaginaryI]", " ", "F", " ", "t"}]}]], "Output",
 CellChangeTimes->{
  3.661600376064962*^9, {3.661600426843581*^9, 3.66160044692731*^9}, {
   3.661600567841215*^9, 3.66160057816276*^9}, {3.661600643374647*^9, 
   3.6616006677359037`*^9}, {3.661600698704836*^9, 3.661600731836134*^9}, {
   3.6616010484626513`*^9, 3.6616010618633747`*^9}, 3.6616015385193167`*^9, 
   3.6616015689219103`*^9, {3.6616016294550962`*^9, 3.661601652197709*^9}, 
   3.661601691539207*^9, 3.6616021841194553`*^9, 3.661602350590143*^9, 
   3.661602505026248*^9},
 FontSize->16]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Squeezing", "Subsubsection",
 CellChangeTimes->{{3.661601484143311*^9, 3.661601489493829*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"\[CapitalDelta]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[CapitalDelta]", " ", ">", " ", "0"}], ",", " ", 
     RowBox[{"Element", "[", 
      RowBox[{"\[Omega]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[Omega]", " ", ">", " ", "0"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599983983083*^9}, {
  3.66160078782301*^9, 3.661600795025132*^9}, {3.661600826867373*^9, 
  3.6616008381735077`*^9}, {3.661603544609684*^9, 3.6616035787360067`*^9}, {
  3.6616036156599503`*^9, 3.661603619612896*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Evolver", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[CapitalDelta]", "2"]}], " ", "I", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"aR", "**", "aR"}], " ", "-", " ", 
          RowBox[{"aL", "**", "aL"}]}], ")"}]}], ",", "t", ",", "#"}], "]"}], 
     "  ", "/.", " ", "QP$rules"}], "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"Q$sym", ",", " ", "P$sym"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6616038851683683`*^9, 3.661603946848551*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"t", " ", "\[CapitalDelta]"}]], " ", "Q"}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "t"}], " ", "\[CapitalDelta]"}]]}], " ", "P"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.661603896686514*^9, 3.6616039476747227`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Evolver", "[", 
      RowBox[{
       RowBox[{
        FractionBox["\[CapitalDelta]", "2"], " ", "I", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"aR", "**", "aR"}], " ", "-", " ", 
          RowBox[{"aL", "**", "aL"}]}], ")"}]}], ",", "t", ",", "#"}], "]"}], 
     "  ", "/.", " ", "QP$rules"}], "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"Q$sym", ",", " ", "P$sym"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6616007406826563`*^9, 3.6616007508623447`*^9}, {
  3.6616008463686867`*^9, 3.661600863540935*^9}, {3.661602942624221*^9, 
  3.661602943210248*^9}, {3.661603589595882*^9, 3.661603793454712*^9}, {
  3.661603959052683*^9, 3.66160396075235*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "t"}], " ", "\[CapitalDelta]"}]], " ", "Q"}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", "\[CapitalDelta]"}]]}], " ", "P"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.66160369963689*^9, 3.661603794264834*^9}, 
   3.661603962100545*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{"ExpToTrig", "[", 
      RowBox[{
       RowBox[{"Evolver", "[", 
        RowBox[{
         RowBox[{
          FractionBox["\[CapitalDelta]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"aR", "**", "aR"}], " ", "+", " ", 
            RowBox[{"aL", "**", "aL"}]}], ")"}]}], ",", "t", ",", "#"}], 
        "]"}], "  ", "/.", " ", "QP$rules"}], "]"}], "]"}], "]"}], "&"}], " ",
   "/@", " ", 
  RowBox[{"{", 
   RowBox[{"Q$sym", ",", " ", "P$sym"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6616038251199303`*^9, 3.661603864590372*^9}, {
  3.661603970006435*^9, 3.661603993355975*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Q", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}], "-", 
    RowBox[{"P", " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "P"}], " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}], "+", 
    RowBox[{"Q", " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.661603833222344*^9, 3.661603865179731*^9}, 
   3.661603994345737*^9}]
}, Open  ]],

Cell["\<\
Let's remind ourselves what the hyperbolic functions look like\
\>", "Text",
 CellChangeTimes->{{3.661603457102549*^9, 3.661603493792601*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cosh", "[", "T", "]"}], ",", 
     RowBox[{"Sinh", "[", "T", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.661603424774187*^9, 3.661603455277131*^9}},
 FontSize->16],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJw12Hc4Vv//B3CbJEk2CdlJSkTRq2GVUEYR2ZRKRiGbklEySrJHKHtlZb2F
3BKVve+U6mOU+9g3Kd931/X7/XVfj+s+5zrjOuf5fL2PqK2LoQMdDQ0NJy0N
zb9feeCZ2dykoD95axoepVQwviYVvrZOQQ1D/WXBRVTweaoiubhMQWoHvWuj
8qlAmr1k+2OWgrwWOtLys6lgnZA+0jlIQQVmj8umE6gQOy/9PrGEgvS++VBC
gqmwlHW0UNGKgkYjO3X3G1GhlsXm5pXGOSRgXfXQgLoKgV0Ds29sfiG73gdZ
ZkdXYTqHn/ew0E+U1fZbKCduBWQ/62zZPj6DvnIY8OxcX4bsnVlLw3enUXio
+dNtFsvQYt7xCMEUks8Zm7bvXgKhdCGRhC8/0Knybda+Gkuge8rcuzfiOzr0
0Vv+cssi7P7tGCRz+hsq/Ny/uGy4CPuKU4Pcf31FwzTZAllfFmDidqb8QO4X
5G9TrF0ZuABOKbFZKdcm0K5zrZM/JRfANMBsT6EYGSUsZMmHfpgH6VkZc+O0
UWQ3l+pnem8eruufu/91cgg1m91WLlGdh0u3DNSVlQdQQVB5j+waAU/Q1DlU
1YvyDl+gGWshAOiGLsjTdqMLnHPGN2MJ+CFlOcWx+gl1l1UGN8UQEKX3zXvx
5ydktXSNbyc2OYFIqRn6hPp2PLr3OoqAgP1bJk+WfkK/tx4+tzWSgHqLIy4X
rT4h+kQH1BxKwO2bqttpfT+i9tS+wSA/Aq4NNbvmLHaifOoYu6oTAc69Ni2v
xzsRi56uTuJVAlw/0PB8IHWi+59mN9auEODVeqxuJbkT3a0pHax3JCCktJZR
R6MThYq0G+rYE5AWXp40E/cesb2TMfe0IqBX5XnrfuUO1JRm9lT+AgEDiid4
NUQ6kEOEllyaCQEj8hNOpqwdaFRkUJ0de0JceHsw+R3S8er5RDEiYI4jyawn
9B1qcq+vrDlPAMt07NztwXZkttToZaNHgFpiMF/tHRLiVtBsYtckQO9S9LND
diT07MztjWgNAiwFU3lK9Eiosd2yeAd2YGoNV7YYCa3kX7zFc4qA5kwKR1Rn
G3IgewRLnCBAO//yFluRNtSYY1Jgpk6AYZ3q+pb2VuRhTt4loEyAnZ+2d0h5
K2rW+8iar4Tvp7oJ9W9KKyJ1b3c+gv0Uua4surUi2UX3WItDBAy1vFwYF2xF
rpzXzF4cJOByJ/dsmUsLWjC/Nmmwn4Cr4/OjZrzNKKajv2NdmoBXLmOMWvTN
qISz/Us69l9a0v6DlDdIaD3IUhM7TjLlHivpDfrdpB4RK0VAk4vW3jrPN2jA
LSdLXpIAPrpkH6GBJvSsWHvGdw8BMXrhBxtlEKq12ldqK0yApPvl0HhahBj9
e325sOvjD47cHG5Ejh//FLbtImDq81jw7ohGlOA8CHLYx90PdAdNNaA/j52k
NgQJIOJHXE69rEejnU4bxfwEGEzIFbWL16Ifl6zKrLkJOGsvZQ1rrxHp5pZ8
fuwzU6I7q7peoz7jNv5eLgI0CB7vLM/XiMvN1VIbW4WGVjOgvQbFpun5Ke0k
QEykf0zxRjWSqL/NIr2DgN3ZH6Pzj1ejwThLtykOAoSkO06KclejDCW183nY
vAool72xCtncf+8hh812PO/29PYq9JaXxVBlOwHLVv5s6a8q0Kqou4njNgIW
Jr0Qd3gFavjZKiePTVxxd4+0qEDHflB8VtgImHG5MuTNWIFcV0m+4djkwPPZ
xhdfIYbzxtvLtxLQni6hxvq7DNUKhPkJshKgjJIHZ0KKkZ6CkYM2MwECbAzT
aYrFSFSt4YMI9h/TG+uGX4vQ/GBi+joTAa0LarvqoAiZTL3wKsE2kiTbPlwv
QJ8FV2iEsV0ficztdc1DIiNpXuyMBBiPhG9+Fs5D3FytF+cYCDgsNc8R15WL
Gkv00j9g/216o7ghm4uGRx/Yx2BHLtl6d35/gShaz0h82HnmOQzO5tkofdGQ
okaP/8/dxiPKmo1iGew192C7LntI9ddkoRPfuuhYsVWitc6o82Qh49C8V0N0
BLQ1/xe9rTsTeYi7/PLBzt9+LvNNYCbSvaoUYI/9yKKm3EM+E0UWGHjqYxuv
hPePP8xA4uv+KXv+7W9krGzxKA3d+FDe1EOLt/8lbtY6k4r4OFkjEbZx2LKv
nE4qipcrayzEnqyNf7NBl4KU6X+ZhWPTiA2fTb2TiI48Zb+qgU2qy3NhHEhA
V0YHnQ9hR5n4PHZWTEABnr9GxLGFIgSH1Ofi0argxgwTtipx2Y5sF4cy3qV8
/UhDwI3a7Gmv1ieIfnLQpgU7LWTWZYfEE9QnZ6pRjU3P7+2n8SMWhUlJKWZg
K08iOrJWLDI87QFPsa8WMUV4vYxBFv7MJQ+wE+9J7zXpjkLufKvVnth/easO
hz9+hHLojc87Y9sWntKoM4pE9luW9Oyx5fotL4sORKDTYRuuRtixTj+djJ+F
o/54+2e62Ct/vD3DTMNQFYVdVAO7SfJp9K+REPS6TcZSGVuiTixFJOUe8qck
7lDAfmBQmmt0+S4aq9KVlsWmTKpXhgoHIznqsefi2C+J+Hu3UCCSir0VuBvb
lb88ZfiEP1qwmUYC2EdOdlVCqw/i18uw48FmuD71IUfrDoo+nHCNE/vDE/qp
re88UClLdx87dkK9MK277i10LP/M863/ru+7qsBQlyuyY2HsZcG+KJTv6Jdx
A5XvoLnChD3jPJGgk3MFSVQftWTADkA877nybZHwz+oaOmwxsaT1N5fNkf2L
25602KffMlldunIe7SW7PaP5d/2ZXdvet6ijLVElgv+sk7XZ9GKvOGyW76P/
55Dnjv/VrOqA59mfev8sWKy1XcP9AqhbzP7+Zx9G536TQ9bw8Ifstn/H+/FK
OStivwPQLOQH02Mb2dK4Ncheg8yw62aM/47H0XFsXsIFyOU34pix4z+fDn3M
4Q6PgosPsmJ3Vsk7y0Xdhhn6A4e2YdNF7TRu2+oFqWeXEjiwVRyoR6wjvKHM
lWrNhe2iNi66zuQHKWHqkXzYL3Y2s8SFBMCRghaBXdg3PXpXeYKD4NPqAzYx
7OyzNeTSv3dhLXycfx821Mj2+KuHgBCnk5Ii9sie1Ldn/O6DkZ5yhSo2x+/g
wm9rYRDvHz+qjV3guJRephIBzh0yIQbYWj2OTwK8HsDinc3oi9j+ebo+fMuR
wP/WvfsqNh93o/N3xSho7eJgdseuCFKwKXePhoPsC+m+2MsFrOKS1Bj4Jhn4
Oxp77z0Ka5PHE+Dp6TBrwLY4upOlSCwOtGciXndgRy4qMyZ9jAN9AeGoIew5
u4DNWzLxwGdGerqMXa6xbUlqPAFy5WV2K/173zcU5rkeJILB+xQJLWyuSuM5
2sNJMMYwnXER20MiZWo0Jhn8zm1b8cVWYdo7Hq2RBkY74gQ6sJ0a9Uf85tNA
T3OURMZO8nQfdEpLh0DXzelF7IDFsSlRvwyg4/8SuRvn0Wc78cnf/ZkQYS+o
54f9XOPVYElENug6MNTo4vyrFdG8IDmRDc/yrr26gt27MdCXopwD+fyv94Rg
M1Sud0dM5sBC4w67RmwHiZOdduovwSvnnYUKzltppu4m3vk8CGIXVD+J8/v4
V1uI0s6HT4U3whywzRqXGhjS8mGZplIrAvuBJ1/d/JkC+PNln3gP9s8fVpXv
swsh8Nv4JSfcByWkubxA0xLIfydXU4T7hGy5zX9/Xgn8PnrAsx+bfWXvuc9r
JZBOEUn6g638+JBvul4pKAu07TRgwfNCk5vo5lwpvGfU+LCCfX7XT+fGA+WQ
8GHd2gz319RV34s8l8pBJkghIAw7qIL1xM275SAUb0tbhV2qK8Ml3FsOMTFN
qly4/9h9HGv9b78Cg+oQ937sjoEJJvXqCjg6rM54HfeprZgrEfe5AkLX3t1N
x15z3hz+yVwJRTKOjn3Y0ozCRSmmlbDrT68VsBMQpmhutLFWCW6D+YICuK81
YvrT69SqoefrnZqvuM8bTneoHGl+DRYt1TFNeF6YUzrUsvjrNXh+/2LAjOcL
YbE0vSL+WtholgzTxw5Yd7MVcasFJfotlmTs4wX8kUwidcCSea2Inhf3L5vT
5x7/eijnDe2zx/NLx0fm0OuqCJyVloyC8Ty0XufGIeGAgFamSWAQWzZ3NIkc
gyBCmDDbt5uAh0ElJeenEDjsCT0xiv0ioeBnsm4TJHzrrlQTxf1w2ojn7noT
dOjLK/GIEzCb/9xJ37QZVDInM/fI4nwfuUr31rkZkkQXMkOxabbuTz56rxle
1l/mmcHmuV7XKV3cDCEeFy3K9xJwcm/ffnqGFvjNJn5ZZx/O3wLGleqSFphx
yDn0QAHfr8Krd0WZ30KZ3o5zDocJSC2ST16qJAHHkafT3lo4X9j4ItbekYDX
5YnHPPax67Ref8dJoK8UeMVJGz9P0n2GLEztoHhor/8lHQJEsr1ZhS60QwuS
cj1xBudRUqv3qZV2mLU47yWmT0Bh2CXTx8od4KMytvsAnufrbUK5Fao74TCl
9FEwXh8Mc4z3fu/sBC6VHUvCeP2wghQfJ3/tBO5Rjd56bAXhL+zM7F0QcFll
Yw2vN7JGjrKQ7bsg1/QT1fsGfh+M5tcfcn6A/6o/ZsS4EWCqaTHxn/NH4LXZ
3cWH1ys+XIn9Bpzd8JbMXvD0Mc7jT30aPUm9UNpw3LD4DQFu7w9LRvMMQIAR
Z5bVCj7/jxrcju1DUGt+/cyi8jxEFlbnMp8dhUkOz+ZjPvNA+6TvdAsjGTpv
3TpG834eePMKSNk6E8C9M+PG+K4FGHgZtIcx/AucIHO7qHougHmBbKj716/w
Tc518wB5AdSSmY++lfgGqUb7axi1F2Ey+vWKeMh3KDjeoqD/ZhEq9gTOio79
AC2Jv9wWJ5dgIsvrIMOuKeBX2QzeaF6CHmnNoMU705AgyDdRdHEZdidpirQ3
zMATaRi0m12G+HyzNdWNWejxKn3bHLICvejkcI3JL2BYnfRjVFqF628st+5K
mAPN+F8mjJOrYJs+HF+fOge7gyfj9/xYhUv+xmIWWXOgqtkWd3J6FXRUz6gm
F89B8vZK0l3KKoiXKV3hfzsH5vOzbGwbqzCWwdbCvTAH+9Ruy57kpsLZoFof
9rMUeJTSZa2uQ4VTlkpMxecpQGpMdbmlS4UjaqWxehcpIJ/qeyxfnwrS1Jzc
SFsKyCq3CQmYUIHBNXaA1ZsC72qtyHS2VGiwunqQ+QUFjmb+fUj1pUKF+mTD
iwIKLHpnvDwSSIVCQcvTWmUUcLGaDvG/S4WkQSPr+/UUSPYYDGGMoIKnAUTR
91Lgpgg1RTieCs77avmzhijAGZbT7phIBfutSjknyRRgnWivKkmhgiFJtj54
mgL1esMjp7KocDonR1uUQoFRu3WO6BdUOH5PpLdpiQJCLmtbRvOocNgm2dJ6
nQJqgcRbqSIq/N/3EPj/7yH/AxbpnJU=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwtlH040wkcwOnFurjr6pLzxF3zdhIeRxTVfUO5rdS6UVdIjUJyp9Or9abz
EpfOLelpJLGQt7nKcduNrya3ylSa1uZl5jWM/exHktSue57++Dyfvz//fKhh
scz9swwMDLZ84H87w5JhvZ5A7aWIu3nNJAZGf5P6ZprA/LSGWHxIIjtrtd34
KwJ/mxQUdDWSKNEEhQ1oCDQIXxhDrSNx79W8NukLAuex69JK+SRydPZN3EoC
vZuE7c8ySJzgrSl320PgjUOWLieZJArnsX6OrNNihqtBgK1Sh2eb5Zp7rFHk
isQ0E8UYDhWam62yGMGnThcWmKsIdOiifbKgcxj1IWNj9VQt3vyCN6H8dQi3
Zl8qee0/gg3Bjy4iDCJzS6ePPW8YLfIsll3tHsD8Gdve4u5B3OwbHC9L60fu
ROBYhdtL/PptRMJyeh/2xS1WG5f3oxM/NyFutAdfRz1/O2nSh+oj+c7yW92Y
byI4KuP04IFrHN61aDXGahi799t2484zu6zLrVSor64yGvXpQnvN8uDA6+1o
/y9jSnayAw9u3Zbc06vATe7sP4TJSgw6zFjn4SHH4vVKv09L5JiJg9uwWoZx
2yMdCaNWhFmKHc6GLThOybh7eWULRivEhwrHpdjk3Olo6NaMa7nnvhSekOBU
9SKno9kSjOrUte8yE6PLAYrHQzsxMtSOFQ9shJgyZ2p/jIsQPTDnxXASH+28
ptgX0vjoObY7XBV+GcVvZ9/x2HcZVyQS8+uPZsKbHXWPTY5lQqVEW3J2ZyWY
Ji90SdxdCbX0R6u9xAKwjIv8NqRZAJrSggNbd4rhq9UsdkSUGHIrnHMm/pLA
dxbupUKFBESsFFOXGilEK/YdN3wlBfZi7nPGohawlr5LZvq1gPRp64Zn2TIo
XhDvzB+SwS9Nq+wylsihjf3Y6NR5Odx8ssE04oECYjMbs22jlJBeXnOL4t8O
NEpdgJzaAYaZrfSGuSrwrcoqarDqArOSMslNmhrSj5gm9b9Xg7w4wXpuajek
OawxGznYA8FlDilxPT1APey98J2+F9bmUNY02vaBdystKehcP/RmCCZtkvph
enPHnRLHl1BlfVZD7RiAmYYCy9q2QVDzjrvOsRwEY0sjZ8qxYXhmvzFh/MQQ
xAYqsu7BCHydvXHZg9phOLPyYrhychSulO564zmjgZj6zn9m3yZAhj7Kv7eP
Qgi3Ln/bkzE4eC/U2PKqFnrLWKcSRToIy1NeEeVqIbP6eEB1vQ6CTgdahfC0
MBndVz10Xwc0z02eOXwt5Jb4WTObdWBz2z3SvFELVntaspardNBxw6TBlNSC
67SNntTrwD9ByP7MnwAMfC4d8yXBN9TdiP8DASvMY2LdaSR4rf2Ts+VHAphF
qQVsfxLspwpvpYcR8NquTWi0nYQ5hzjy+fEEKD7n1NhGkFC7J8qVUkTA+Rri
/ZlUEqrW9dYWlREQLESBNJ2E8qWhdL8Pnao6N8pSDgnZLwL2JosIeDWVESTg
knCMAb/PlhFQES4bmCkl4ScnoTlPQUBqymkvRiUJ+4zdC31UBLjFd1AL7pLA
lDiIzg0RkHLBu5wuIoFeWPg9lSCAZZrOuF5PwvrEZbL6CQLifBefH79PwipW
TujeaQJ8dsww6Q9J+Pgv+Pgv+A9ASqRz
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-1.1752011306609194`, 1.5430805868478494`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.661603443468926*^9, 3.661603449072255*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"ExpToTrig", "[", 
       RowBox[{
        RowBox[{"Evolver", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox["\[Omega]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"aR", "**", "aL"}], " ", "+", " ", 
              RowBox[{"aL", "**", "aR"}]}], ")"}]}], "-", 
           RowBox[{
            FractionBox["\[CapitalDelta]", "2"], " ", "I", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"aR", "**", "aR"}], " ", "-", " ", 
              RowBox[{"aL", "**", "aL"}]}], ")"}]}]}], ",", "t", ",", "#"}], 
         "]"}], "  ", "/.", " ", "QP$rules"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Q", ",", "P"}], "}"}]}], "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"Q$sym", ",", " ", "P$sym"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6616007406826563`*^9, 3.6616007508623447`*^9}, {
   3.6616008463686867`*^9, 3.661600913052218*^9}, {3.661602359732606*^9, 
   3.661602475878283*^9}, {3.661602521111289*^9, 3.661602558018815*^9}, {
   3.661602619035358*^9, 3.661602633379653*^9}, 3.661602980534584*^9, {
   3.661604027321581*^9, 3.661604067830595*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"P", " ", "\[Omega]", " ", 
      RowBox[{"Sinh", "[", 
       RowBox[{"t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "-", 
          SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "-", 
       SuperscriptBox["\[Omega]", "2"]}]]], "+", 
    FractionBox[
     RowBox[{"Q", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "-", 
           SuperscriptBox["\[Omega]", "2"]}]], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[CapitalDelta]", "2"], "-", 
             SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], "+", 
        RowBox[{"\[CapitalDelta]", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[CapitalDelta]", "2"], "-", 
             SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}]}], ")"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "-", 
       SuperscriptBox["\[Omega]", "2"]}]]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"Q", " ", "\[Omega]", " ", 
      RowBox[{"Sinh", "[", 
       RowBox[{"t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "-", 
          SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "-", 
       SuperscriptBox["\[Omega]", "2"]}]]], "+", 
    FractionBox[
     RowBox[{"P", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[CapitalDelta]", "2"], "-", 
            SuperscriptBox["\[Omega]", "2"]}]]}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[CapitalDelta]", "2"], "-", 
             SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], "+", 
        RowBox[{"\[CapitalDelta]", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[CapitalDelta]", "2"], "-", 
             SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}]}], ")"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "-", 
       SuperscriptBox["\[Omega]", "2"]}]]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.661602380236158*^9, 3.661602447324978*^9}, {
   3.661602477997684*^9, 3.661602559382513*^9}, 3.661602634276566*^9, {
   3.6616029734159317`*^9, 3.661602981462379*^9}, 3.6616040071201143`*^9, {
   3.6616040554574623`*^9, 3.661604070622085*^9}},
 FontSize->16]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Failing cases", "Section",
 CellChangeTimes->{{3.661604273535866*^9, 3.6616042801731567`*^9}}],

Cell[CellGroupData[{

Cell["Force with a phase factor ", "Subsubsection",
 CellChangeTimes->{{3.661601509513736*^9, 3.661601517167842*^9}, {
  3.661601685086095*^9, 3.6616016856139593`*^9}, {3.661604369472599*^9, 
  3.661604373430613*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"F", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"F", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$1", " ", "=", " ", 
   RowBox[{"F", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "i"}], " ", "\[Phi]"}], "]"}], " ", "aL"}], " ", "+", 
      " ", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"i", " ", "\[Phi]"}], "]"}], " ", "aL"}]}], " ", ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599989586681*^9}, {
  3.661600801286552*^9, 3.661600807763794*^9}, {3.661600966070225*^9, 
  3.661601010459141*^9}, {3.661601621266842*^9, 3.661601648932316*^9}, {
  3.6616043049887943`*^9, 3.66160435768355*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evolver", "[", 
   RowBox[{"H$1", ",", "t", ",", "aR"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.6615999979301577`*^9, 3.661600052902892*^9}, {
  3.661600252980455*^9, 3.6616003005713778`*^9}, {3.661600331228952*^9, 
  3.6616003753055487`*^9}, {3.661600425748569*^9, 3.6616004460721083`*^9}, {
  3.661600561499104*^9, 3.661600577381302*^9}, {3.661600638480967*^9, 
  3.661600666015003*^9}, {3.661600701280002*^9, 3.6616007310693493`*^9}, {
  3.661601025010738*^9, 3.6616010520976973`*^9}, {3.66160156137223*^9, 
  3.661601567965077*^9}, {3.66160169077514*^9, 3.661601690909215*^9}, {
  3.661604378984228*^9, 3.661604387210058*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Evolver", "::", "unsolvable"}], "MessageName"], 
  RowBox[{":", " "}], "\<\"Unrecognized evolution\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.661604317396896*^9, {3.661604372092123*^9, 3.661604389733602*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"aR", ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "F", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["F", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
     ")"}]}], ",", 
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["F", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
         "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
         "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
         "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
         "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
       "]"}]}], ")"}]}], ",", 
   RowBox[{
    SuperscriptBox["F", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}],
            "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}],
            "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}],
            "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}],
            "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}],
            "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}],
            "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}],
            "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}],
            "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.661600376064962*^9, {3.661600426843581*^9, 3.66160044692731*^9}, {
   3.661600567841215*^9, 3.66160057816276*^9}, {3.661600643374647*^9, 
   3.6616006677359037`*^9}, {3.661600698704836*^9, 3.661600731836134*^9}, {
   3.6616010484626513`*^9, 3.6616010618633747`*^9}, 3.6616015385193167`*^9, 
   3.6616015689219103`*^9, {3.6616016294550962`*^9, 3.661601652197709*^9}, 
   3.661601691539207*^9, 3.6616021841194553`*^9, 3.661602350590143*^9, 
   3.661602505026248*^9, 3.661604317425989*^9, {3.6616043721031218`*^9, 
   3.66160438973948*^9}},
 FontSize->16]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1075, 706},
WindowMargins->{{32, Automatic}, {Automatic, 29}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 212, 3, 92, "Title"],
Cell[795, 27, 156, 6, 83, "Text"],
Cell[954, 35, 363, 10, 35, "Text"],
Cell[CellGroupData[{
Cell[1342, 49, 111, 1, 64, "Section"],
Cell[1456, 52, 315, 9, 77, "Text"],
Cell[1774, 63, 608, 13, 33, "Input"],
Cell[2385, 78, 152, 2, 33, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2574, 85, 100, 1, 64, "Section"],
Cell[2677, 88, 686, 15, 83, "Text"],
Cell[CellGroupData[{
Cell[3388, 107, 463, 10, 53, "Input"],
Cell[3854, 119, 457, 6, 28, "Output"]
}, Open  ]],
Cell[4326, 128, 301, 6, 59, "Text"],
Cell[CellGroupData[{
Cell[4652, 138, 569, 12, 53, "Input"],
Cell[CellGroupData[{
Cell[5246, 154, 135, 2, 22, "Print"],
Cell[5384, 158, 244, 6, 22, "Print"],
Cell[5631, 166, 365, 8, 22, "Print"],
Cell[5999, 176, 101, 1, 22, "Print"],
Cell[6103, 179, 99, 1, 21, "Print"],
Cell[6205, 182, 94, 1, 21, "Print"],
Cell[6302, 185, 97, 1, 22, "Print"],
Cell[6402, 188, 95, 1, 22, "Print"],
Cell[6500, 191, 89, 1, 21, "Print"],
Cell[6592, 194, 92, 1, 21, "Print"],
Cell[6687, 197, 99, 1, 21, "Print"],
Cell[6789, 200, 94, 1, 21, "Print"],
Cell[6886, 203, 97, 1, 21, "Print"],
Cell[6986, 206, 95, 1, 21, "Print"],
Cell[7084, 209, 94, 1, 21, "Print"],
Cell[7181, 212, 92, 1, 21, "Print"],
Cell[7276, 215, 104, 1, 22, "Print"],
Cell[7383, 218, 104, 1, 22, "Print"],
Cell[7490, 221, 105, 1, 22, "Print"],
Cell[7598, 224, 94, 1, 22, "Print"],
Cell[7695, 227, 93, 1, 21, "Print"],
Cell[7791, 230, 93, 1, 21, "Print"],
Cell[7887, 233, 91, 1, 21, "Print"],
Cell[7981, 236, 92, 1, 21, "Print"],
Cell[8076, 239, 90, 1, 21, "Print"],
Cell[8169, 242, 98, 1, 22, "Print"],
Cell[8270, 245, 109, 1, 22, "Print"],
Cell[8382, 248, 109, 1, 21, "Print"],
Cell[8494, 251, 94, 1, 21, "Print"],
Cell[8591, 254, 293, 6, 22, "Print"],
Cell[8887, 262, 90, 1, 21, "Print"],
Cell[8980, 265, 92, 1, 21, "Print"],
Cell[9075, 268, 95, 1, 22, "Print"],
Cell[9173, 271, 1478, 52, 707, "Print"],
Cell[10654, 325, 135, 2, 22, "Print"],
Cell[10792, 329, 244, 6, 22, "Print"],
Cell[11039, 337, 365, 8, 22, "Print"],
Cell[11407, 347, 113, 1, 22, "Print"]
}, Open  ]],
Cell[11535, 351, 454, 9, 56, "Message"],
Cell[11992, 362, 359, 8, 42, "Message"],
Cell[CellGroupData[{
Cell[12376, 374, 137, 2, 22, "Print"],
Cell[12516, 378, 244, 6, 22, "Print"],
Cell[12763, 386, 367, 8, 22, "Print"],
Cell[13133, 396, 111, 1, 22, "Print"]
}, Open  ]],
Cell[13259, 400, 254, 7, 24, "Message"],
Cell[13516, 409, 317, 8, 24, "Message"],
Cell[13836, 419, 366, 8, 39, "Message"],
Cell[CellGroupData[{
Cell[14227, 431, 135, 2, 22, "Print"],
Cell[14365, 435, 246, 6, 22, "Print"],
Cell[14614, 443, 367, 8, 22, "Print"],
Cell[14984, 453, 111, 1, 22, "Print"]
}, Open  ]],
Cell[15110, 457, 243, 7, 24, "Message"],
Cell[CellGroupData[{
Cell[15378, 468, 135, 2, 22, "Print"],
Cell[15516, 472, 246, 6, 22, "Print"],
Cell[15765, 480, 367, 8, 22, "Print"],
Cell[16135, 490, 111, 1, 22, "Print"]
}, Open  ]],
Cell[16261, 494, 569, 11, 78, "Message"],
Cell[CellGroupData[{
Cell[16855, 509, 137, 2, 22, "Print"],
Cell[16995, 513, 243, 6, 22, "Print"],
Cell[17241, 521, 365, 8, 22, "Print"],
Cell[17609, 531, 111, 1, 22, "Print"]
}, Open  ]],
Cell[17735, 535, 381, 8, 57, "Message"],
Cell[CellGroupData[{
Cell[18141, 547, 137, 2, 22, "Print"],
Cell[18281, 551, 244, 6, 22, "Print"],
Cell[18528, 559, 365, 8, 22, "Print"],
Cell[18896, 569, 111, 1, 22, "Print"]
}, Open  ]],
Cell[19022, 573, 407, 9, 42, "Message"],
Cell[19432, 584, 376, 8, 42, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19857, 598, 166, 2, 64, "Section"],
Cell[20026, 602, 457, 9, 83, "Text"],
Cell[CellGroupData[{
Cell[20508, 615, 892, 19, 53, "Input"],
Cell[21403, 636, 1246, 30, 47, "Output"]
}, Open  ]],
Cell[22664, 669, 479, 9, 83, "Text"],
Cell[CellGroupData[{
Cell[23168, 682, 504, 15, 53, "Input"],
Cell[23675, 699, 1849, 46, 121, "Output"]
}, Open  ]],
Cell[25539, 748, 151, 2, 35, "Text"],
Cell[CellGroupData[{
Cell[25715, 754, 1767, 46, 193, "Input"],
Cell[27485, 802, 107449, 2164, 319, "Output"],
Cell[134937, 2968, 505, 10, 26, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[135491, 2984, 129, 1, 64, "Section"],
Cell[135623, 2987, 137, 2, 35, "Text"],
Cell[CellGroupData[{
Cell[135785, 2993, 1257, 26, 93, "Input"],
Cell[137045, 3021, 693, 13, 24, "Message"],
Cell[137741, 3036, 707, 14, 24, "Message"],
Cell[138451, 3052, 703, 13, 24, "Message"]
}, Open  ]],
Cell[139169, 3068, 117, 2, 35, "Text"],
Cell[139289, 3072, 265, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[139579, 3083, 110, 1, 44, "Subsection"],
Cell[139692, 3086, 337, 13, 35, "Text"],
Cell[140032, 3101, 1235, 32, 96, "Input"],
Cell[141270, 3135, 141, 2, 35, "Text"],
Cell[CellGroupData[{
Cell[141436, 3141, 346, 9, 53, "Input"],
Cell[141785, 3152, 1548, 46, 109, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143382, 3204, 99, 1, 44, "Subsection"],
Cell[143484, 3207, 614, 13, 37, "Text"],
Cell[CellGroupData[{
Cell[144123, 3224, 1092, 26, 53, "Input"],
Cell[145218, 3252, 1490, 45, 75, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[146769, 3304, 99, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[146893, 3309, 111, 2, 49, "Subsection"],
Cell[CellGroupData[{
Cell[147029, 3315, 2629, 73, 213, "Input"],
Cell[149661, 3390, 606, 11, 24, "Message"],
Cell[150270, 3403, 609, 12, 24, "Message"],
Cell[150882, 3417, 640, 12, 24, "Message"],
Cell[151525, 3431, 612, 12, 24, "Message"],
Cell[152140, 3445, 614, 12, 24, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[152803, 3463, 143, 3, 49, "Subsection"],
Cell[CellGroupData[{
Cell[152971, 3470, 107, 1, 35, "Subsubsection"],
Cell[153081, 3473, 754, 20, 74, "Input"],
Cell[CellGroupData[{
Cell[153860, 3497, 610, 12, 32, "Input"],
Cell[154473, 3511, 546, 13, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155068, 3530, 154, 2, 35, "Subsubsection"],
Cell[155225, 3534, 893, 24, 76, "Input"],
Cell[CellGroupData[{
Cell[156143, 3562, 927, 19, 32, "Input"],
Cell[157073, 3583, 746, 17, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[157868, 3606, 148, 2, 35, "Subsubsection"],
Cell[158019, 3610, 591, 15, 53, "Input"],
Cell[CellGroupData[{
Cell[158635, 3629, 703, 13, 32, "Input"],
Cell[159341, 3644, 694, 15, 57, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[160084, 3665, 100, 1, 35, "Subsubsection"],
Cell[160187, 3668, 711, 15, 32, "Input"],
Cell[CellGroupData[{
Cell[160923, 3687, 622, 18, 53, "Input"],
Cell[161548, 3707, 397, 12, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161982, 3724, 793, 20, 53, "Input"],
Cell[162778, 3746, 418, 13, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163233, 3764, 734, 21, 75, "Input"],
Cell[163970, 3787, 634, 19, 28, "Output"]
}, Open  ]],
Cell[164619, 3809, 167, 4, 33, "Text"],
Cell[CellGroupData[{
Cell[164811, 3817, 358, 11, 32, "Input"],
Cell[165172, 3830, 8273, 147, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173482, 3982, 1320, 33, 123, "Input"],
Cell[174805, 4017, 2921, 86, 172, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[177799, 4111, 100, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[177924, 4116, 217, 3, 35, "Subsubsection"],
Cell[178144, 4121, 930, 27, 53, "Input"],
Cell[CellGroupData[{
Cell[179099, 4152, 687, 12, 32, "Input"],
Cell[179789, 4166, 264, 6, 24, "Message"],
Cell[180056, 4174, 21419, 595, 634, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
