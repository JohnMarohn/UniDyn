(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    258825,       6328]
NotebookOptionsPosition[    248159,       5989]
NotebookOutlinePosition[    248514,       6005]
CellTagsIndexPosition[    248471,       6002]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["UniDyn--Demo-Scratch.nb", "Title",
 CellChangeTimes->{{3.6352690845273046`*^9, 3.635269100847275*^9}, {
  3.6609180081345453`*^9, 3.660918013241088*^9}, {3.6615988707006617`*^9, 
  3.6615988735349627`*^9}}],

Cell["\<\
John A. Marohn
jam99@cornell.edu
Cornell University\
\>", "Text",
 CellChangeTimes->{{3.635269101985786*^9, 3.635269121580956*^9}},
 FontSize->18],

Cell[TextData[{
 StyleBox["Abstract:",
  FontWeight->"Bold"],
 "  This demonstration notebook loads the ",
 StyleBox["UniDyn",
  FontWeight->"Bold"],
 " package and executes the package\[CloseCurlyQuote]s unit tests."
}], "Text",
 CellChangeTimes->{{3.6352698622319117`*^9, 3.635269926908793*^9}, {
  3.6352701305950613`*^9, 3.635270138669529*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell["Set the path to the package", "Section",
 CellChangeTimes->{{3.635270036711257*^9, 3.63527004852262*^9}}],

Cell[TextData[{
 "Tell ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " the path to the directory containing the package.    \n\nEDIT THE \
FOLLOWING PATH STRING:"
}], "Text",
 CellChangeTimes->{{3.635270060901009*^9, 3.635270086988311*^9}, {
  3.6610825274488792`*^9, 3.6610825288209763`*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "$PackagePath", " ", "=", 
    "\"\</Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/unidyn\>\"\
"}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.6349053527016897`*^9, 3.6349054064223843`*^9}, {
  3.634910931339162*^9, 3.634910931457775*^9}, {3.634914337947165*^9, 
  3.6349143671071568`*^9}, {3.634922597904743*^9, 3.634922606812076*^9}, {
  3.635268730835155*^9, 3.635268731125407*^9}, {3.635269951638358*^9, 
  3.635269958323474*^9}, {3.660918115324842*^9, 3.660918132325369*^9}, {
  3.660918590921587*^9, 3.660918600403768*^9}},
 FontSize->16],

Cell["YOU SHOULD NOT NEED TO EDIT ANYTHING FROM HERE ONWARDS.", "Text",
 CellChangeTimes->{{3.635270073196437*^9, 3.635270077357624*^9}},
 FontSize->16]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load the package", "Section",
 CellChangeTimes->{{3.635269129230983*^9, 3.63526913095236*^9}}],

Cell[TextData[{
 "Append the package path to the system path.  Before trying to load the \
package, ask ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to find it.  This is a test that we directed ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to the correct directory.  The output of this command should be the full \
system path to the UniDyn.m file.   "
}], "Text",
 CellChangeTimes->{{3.635269223597199*^9, 3.635269340159473*^9}, {
   3.635269947982662*^9, 3.6352699492517843`*^9}, {3.635269985297124*^9, 
   3.63527000724584*^9}, 3.635270066996499*^9, {3.63527010818321*^9, 
   3.6352701131658497`*^9}, {3.660918102499856*^9, 3.6609181035465183`*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Path", " ", "=", " ", 
   RowBox[{"AppendTo", "[", 
    RowBox[{"$Path", ",", "$PackagePath"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindFile", "[", "\"\<UniDyn`\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.634906393354924*^9, 3.634906398308229*^9}, {
  3.634922599063291*^9, 3.634922599752222*^9}, {3.635268728673848*^9, 
  3.6352687402094*^9}, {3.635269954012105*^9, 3.6352699550474253`*^9}},
 FontSize->16],

Cell[BoxData["\<\"/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
UniDyn/UniDyn.m\"\>"], "Output",
 CellChangeTimes->{3.6614707136740513`*^9, 3.661479177158627*^9, 
  3.661532655938403*^9, 3.661534424524879*^9, 3.6615345733078747`*^9, 
  3.66153595871663*^9, 3.6615361849943542`*^9, 3.6615362214825907`*^9, 
  3.661536464045929*^9, 3.661537151958733*^9, 3.661537709711556*^9, 
  3.661540165053076*^9, 3.661542369100931*^9, 3.661599473254528*^9, 
  3.6828518971082487`*^9, 3.68286048989187*^9, 3.6828607070428667`*^9, 
  3.682861587900721*^9, 3.682861787876326*^9, 3.836676186023241*^9}]
}, Open  ]],

Cell["\<\
Now that we are confident that the path is set correctlly, load the package.  \
Setting the global $VerboseLoad variable to True will print out the help \
strings for key commands in the package.  \
\>", "Text",
 CellChangeTimes->{{3.635269347360386*^9, 3.63526943190546*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$VerboseLoad", " ", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<UniDyn`\>\"", "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQfYUjQpVD9LXjxxR+TRC9peyGEyeQ/lH0EExXTKuJ
BdGbVk8B0zYvFOpA9Ik35o0gmsEzcwKI3ruyF0yrn4ubDqITDHPAdMGBGUdA
9K1JG8G0V4+DGg+Q1vtwBUyLu5WcAtE8yv6nQfT861tdBUDm3NFxA9F2v/Ym
g+h4M4cUED09+VEGiC6rzcoH0RUNSUHSQHqfnVQoiP6uyGkiC6T5nmeCabdp
f25FAekIO8nbINqkKUQlBUiz/Z0DplNs3jwG0Q88GJ+A6Bf2PcZdQNqjYi6Y
XnQt//l3t9eOqzNZX4DoFiF11h9A+sM0WzANAASGiF4=
  "],
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.836676186206601*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.836676186223591*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.8366761862408524`*^9}],

Cell[BoxData["\<\"NCMultiplication.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676186334135*^9}],

Cell[BoxData["\<\"NC1SetCommands.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676186352487*^9}],

Cell[BoxData["\<\"NCInverses.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676186365034*^9}],

Cell[BoxData["\<\"NCTransposes.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676186380679*^9}],

Cell[BoxData["\<\"NCAdjoints.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676186440113*^9}],

Cell[BoxData["\<\"NCCo.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676186452921*^9}],

Cell[BoxData["\<\"NCRoots.m loaded\"\>"], "Print",
 CellChangeTimes->{3.83667618646743*^9}],

Cell[BoxData["\<\"NC2SetCommands.m loaded\"\>"], "Print",
 CellChangeTimes->{3.8366761864803867`*^9}],

Cell[BoxData["\<\"NCCollect.m loaded\"\>"], "Print",
 CellChangeTimes->{3.8366761864907827`*^9}],

Cell[BoxData["\<\"NCSubstitute.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676186502129*^9}],

Cell[BoxData["\<\"NCMonomial.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676186515007*^9}],

Cell[BoxData["\<\"NCSolve.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676186530254*^9}],

Cell[BoxData["\<\"NCTools.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676186543734*^9}],

Cell[BoxData["\<\"NC2SimplifyRational.m loaded\"\>"], "Print",
 CellChangeTimes->{3.83667618655504*^9}],

Cell[BoxData["\<\"NC1SimplifyRational.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676186565359*^9}],

Cell[BoxData["\<\"NCSimplifyRational.m loaded\"\>"], "Print",
 CellChangeTimes->{3.8366761865766172`*^9}],

Cell[BoxData["\<\"NCComplex.m loaded\"\>"], "Print",
 CellChangeTimes->{3.8366761866365137`*^9}],

Cell[BoxData["\<\"NCMatMult.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676186985688*^9}],

Cell[BoxData["\<\"NCDiff.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676186994776*^9}],

Cell[BoxData["\<\"NCSchur.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676187068317*^9}],

Cell[BoxData["\<\"NCAlias.m loaded\"\>"], "Print",
 CellChangeTimes->{3.83667618708032*^9}],

Cell[BoxData["\<\"Grabs.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676187092442*^9}],

Cell[BoxData["\<\"NCTaylorCoeff.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676187101718*^9}],

Cell[BoxData["\<\"NCConvexity.m and NCGuts.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676187110076*^9}],

Cell[BoxData["\<\"NCRealizationFunctions.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676187170809*^9}],

Cell[BoxData["\<\"NCTeXForm.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676187183401*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"NCTeX::Using '\"\>", "\[InvisibleSpace]", "\<\"open\"\>", 
   "\[InvisibleSpace]", "\<\"' as PDFViewer.\"\>"}],
  SequenceForm["NCTeX::Using '", "open", "' as PDFViewer."],
  Editable->False]], "Print",
 CellChangeTimes->{3.8366761873875437`*^9}],

Cell[BoxData["\<\"NCTeX.m loaded\"\>"], "Print",
 CellChangeTimes->{3.83667618740129*^9}],

Cell[BoxData["\<\"NCMaster.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676187412216*^9}],

Cell[BoxData["\<\"NCOutput.m loaded\"\>"], "Print",
 CellChangeTimes->{3.836676187422822*^9}],

Cell["\<\
------------------------------------------------------------
NCAlgebra - Version 4.0.6
Compatible with Mathematica Version 9

Authors:
  J. William Helton*
  Mauricio de Oliveira* 
  Mark Stankus* 
  Robert L. Miller#

* Math Dept, UCSD                
# General Atomics Corp
  La  Jolla, CA 92093

Copyright: 
  Helton and Miller June 1991
  Helton 2002
  All rights reserved.

The program was written by the authors and by:
  David Hurst, Daniel Lamm, Orlando Merino, Robert Obar,
  Henry Pfister, Mike Walker, John Wavrik, Lois Yu,
  J. Camino, J. Griffin, J. Ovall, T. Shaheen, John Shopple. 
  The beginnings of the program come from eran@slac.
  Considerable recent help came from Igor Klep.


This program was written with support from 
  AFOSR, NSF, ONR, Lab for Math and Statistics at UCSD,
  UCSD Faculty Mentor Program,
  and US Department of Education.
  Primary support in 2010 is from the 
    NSF Division of Mathematical Sciences.

If you 
  (1) are a user, 
  (2) want to be a user, 
  (3) refer to NCAlgebra in a publication, or 
  (4) have had an interesting experience with NCAlgebra,
let us know by sending an e-mail message to  

  ncalg@math.ucsd.edu. 

We do not want to restrict access to NCAlgebra, but do 
  want to keep track of how it is being used.

For NCAlgebra updates see the web page:

  www.math.ucsd.edu/~ncalg 
------------------------------------------------------------\
\>", "Print",
 CellChangeTimes->{3.8366761874382877`*^9}],

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.836676187502759*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8366761875146027`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.836676187524961*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.836676187534988*^9}]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "CreateOperator","usage",
   "\"CreateOperator[] is used to batch-define a bunch of operators. Example: \
CreateOperator[{{Ix, Iy, Iz},{Sx,Sy,Sz}}] will create six operators;  each of \
the operators in the first list is meant to commute with each of the \
operators in the second list.\"",2,5,1,29813474310506387603,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.836676187604044*^9}],

Cell[BoxData[
 TemplateBox[{
  "CreateScalar","usage",
   "\"CreateScalar[list] is used to batch-define a bunch of scalars. The \
parameter list can be a single scalar or a list of scalars.  Example: \
CreateScalar[{w1,w2}].\"",2,5,2,29813474310506387603,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.836676187717681*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.836676187739992*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.836676187747993*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.836676187761126*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.83667618777271*^9}]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "NCSort","usage",
   "\"NCSort[list] sorts the operators in list into canonical order.\"",2,5,3,
   29813474310506387603,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.836676187784519*^9}],

Cell[BoxData[
 TemplateBox[{
  "SortedMult","usage",
   "\"SortedMult[list] returns Mult[list$ordered], where list$ordered are the \
elements of list sorted into canonical order.\"",2,5,4,29813474310506387603,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8366761878046913`*^9}],

Cell[BoxData[
 TemplateBox[{
  "MultSort","usage",
   "\"MultSort[NonCommutativeMultiplyt[list]] returns returns \
NonCommutativeMultiply[list$ordered], where list$ordered are the elements of \
list sorted into canonical order.  \"",2,5,5,29813474310506387603,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8366761878241377`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.8366761878443193`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.836676187851696*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.836676187864358*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.836676187875896*^9}]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "Comm","usage","\"Comm[a,b] calculates the commutator of two operators.\"",
   2,5,6,29813474310506387603,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.836676187887882*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.8366761879077177`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.836676187915462*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.836676187926779*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.836676187938582*^9}]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators","usage",
   "\"SpinSingle$CreateOperators[Ix,Iy,Iz,L] creates Ix, Iy, and Iz angular \
momentum operators and defines their commutation relations.  When the total \
angular momentum L = 1/2, additional rules are defined to simplify products \
of the angular momentum operators.  When the total angular momentum L is \
unspecified, no such simplification rules are defined.\"",2,5,7,
   29813474310506387603,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.836676187950893*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.8366761879707327`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.836676188020546*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.8366761880338182`*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.836676188045356*^9}]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "OscSingle$CreateOperators","usage",
   "\"OscSingle$CreateOperators[aL,aR] creates a raising operator aR and a \
lowering operator aL for single harmonic oscillator and defines the operator \
commutation relations.\"",2,5,8,29813474310506387603,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8366761880562563`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{3.8366761880759478`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", 
   "\[InvisibleSpace]", "\<\"/Users/jam99/Downloads/NC\"\>"}],
  SequenceForm["  ", "/Users/jam99/Downloads/NC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8366761880830517`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"You can now use \\\"<< NCAlgebra`\\\" to load NCAlgebra or \
\"\>", "\[InvisibleSpace]", "\<\"\\\"<< NCGB`\\\" to load NCGB.\"\>"}],
  SequenceForm[
  "You can now use \"<< NCAlgebra`\" to load NCAlgebra or ", 
   "\"<< NCGB`\" to load NCGB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.8366761880936193`*^9}],

Cell[BoxData["\<\"You have already loaded NCAlgebra.m\"\>"], "Print",
 CellChangeTimes->{3.836676188105418*^9}]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "Evolve","usage",
   "\"Evolve[H,t,\[Rho]] represents unitary evolution of the density operator \
\[Rho] for a time t under the Hamiltonian H.  This function expands according \
to simplification rules but leaves the evolution unevaluated.\"",2,5,9,
   29813474310506387603,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.836676188115674*^9}],

Cell[BoxData[
 TemplateBox[{
  "Evolver","usage",
   "\"Evolver[H,t,\[Rho](0)] calculates \[Rho](t) = Exp[-I H t] \[Rho](0) \
Exp[+I H t], assuming that H is time independent, according to the \
commutation rules followed by \[Rho](0) and H.\"",2,5,10,29813474310506387603,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8366761881363297`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Execute the units tests in batch", "Section",
 CellChangeTimes->{{3.635269450321582*^9, 3.635269455866803*^9}, {
  3.661082576038043*^9, 3.661082577577619*^9}}],

Cell["\<\
Included with the package are a number of files, ending in \
\[OpenCurlyDoubleQuote]-tests.m\[CloseCurlyDoubleQuote], that contain tests \
of the package\[CloseCurlyQuote]s functions -- so-called unit tests.  Set the \
working directory to the package directory and pretty-print the directory \
name.\
\>", "Text",
 CellChangeTimes->{{3.635269466546741*^9, 3.63526959787702*^9}, {
  3.6352696661918793`*^9, 3.6352697255432568`*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", "$PackagePath", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "$PackagePath", "}"}], "}"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", "\"\<Directory\>\"", "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.634944324488654*^9, 3.6349443603233624`*^9}, {
   3.6349444030097713`*^9, 3.63494440330383*^9}, {3.634944747308063*^9, 
   3.6349447481808853`*^9}, {3.634946064022402*^9, 3.634946069263152*^9}, {
   3.634946188079462*^9, 3.634946189912341*^9}, {3.6349479903618507`*^9, 
   3.6349480514686327`*^9}, {3.6349480899795113`*^9, 
   3.6349482285783367`*^9}, {3.634948408385352*^9, 3.634948452061852*^9}, {
   3.635269608570084*^9, 3.635269645220949*^9}, 3.635269728194304*^9},
 FontSize->16],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Directory\"\>",
       HoldForm]},
     {"\<\"/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/unidyn\"\
\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {None, {"Directory"}}]]]], "Output",\

 CellChangeTimes->{3.661470714474102*^9, 3.6614791775702543`*^9, 
  3.661532656000002*^9, 3.6615344249571257`*^9, 3.661534573808139*^9, 
  3.661535959139999*^9, 3.661536185384212*^9, 3.661536221855288*^9, 
  3.661536464436379*^9, 3.661537152465351*^9, 3.6615377100776463`*^9, 
  3.66154016547451*^9, 3.6615423691474123`*^9, 3.661599473745071*^9, 
  3.6828518978793163`*^9, 3.682860490547509*^9, 3.682860707131661*^9, 
  3.682861587979883*^9, 3.682861787946982*^9, 3.8366762070430727`*^9}]
}, Open  ]],

Cell["\<\
Get the names of all the unit-testing files included with the package \
(following my convention that the unit testing file end in \
\[OpenCurlyDoubleQuote]-tests.m\[CloseCurlyDoubleQuote]).   Pretty-print the \
names of the unit-test files included with the package.\
\>", "Text",
 CellChangeTimes->{
  3.6352696714534483`*^9, {3.6352697371205063`*^9, 3.6352697785313387`*^9}, {
   3.6352698393266697`*^9, 3.635269839517961*^9}, 3.6609243923593283`*^9},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fn", " ", "=", " ", 
   RowBox[{"FileNames", "[", "\"\<*-tests.m\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "fn", "}"}], "}"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", "\"\<Test files found\>\"", "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6610821906566467`*^9, 3.661082193022552*^9}},
 FontSize->16],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Test files found\"\>",
       HoldForm]},
     {
      TagBox[GridBox[{
         {"\<\"Comm-tests.m\"\>"},
         {"\<\"Evolve-tests.m\"\>"},
         {"\<\"Mult-tests.m\"\>"},
         {"\<\"OpCreate-tests.m\"\>"},
         {"\<\"Osc-tests.m\"\>"},
         {"\<\"Spins-tests.m\"\>"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {{
             Offset[0.2]}}, "RowsIndexed" -> {}}],
       Column]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {None, {"Test files found"}}]]]], "Output",
 CellChangeTimes->{3.6614707145112534`*^9, 3.6614791776199837`*^9, 
  3.66153265603694*^9, 3.66153442498964*^9, 3.661534573841134*^9, 
  3.6615359591910343`*^9, 3.661536185418442*^9, 3.661536221887788*^9, 
  3.661536464468541*^9, 3.661537152497046*^9, 3.661537710112206*^9, 
  3.661540165508061*^9, 3.6615423691764097`*^9, 3.661599473777424*^9, 
  3.682851897920143*^9, 3.682860490576693*^9, 3.68286070716717*^9, 
  3.6828615880297537`*^9, 3.682861787970718*^9, 3.8366762071079683`*^9}]
}, Open  ]],

Cell["Finally, carry out the unit tests and make a report.", "Text",
 CellChangeTimes->{{3.635269787557482*^9, 3.6352698056777897`*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tr", " ", "=", 
   RowBox[{"TestReport", " ", "/@", " ", "fn"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TableForm", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"tr", " ", "[", 
      RowBox[{"[", "k", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{"Length", "[", "tr", "]"}]}], "}"}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tests$run$total", " ", "=", " ", 
   RowBox[{"Plus", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"tr", "[", 
         RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<TestsSucceededCount\>\"", 
        "]"}], "&"}], " ", "/@", " ", 
      RowBox[{"List", " ", "@@", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"k", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"Length", "[", "tr", "]"}]}], "}"}]}], "]"}]}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"\"\<Total test run = \>\"", " ", "<>", " ", 
      RowBox[{"ToString", "[", "tests$run$total", " ", "]"}]}], ",", 
     RowBox[{"FontWeight", "\[Rule]", " ", "Bold"}], ",", 
     RowBox[{"FontSize", "\[Rule]", " ", "18"}], ",", 
     RowBox[{"FontColor", "\[Rule]", " ", "Blue"}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.661056096117302*^9, 3.6610561018069153`*^9}, {
  3.661057070228121*^9, 3.6610570741421413`*^9}, {3.661081914458424*^9, 
  3.661081936122706*^9}, {3.6610826347312403`*^9, 3.6610826394672413`*^9}, {
  3.6611400376524487`*^9, 3.661140039730514*^9}},
 FontSize->16],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False->GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{12., {0., 12.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"],
                  ImageSizeCache->{16., {4., 8.}}],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Comm-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["12",
                   "SummaryItem"]}]}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
           GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"]],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Comm-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["12",
                   "SummaryItem"]}]},
                {
                 RowBox[{
                  TagBox["\<\"Succeeded: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["12",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with wrong results: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with messages: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with errors: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
           Typeset`open$$],
           ImageSize->Automatic],
          BaselinePosition->Baseline],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: Comm-tests.m", "TimeElapsed" -> 
         Quantity[0.5700000000000001, "Seconds"], "TestsSucceededCount" -> 12,
          "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[2 -> TestResultObject[
             Association[
             "TestIndex" -> 2, "TestID" -> "Comm > test01a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000172`2.386043444739543, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00017199999999917281`, "Seconds"], "MemoryUsed" -> 
              Quantity[1904, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestIndex" -> 3, "TestID" -> "Comm > test01b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000094`2.1236428514316903, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009299999999967667, "Seconds"], "MemoryUsed" -> 
              Quantity[216, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestIndex" -> 4, "TestID" -> "Comm > test01c", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000204`2.4601451652578903, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.000204000000000093, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestIndex" -> 5, "TestID" -> "Comm > test01d", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000171`2.3835111082241456, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00016600000000188686`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestIndex" -> 6, "TestID" -> "Comm > test01e", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000129`2.261104708131243, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001270000000008764, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestIndex" -> 7, "TestID" -> "Comm > test02a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000179`2.403368028811887, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00017700000000075988`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestIndex" -> 8, "TestID" -> "Comm > test03a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000172`2.3860434447395407, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00016899999999964166`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestIndex" -> 9, "TestID" -> "Comm > test03b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000171`2.3835111082241456, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00016700000000113846`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestIndex" -> 10, "TestID" -> "Comm > test03c", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000131`2.267786293487756, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.000128000000000128, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestIndex" -> 11, "TestID" -> "Comm > test04a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000177`2.3984882641937983, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00017400000000122873`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestIndex" -> 12, "TestID" -> "Comm > test04b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000215`2.482953457747597, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00021499999999896602`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestIndex" -> 13, "TestID" -> "Comm > test05a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000178`2.4009350001408856, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001829999999998222, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]]], 
         "TestsSucceededIndices" -> {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, 
         "TestsFailedIndices" -> {}, "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False->GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{12., {0., 12.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"],
                  ImageSizeCache->{16., {4., 8.}}],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Evolve-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["23",
                   "SummaryItem"]}]}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
           GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"]],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Evolve-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["23",
                   "SummaryItem"]}]},
                {
                 RowBox[{
                  TagBox["\<\"Succeeded: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["23",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with wrong results: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with messages: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with errors: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
           Typeset`open$$],
           ImageSize->Automatic],
          BaselinePosition->Baseline],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: Evolve-tests.m", "TimeElapsed" -> 
         Quantity[5.43, "Seconds"], "TestsSucceededCount" -> 23, 
         "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[2 -> TestResultObject[
             Association[
             "TestIndex" -> 2, "TestID" -> "Osc > test01a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000116`2.2149729870589083, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011500000000097543`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestIndex" -> 3, "TestID" -> "Osc > test01b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000094`2.1236428514316885, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009200000000042508, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestIndex" -> 4, "TestID" -> "Osc > test01c", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.1047575072713167, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008799999999986596, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestIndex" -> 5, "TestID" -> "Osc > test02a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000091`2.1095563901530876, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009000000000014552, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestIndex" -> 6, "TestID" -> "Osc > test02b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000094`2.1236428514316903, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009399999999892827, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestIndex" -> 7, "TestID" -> "Osc > test02c", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000089`2.0999050044769065, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000879999999980896, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestIndex" -> 8, "TestID" -> "Osc > test03a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000088`2.094997669982163, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008699999999883801, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestIndex" -> 9, "TestID" -> "Osc > test03b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000122`2.23687482850674, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012299999999854094`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestIndex" -> 10, "TestID" -> "Osc > test03c", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000144`2.3088774899272413, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00014100000000105695`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestIndex" -> 11, "TestID" -> "Osc > test04a > DSolve test", 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000185`2.4176867262350057, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00017900000000103944`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestIndex" -> 12, "TestID" -> 
              "Osc > test05a > free evolution of Ix", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.00012`2.229696243879616, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012200000000461841`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestIndex" -> 13, "TestID" -> 
              "Osc > test05b > on-resonance nutation of Iz", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000116`2.2149729870589083, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011600000000200339`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 14 -> TestResultObject[
             Association[
             "TestIndex" -> 14, "TestID" -> 
              "Osc > test05c > free evolution of I+", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000116`2.2149729870589128, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011599999999845068`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 15 -> TestResultObject[
             Association[
             "TestIndex" -> 15, "TestID" -> 
              "Osc > test05d > scalar-coupling evolution of Ix", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000117`2.2187008595781554, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011800000000050659`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 16 -> TestResultObject[
             Association[
             "TestIndex" -> 16, "TestID" -> 
              "Osc > test05e > Off-resonance nutation of of Iz", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000189`2.4269768020052336, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001889999999988845, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 17 -> TestResultObject[
             Association[
             "TestIndex" -> 17, "TestID" -> 
              "Osc > test06a1 > free evolution of lowering operator", 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000138`2.290394084233228, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00013799999999974943`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 18 -> TestResultObject[
             Association[
             "TestIndex" -> 18, "TestID" -> 
              "Osc > test06a2 > free evolution of raising operator", 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000117`2.2187008595781514, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011800000000050659`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 19 -> TestResultObject[
             Association[
             "TestIndex" -> 19, "TestID" -> 
              "Osc > test06b > test Q definition", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000097`2.1372867320982363, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009500000000173259, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 20 -> TestResultObject[
             Association[
             "TestIndex" -> 20, "TestID" -> 
              "Osc > test06c > test P definition", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000093`2.1189979463859268, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009100000000117348, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 21 -> TestResultObject[
             Association[
             "TestIndex" -> 21, "TestID" -> 
              "Osc > test06d > free evolution of Q", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000122`2.236874828506738, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012199999999751299`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 22 -> TestResultObject[
             Association[
             "TestIndex" -> 22, "TestID" -> 
              "Osc > test06e > free evolution of P", "Outcome" -> "Success", 
              "Input" -> HoldForm[True], "ExpectedOutput" -> HoldForm[True], 
              "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000147`2.317832332580166, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00014800000000292357`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 23 -> TestResultObject[
             Association[
             "TestIndex" -> 23, "TestID" -> "Osc > test06f > position kick", 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000154`2.338035718668453, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00015300000000095793`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 24 -> TestResultObject[
             Association[
             "TestIndex" -> 24, "TestID" -> "Osc > test06g > momentum kick", 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> {}, 
              "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
              Quantity[0.000117`2.2187008595781537, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011699999999947863`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]]], 
         "TestsSucceededIndices" -> {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
          14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}, 
         "TestsFailedIndices" -> {}, "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False->GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{12., {0., 12.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"],
                  ImageSizeCache->{16., {4., 8.}}],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Mult-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["17",
                   "SummaryItem"]}]}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
           GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"]],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Mult-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["17",
                   "SummaryItem"]}]},
                {
                 RowBox[{
                  TagBox["\<\"Succeeded: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["17",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with wrong results: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with messages: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with errors: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
           Typeset`open$$],
           ImageSize->Automatic],
          BaselinePosition->Baseline],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: Mult-tests.m", "TimeElapsed" -> 
         Quantity[0.6900000000000001, "Seconds"], "TestsSucceededCount" -> 17,
          "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[2 -> TestResultObject[
             Association[
             "TestIndex" -> 2, "TestID" -> "Mult > test01a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000124`2.2439366829942267, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012300000000209366`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestIndex" -> 3, "TestID" -> "Mult > test02a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000191`2.4315483650797214, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001889999999988845, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestIndex" -> 4, "TestID" -> "Mult > test02b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000187`2.422356604368493, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00016700000000113846`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestIndex" -> 5, "TestID" -> "Mult > test03a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000112`2.1997330205021735, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011299999999891952`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestIndex" -> 6, "TestID" -> "Mult > test03b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000105`2.171704296901932, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010500000000135401`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestIndex" -> 7, "TestID" -> "Mult > test04a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000223`2.4988198608801526, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.000181000000001319, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestIndex" -> 8, "TestID" -> "Mult > test04b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000102`2.159115169593909, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010000000000331966`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestIndex" -> 9, "TestID" -> "Mult > test05a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00039`2.741579604858491, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.000324999999996578, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestIndex" -> 10, "TestID" -> "Mult > test06a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000116`2.2149729870589083, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011599999999845068`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestIndex" -> 11, "TestID" -> "Mult > test06b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000124`2.2439366829942267, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001260000000016248, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestIndex" -> 12, "TestID" -> "Mult > test07a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000122`2.236874828506738, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012199999999751299`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestIndex" -> 13, "TestID" -> "Mult > test08a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000125`2.2474250108400504, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012499999999704414`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 14 -> TestResultObject[
             Association[
             "TestIndex" -> 14, "TestID" -> "Mult > test08b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000112`2.1997330205021752, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011299999999891952`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 15 -> TestResultObject[
             Association[
             "TestIndex" -> 15, "TestID" -> "Mult > test08b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000123`2.2404201092713896, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012300000000209366`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 16 -> TestResultObject[
             Association[
             "TestIndex" -> 16, "TestID" -> "Mult > test08d", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000162`2.3600300123746227, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00016099999999852344`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 17 -> TestResultObject[
             Association[
             "TestIndex" -> 17, "TestID" -> "Mult > test09a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00017`2.3809639192102656, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00017000000000066962`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 18 -> TestResultObject[
             Association[
             "TestIndex" -> 18, "TestID" -> "Mult > test10a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000127`2.2543187187879505, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012899999999760325`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]]], 
         "TestsSucceededIndices" -> {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
          14, 15, 16, 17, 18}, "TestsFailedIndices" -> {}, 
         "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False->GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{12., {0., 12.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"],
                  ImageSizeCache->{16., {4., 8.}}],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: OpCreate-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["23",
                   "SummaryItem"]}]}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
           GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"]],
                 Alignment->Center,
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: OpCreate-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["23",
                   "SummaryItem"]}]},
                {
                 RowBox[{
                  TagBox["\<\"Succeeded: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["23",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with wrong results: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with messages: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with errors: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
           Typeset`open$$],
           ImageSize->Automatic],
          BaselinePosition->Baseline],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: OpCreate-tests.m", "TimeElapsed" -> 
         Quantity[0.5700000000000001, "Seconds"], "TestsSucceededCount" -> 23,
          "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[2 -> TestResultObject[
             Association[
             "TestIndex" -> 2, "TestID" -> "OpCreate > test01a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000107`2.179898775517199, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010599999999882925`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestIndex" -> 3, "TestID" -> "OpCreate > test01b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000091`2.1095563901530854, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009000000000014552, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestIndex" -> 4, "TestID" -> "OpCreate > test01c", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.1047575072713167, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008900000000267028, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestIndex" -> 5, "TestID" -> "OpCreate > test02a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000089`2.099905004476902, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008800000000164232, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestIndex" -> 6, "TestID" -> "OpCreate > test02b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.1047575072713167, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000879999999980896, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestIndex" -> 7, "TestID" -> "OpCreate > test02c", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.1047575072713163, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000879999999980896, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestIndex" -> 8, "TestID" -> "OpCreate > test03a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00012`2.2296962438796144, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011800000000050659`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestIndex" -> 9, "TestID" -> "OpCreate > test03b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000091`2.1095563901530854, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000879999999980896, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestIndex" -> 10, "TestID" -> "OpCreate > test03c", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000091`2.1095563901530854, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008900000000267028, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestIndex" -> 11, "TestID" -> "OpCreate > test04a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.1047575072713163, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008900000000267028, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestIndex" -> 12, "TestID" -> "OpCreate > test04b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000089`2.099905004476902, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000879999999980896, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestIndex" -> 13, "TestID" -> "OpCreate > test04c", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000092`2.1143028251775466, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009000000000014552, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 14 -> TestResultObject[
             Association[
             "TestIndex" -> 14, "TestID" -> "OpCreate > test04d", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.1047575072713167, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008700000000061436, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 15 -> TestResultObject[
             Association[
             "TestIndex" -> 15, "TestID" -> "OpCreate > test04e", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.104757507271315, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008900000000267028, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 16 -> TestResultObject[
             Association[
             "TestIndex" -> 16, "TestID" -> "OpCreate > test04f", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.1047575072713163, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008800000000164232, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 17 -> TestResultObject[
             Association[
             "TestIndex" -> 17, "TestID" -> "OpCreate > test04g", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000089`2.0999050044769043, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008700000000061436, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 18 -> TestResultObject[
             Association[
             "TestIndex" -> 18, "TestID" -> "OpCreate > test04h", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000088`2.0949976699821606, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008699999999706165, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 19 -> TestResultObject[
             Association[
             "TestIndex" -> 19, "TestID" -> "OpCreate > test05a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000089`2.099905004476902, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008700000000061436, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 20 -> TestResultObject[
             Association[
             "TestIndex" -> 20, "TestID" -> "OpCreate > test05b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000095`2.128238603120839, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00009500000000173259, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 21 -> TestResultObject[
             Association[
             "TestIndex" -> 21, "TestID" -> "OpCreate > test05c", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.104757507271319, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000879999999980896, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 22 -> TestResultObject[
             Association[
             "TestIndex" -> 22, "TestID" -> "OpCreate > test05d", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000089`2.0999050044769043, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000879999999980896, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 23 -> TestResultObject[
             Association[
             "TestIndex" -> 23, "TestID" -> "OpCreate > test06a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000139`2.2935297980860865, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00013599999999769352`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 24 -> TestResultObject[
             Association[
             "TestIndex" -> 24, "TestID" -> "OpCreate > test06b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.1047575072713163, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000879999999980896, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]]], 
         "TestsSucceededIndices" -> {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
          14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}, 
         "TestsFailedIndices" -> {}, "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False->GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{12., {0., 12.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"],
                  ImageSizeCache->{16., {4., 8.}}],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Osc-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["20",
                   "SummaryItem"]}]}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
           GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"]],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Osc-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["20",
                   "SummaryItem"]}]},
                {
                 RowBox[{
                  TagBox["\<\"Succeeded: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["20",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with wrong results: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with messages: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with errors: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
           Typeset`open$$],
           ImageSize->Automatic],
          BaselinePosition->Baseline],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: Osc-tests.m", "TimeElapsed" -> 
         Quantity[0.59, "Seconds"], "TestsSucceededCount" -> 20, 
         "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[2 -> TestResultObject[
             Association[
             "TestIndex" -> 2, "TestID" -> "Osc > test00a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000131`2.267786293487756, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012900000000115597`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestIndex" -> 3, "TestID" -> "Osc > test00b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000155`2.340846696002283, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00014500000000339242`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestIndex" -> 4, "TestID" -> "Osc > test00c", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000134`2.277619796196799, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00013399999999919032`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestIndex" -> 5, "TestID" -> "Osc > test01a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000121`2.2333003681484396, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011900000000153454`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestIndex" -> 6, "TestID" -> "Osc > test01b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000121`2.233300368148442, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011899999999798183`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestIndex" -> 7, "TestID" -> "Osc > test01c", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000206`2.4643822182011452, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00019300000000299633`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestIndex" -> 8, "TestID" -> "Osc > test01d", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000128`2.2577249674798603, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012699999999910005`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestIndex" -> 9, "TestID" -> "Osc > test02a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000125`2.247425010840048, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001240000000031216, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestIndex" -> 10, "TestID" -> "Osc > test02b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000119`2.2260619592245225, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011799999999695387`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestIndex" -> 11, "TestID" -> "Osc > test02c", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000169`2.378401702445667, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00016699999999758575`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestIndex" -> 12, "TestID" -> "Osc > test02d", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000205`2.4622688588877457, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00017899999999926308`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestIndex" -> 13, "TestID" -> "Osc > test03a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000107`2.179898775517199, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010799999999733245`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 14 -> TestResultObject[
             Association[
             "TestIndex" -> 14, "TestID" -> "Osc > test03b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.1047575072713167, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008800000000164232, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 15 -> TestResultObject[
             Association[
             "TestIndex" -> 15, "TestID" -> "Osc > test04a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000112`2.1997330205021752, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00011200000000144428`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 16 -> TestResultObject[
             Association[
             "TestIndex" -> 16, "TestID" -> "Osc > test04b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.1047575072713163, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008899999999911756, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 17 -> TestResultObject[
             Association[
             "TestIndex" -> 17, "TestID" -> "Osc > test04c", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000089`2.099905004476902, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000879999999980896, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 18 -> TestResultObject[
             Association[
             "TestIndex" -> 18, "TestID" -> "Osc > test04d", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000089`2.0999050044769065, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008800000000164232, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 19 -> TestResultObject[
             Association[
             "TestIndex" -> 19, "TestID" -> "Osc > test04e", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00012`2.2296962438796144, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010899999999836041`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 20 -> TestResultObject[
             Association[
             "TestIndex" -> 20, "TestID" -> "Osc > test04f", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000122`2.23687482850674, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00012100000000003774`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 21 -> TestResultObject[
             Association[
             "TestIndex" -> 21, "TestID" -> "Osc > test05a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000301`2.6290814934258373, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0002769999999969741, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]]], 
         "TestsSucceededIndices" -> {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
          14, 15, 16, 17, 18, 19, 20, 21}, "TestsFailedIndices" -> {}, 
         "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False->GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{12., {0., 12.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"],
                  ImageSizeCache->{16., {4., 8.}}],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Spins-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["14",
                   "SummaryItem"]}]}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
           GridBox[{
             {
              PaneBox[
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"],
               Alignment->{Center, Center},
               
               ImageSize->
                Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[InsetBox[
                PaneBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SuccessIcon"]],
                 Alignment->Center,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]]],
               AspectRatio->1,
               Axes->False,
               Background->GrayLevel[0.93],
               Frame->True,
               FrameStyle->Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]],
               FrameTicks->None,
               ImageSize->{Automatic, 
                 Dynamic[
                 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]]},
               PlotRange->{{0, 1}, {0, 1}}], GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Title: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\<\"Test Report: Spins-tests.m\"\>",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Success rate: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"100","\"%\""},
                    "RowDefault"],
                   "SummaryItem"]}], 
                 RowBox[{
                  TagBox["\<\"Tests run: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["14",
                   "SummaryItem"]}]},
                {
                 RowBox[{
                  TagBox["\<\"Succeeded: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["14",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with wrong results: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with messages: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"},
                {
                 RowBox[{
                  TagBox["\<\"Failed with errors: \"\>",
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["0",
                   "SummaryItem"]}], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               
               BaseStyle->{
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False},
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Rows" -> {{Top}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
           Typeset`open$$],
           ImageSize->Automatic],
          BaselinePosition->Baseline],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[
        Association[
        "Title" -> "Test Report: Spins-tests.m", "TimeElapsed" -> 
         Quantity[0.6, "Seconds"], "TestsSucceededCount" -> 14, 
         "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
         "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 
         0, "Aborted" -> False, "TestResults" -> 
         Association[2 -> TestResultObject[
             Association[
             "TestIndex" -> 2, "TestID" -> "Spins > test00a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00011`2.1919076829902147, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010699999999985721`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 3 -> TestResultObject[
             Association[
             "TestIndex" -> 3, "TestID" -> "Spins > test00b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000089`2.099905004476902, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008800000000519503, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 4 -> TestResultObject[
             Association[
             "TestIndex" -> 4, "TestID" -> "Spins > test00c", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.1047575072713167, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008899999999911756, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 5 -> TestResultObject[
             Association[
             "TestIndex" -> 5, "TestID" -> "Spins > test01a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000091`2.1095563901530854, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008900000000267028, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 6 -> TestResultObject[
             Association[
             "TestIndex" -> 6, "TestID" -> "Spins > test01b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000088`2.0949976699821606, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008699999999706165, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 7 -> TestResultObject[
             Association[
             "TestIndex" -> 7, "TestID" -> "Spins > test01c", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.1047575072713163, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008800000000164232, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 8 -> TestResultObject[
             Association[
             "TestIndex" -> 8, "TestID" -> "Spins > test01d", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000108`2.1839387533189414, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00010799999999733245`, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 9 -> TestResultObject[
             Association[
             "TestIndex" -> 9, "TestID" -> "Spins > test02a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000091`2.1095563901530854, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008899999999911756, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 10 -> TestResultObject[
             Association[
             "TestIndex" -> 10, "TestID" -> "Spins > test02b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000152`2.332358585776762, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0001370000000022742, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 11 -> TestResultObject[
             Association[
             "TestIndex" -> 11, "TestID" -> "Spins > test03a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.00009`2.104757507271319, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008899999999911756, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 12 -> TestResultObject[
             Association[
             "TestIndex" -> 12, "TestID" -> "Spins > test03b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000091`2.1095563901530854, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008899999999556485, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 13 -> TestResultObject[
             Association[
             "TestIndex" -> 13, "TestID" -> "Spins > test03c", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000088`2.09499766998216, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.0000859999999960337, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 14 -> TestResultObject[
             Association[
             "TestIndex" -> 14, "TestID" -> "Spins > test04a", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000087`2.0900342504506084, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008699999999706165, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]], 15 -> TestResultObject[
             Association[
             "TestIndex" -> 15, "TestID" -> "Spins > test04b", "Outcome" -> 
              "Success", "Input" -> HoldForm[True], "ExpectedOutput" -> 
              HoldForm[True], "ActualOutput" -> HoldForm[True], 
              "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
              "AbsoluteTimeUsed" -> 
              Quantity[0.000091`2.1095563901530876, "Seconds"], "CPUTimeUsed" -> 
              Quantity[0.00008900000000267028, "Seconds"], "MemoryUsed" -> 
              Quantity[48, "Bytes"]]]], 
         "TestsSucceededIndices" -> {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
          14, 15}, "TestsFailedIndices" -> {}, 
         "TestsFailedWrongResultsIndices" -> {}, 
         "TestsFailedWithMessagesIndices" -> {}, 
         "TestsFailedWithErrorsIndices" -> {}]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.661470722417647*^9, 3.66147918435612*^9, 
  3.661532663394189*^9, 3.6615344318326693`*^9, 3.661534580284011*^9, 
  3.6615359671576033`*^9, 3.6615361924939737`*^9, 3.66153622908307*^9, 
  3.661536471669261*^9, 3.661537159097395*^9, 3.6615377171990423`*^9, 
  3.6615401726024437`*^9, 3.661542377949746*^9, 3.661599483227991*^9, 
  3.68285190519596*^9, 3.682860496662904*^9, 3.682860716425064*^9, 
  3.682861596524255*^9, 3.682861796649197*^9, 3.836676215914925*^9}],

Cell[BoxData[
 StyleBox["\<\"Total test run = 109\"\>",
  StripOnInput->False,
  FontSize->18,
  FontWeight->Bold,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.6614707224445267`*^9, 3.661479184380262*^9, 
  3.6615326634108877`*^9, 3.661534431850305*^9, 3.6615345803017178`*^9, 
  3.661535967184895*^9, 3.6615361925157547`*^9, 3.661536229105257*^9, 
  3.661536471686837*^9, 3.661537153581953*^9, 3.661537711888056*^9, 
  3.661540172618968*^9, 3.661542377968463*^9, 3.661599483258068*^9, 
  3.682851905220077*^9, 3.682860496693389*^9, 3.682860716445059*^9, 
  3.6828615965463676`*^9, 3.682861796672621*^9, 3.836676215945286*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Single spin: Taking repeated commutators", "Section",
 CellChangeTimes->{{3.6615992412243643`*^9, 3.6615992640686407`*^9}}],

Cell["Create a  single-spin system to play with.", "Text",
 CellChangeTimes->{{3.661268509659028*^9, 3.6612685346131*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<UniDyn`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "H", ",", "Ix", ",", " ", "Iy", ",", " ", "Iz", ",", "\[CapitalDelta]", ",",
    "\[Omega]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"{", 
    RowBox[{"\[CapitalDelta]", ",", "\[Omega]"}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SpinSingle$CreateOperators", "[", 
   RowBox[{"Ix", ",", " ", "Iy", ",", " ", "Iz"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.661209723717368*^9, 3.661209781037619*^9}, {
  3.661209830458013*^9, 3.661209884242929*^9}, {3.6612099236667957`*^9, 
  3.661209945634691*^9}, {3.6612105356033173`*^9, 3.66121054655971*^9}, {
  3.661210693381155*^9, 3.661210703790155*^9}, {3.661210750490106*^9, 
  3.661210763528246*^9}, {3.661211264597097*^9, 3.6612112665302753`*^9}, {
  3.661211551837948*^9, 3.661211598420218*^9}, {3.661211727699301*^9, 
  3.661211734299876*^9}, {3.6612126056876993`*^9, 3.661212605841806*^9}, {
  3.661213289440082*^9, 3.661213292682469*^9}, {3.661472121218009*^9, 
  3.661472127467431*^9}, {3.6614732226012573`*^9, 3.661473226009387*^9}, {
  3.661599753513829*^9, 3.66159975380103*^9}},
 FontSize->16],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators","create","\"Creating spin operators.\"",2,17,
   11,29813474310506387603,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.661470731696002*^9, {3.661473226827879*^9, 3.6614732413574743`*^9}, 
   3.6614733653533897`*^9, 3.661479190802512*^9, {3.661532671097946*^9, 
   3.661532701734028*^9}, 3.661534438258952*^9, 3.661534587024744*^9, 
   3.661535974370524*^9, 3.6615361993293753`*^9, 3.6615362359561853`*^9, 
   3.661536478543803*^9, 3.661537166092059*^9, 3.661537724176804*^9, 
   3.661540179639825*^9, 3.661542387818375*^9, 3.661599483941996*^9, {
   3.661599757967067*^9, 3.661599762625066*^9}, 3.6828519054306498`*^9, 
   3.682860496924384*^9, 3.6828607165773783`*^9, 3.682861596587351*^9, 
   3.682861796748444*^9, 3.8366762289941187`*^9}],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators","comm",
   "\"Adding spin commutations relations.\"",2,17,12,29813474310506387603,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.661470731696002*^9, {3.661473226827879*^9, 3.6614732413574743`*^9}, 
   3.6614733653533897`*^9, 3.661479190802512*^9, {3.661532671097946*^9, 
   3.661532701734028*^9}, 3.661534438258952*^9, 3.661534587024744*^9, 
   3.661535974370524*^9, 3.6615361993293753`*^9, 3.6615362359561853`*^9, 
   3.661536478543803*^9, 3.661537166092059*^9, 3.661537724176804*^9, 
   3.661540179639825*^9, 3.661542387818375*^9, 3.661599483941996*^9, {
   3.661599757967067*^9, 3.661599762625066*^9}, 3.6828519054306498`*^9, 
   3.682860496924384*^9, 3.6828607165773783`*^9, 3.682861596587351*^9, 
   3.682861796748444*^9, 3.836676229034235*^9}],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators","nosimplify",
   "\"No angular momentum L defined.\"",2,17,13,29813474310506387603,"Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.661470731696002*^9, {3.661473226827879*^9, 3.6614732413574743`*^9}, 
   3.6614733653533897`*^9, 3.661479190802512*^9, {3.661532671097946*^9, 
   3.661532701734028*^9}, 3.661534438258952*^9, 3.661534587024744*^9, 
   3.661535974370524*^9, 3.6615361993293753`*^9, 3.6615362359561853`*^9, 
   3.661536478543803*^9, 3.661537166092059*^9, 3.661537724176804*^9, 
   3.661540179639825*^9, 3.661542387818375*^9, 3.661599483941996*^9, {
   3.661599757967067*^9, 3.661599762625066*^9}, 3.6828519054306498`*^9, 
   3.682860496924384*^9, 3.6828607165773783`*^9, 3.682861596587351*^9, 
   3.682861796748444*^9, 3.8366762290736322`*^9}]
}, Open  ]],

Cell["Define a Hamiltonian", "Text",
 CellChangeTimes->{{3.661599281144273*^9, 3.661599289244596*^9}},
 FontSize->18],

Cell[BoxData[
 RowBox[{
  RowBox[{"H", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", " ", "Iz"}], " ", "+", " ", 
    RowBox[{"\[Omega]", " ", "Ix"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.661599299803336*^9, 3.661599305960333*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell["Repeated commutators", "Subsection",
 CellChangeTimes->{{3.661599685100058*^9, 3.6615996923128147`*^9}}],

Cell[TextData[{
 "Define a function to take ",
 StyleBox["n",
  FontSlant->"Italic"],
 " commutators of an operator ",
 StyleBox["Op",
  FontSlant->"Italic"],
 " with the -i times the Hamiltonian ",
 StyleBox["H",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.6615993113406057`*^9, 3.661599347492508*^9}},
 FontSize->18],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "RepeatedComm", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RepeatedComm", "[", 
    RowBox[{"1", ",", "H_", ",", "Op_"}], "]"}], " ", ":=", "  ", 
   RowBox[{"List", "[", "Op", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RepeatedComm", "[", 
    RowBox[{"n_", ",", "H_", ",", "Op_"}], "]"}], " ", ":=", "  ", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"RepeatedComm", "[", 
      RowBox[{
       RowBox[{"n", "-", "1"}], ",", "H", ",", "Op"}], "]"}], ",", 
     RowBox[{
      RowBox[{"-", "I"}], " ", 
      RowBox[{"Comm", "[", 
       RowBox[{"H", ",", 
        RowBox[{
         RowBox[{"RepeatedComm", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", "H", ",", "Op"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.661212641100292*^9, 3.661212767076599*^9}, {
  3.6612128063190527`*^9, 3.6612128825633593`*^9}, {3.661212919216586*^9, 
  3.661212939855138*^9}, {3.661212982178464*^9, 3.661213025278123*^9}, {
  3.6612130737536497`*^9, 3.661213151209804*^9}, {3.66121319869022*^9, 
  3.6612132063347263`*^9}},
 FontSize->16],

Cell["Example calculation of repeated commutators", "Text",
 CellChangeTimes->{{3.6615993686319523`*^9, 3.66159937714777*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"RepeatedComm", "[", 
      RowBox[{"5", ",", "H", ",", "Iz"}], "]"}], " ", "//", " ", "Expand"}], 
    " ", "//", " ", "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Sigma]", " ", "//", " ", "MatrixForm"}]}], "Input",
 FontSize->16],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Ix"}], " ", "\[CapitalDelta]"}], "+", 
          RowBox[{"Iz", " ", "\[Omega]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}], ")"}]}]},
      {
       RowBox[{"Iy", " ", "\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}], ")"}]}]},
      {
       RowBox[{"\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Ix", " ", "\[CapitalDelta]"}], "-", 
          RowBox[{"Iz", " ", "\[Omega]"}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"-", "Iy"}], " ", "\[Omega]"}]},
      {"Iz"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.66159938411355*^9, 3.6615994846077003`*^9, 
  3.6615997635683327`*^9, 3.68285190556966*^9, 3.6828604970924263`*^9, 
  3.682860716697659*^9, 3.6828615967202272`*^9, 3.682861796855742*^9, 
  3.836676229458321*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evolution", "Subsection",
 CellChangeTimes->{{3.6615996956735153`*^9, 3.661599699524911*^9}}],

Cell[TextData[{
 "Use the Evolver function to calculate the evolution of the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "x"], TraditionalForm]]],
 " operator under the off-resonance Zeeman Hamiltonian."
}], "Text",
 CellChangeTimes->{{3.66147272233392*^9, 3.6614727570869102`*^9}, {
   3.6614727958845654`*^9, 3.661472872662071*^9}, {3.661473131854478*^9, 
   3.661473138759437*^9}, 3.6614733335244417`*^9, {3.6615993982390747`*^9, 
   3.661599469119955*^9}, {3.6615996560801477`*^9, 3.661599657964798*^9}, {
   3.661599702534917*^9, 3.6615997089029007`*^9}},
 FontSize->18],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalDelta]", " ", "\[Element]", "Reals"}], ",", 
     RowBox[{"\[CapitalDelta]", " ", ">", " ", "0"}], ",", " ", 
     RowBox[{"\[Omega]", " ", "\[Element]", "Reals"}], ",", " ", 
     RowBox[{"\[Omega]", ">=", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Rho]", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"ExpToTrig", "[", 
       RowBox[{"Evolver", "[", 
        RowBox[{"H", ",", "t", ",", "Ix"}], "]"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"Ix", ",", "Iy", ",", "Iz"}], "}"}], ",", "Simplify"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6614726049703293`*^9, 3.661472606627006*^9}, {
  3.661472660162282*^9, 3.6614727211706247`*^9}, {3.661472858979467*^9, 
  3.66147291870306*^9}, {3.661473067543955*^9, 3.6614731530575647`*^9}, {
  3.661599416817731*^9, 3.661599417596442*^9}, {3.6615995568730087`*^9, 
  3.6615996382419167`*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Ix", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], "+", 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "+", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox["\[CapitalDelta]", "2"], "+", 
    SuperscriptBox["\[Omega]", "2"]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", "Iz", " ", "\[CapitalDelta]", " ", "\[Omega]", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", "t", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[CapitalDelta]", "2"], "+", 
         SuperscriptBox["\[Omega]", "2"]}]]}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox["\[CapitalDelta]", "2"], "+", 
    SuperscriptBox["\[Omega]", "2"]}]], "+", 
  FractionBox[
   RowBox[{"Iy", " ", "\[CapitalDelta]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"t", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[CapitalDelta]", "2"], "+", 
     SuperscriptBox["\[Omega]", "2"]}]]]}]], "Output",
 CellChangeTimes->{
  3.6615995612094717`*^9, {3.661599591285344*^9, 3.661599639387163*^9}, 
   3.661599764230302*^9, 3.6828519060776367`*^9, 3.682860497552389*^9, 
   3.682860717136703*^9, 3.682861597114459*^9, 3.6828617972493477`*^9, 
   3.83667622985785*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantum optics", "Section",
 CellChangeTimes->{{3.661599727498398*^9, 3.661599733336445*^9}}],

Cell[CellGroupData[{

Cell["Operators", "Subsection",
 CellChangeTimes->{{3.66159987182402*^9, 3.661599876507362*^9}},
 FontSize->24],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<UniDyn`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "H", ",", "Ix", ",", " ", "Iy", ",", " ", "Iz", ",", "\[CapitalDelta]", ",",
    "\[Omega]", ",", " ", "g", ",", " ", "F", ",", " ", "aL", ",", "aR", ",", 
   "Q$sym", ",", " ", "P$sym", ",", " ", "Q", ",", "P", ",", "QP$rules"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"{", 
    RowBox[{
    "\[CapitalDelta]", ",", "\[Omega]", ",", "\[CapitalDelta]\[Omega]", ",", 
     "g", ",", " ", "F", ",", "\[Phi]"}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CreateOperator", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ix", ",", " ", "Iy", ",", " ", "Iz"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"aL", ",", "aR"}], "}"}]}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SpinSingle$CreateOperators", "[", 
   RowBox[{"Ix", ",", " ", "Iy", ",", " ", "Iz", ",", " ", 
    RowBox[{"1", "/", "2"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OscSingle$CreateOperators", "[", 
    RowBox[{"aL", ",", "aR"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q$sym", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"aR", "+", "aL"}], ")"}], "/", 
    RowBox[{"Sqrt", "[", "2", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P$sym", " ", "=", 
   RowBox[{"I", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"aR", "-", "aL"}], ")"}], "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QP$rules", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"aR", " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Q", " ", "-", " ", 
         RowBox[{"I", " ", "P"}]}], ")"}], "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}]}], ",", " ", 
     RowBox[{"aL", " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Q", " ", "+", " ", 
         RowBox[{"I", " ", "P"}]}], ")"}], "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQve5LGb+J+2tHXZOFYiCae8U5GRAtfKxdGUSnhJVq
gGl/E20QneD3uQREq74MLAPROUZrOkD0Z4+fnWB63fl+sPrnBRNBdLa08AUQ
zfIjAExXXPj1GUTnFp39CaLXJHzjNAXS02ac5ALRixi3lYNo4Q+7wLS6qN5Z
EH3y2lQw/e6nmv4WIG309R2YbrC9vANEP/Nx2AmirVgiGj4B6fXTGvpAtJLn
zzUg+k43z3oQva5x414QfWVSyj4QvcH91XkQfWki7yUQnWL//iaIrtVf+BhE
P/I+9ApEK/SJvQfRbFe/fwHRxs7830D0vkUeYp+BdNKt+eIg+pNFqCyIfrGp
DUzPXKO9HkSHzLwEpnfXpn2vL3jtKG99GUwDAAcQx/E=
  "],
 FontSize->16],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators","nocreate","\"Spin operators already exist.\"",
   2,30,14,29813474310506387603,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.6615997768521233`*^9, 3.661599796428073*^9}, 
   3.661599827919055*^9, 3.6615998611201982`*^9, 3.66160012144375*^9, 
   3.661600246675536*^9, 3.6616002770961447`*^9, {3.661600384545188*^9, 
   3.66160040191814*^9}, {3.661600538596599*^9, 3.6616005417500257`*^9}, 
   3.6616006467360973`*^9, 3.66160068952705*^9, 3.661601005186863*^9, 
   3.661601526245742*^9, 3.6616021797482977`*^9, 3.6828519061147223`*^9, 
   3.6828604976082277`*^9, 3.6828607171824493`*^9, 3.682860991230378*^9, 
   3.682861516176228*^9, 3.682861597138839*^9, 3.68286179727414*^9, 
   3.836676240413369*^9}],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators","comm",
   "\"Adding spin commutations relations.\"",2,30,15,29813474310506387603,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.6615997768521233`*^9, 3.661599796428073*^9}, 
   3.661599827919055*^9, 3.6615998611201982`*^9, 3.66160012144375*^9, 
   3.661600246675536*^9, 3.6616002770961447`*^9, {3.661600384545188*^9, 
   3.66160040191814*^9}, {3.661600538596599*^9, 3.6616005417500257`*^9}, 
   3.6616006467360973`*^9, 3.66160068952705*^9, 3.661601005186863*^9, 
   3.661601526245742*^9, 3.6616021797482977`*^9, 3.6828519061147223`*^9, 
   3.6828604976082277`*^9, 3.6828607171824493`*^9, 3.682860991230378*^9, 
   3.682861516176228*^9, 3.682861597138839*^9, 3.68286179727414*^9, 
   3.836676240455411*^9}],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators","simplify",
   "\"Angular momentum L = 1/2. Adding operator simplification rules.\"",2,30,
   16,29813474310506387603,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.6615997768521233`*^9, 3.661599796428073*^9}, 
   3.661599827919055*^9, 3.6615998611201982`*^9, 3.66160012144375*^9, 
   3.661600246675536*^9, 3.6616002770961447`*^9, {3.661600384545188*^9, 
   3.66160040191814*^9}, {3.661600538596599*^9, 3.6616005417500257`*^9}, 
   3.6616006467360973`*^9, 3.66160068952705*^9, 3.661601005186863*^9, 
   3.661601526245742*^9, 3.6616021797482977`*^9, 3.6828519061147223`*^9, 
   3.6828604976082277`*^9, 3.6828607171824493`*^9, 3.682860991230378*^9, 
   3.682861516176228*^9, 3.682861597138839*^9, 3.68286179727414*^9, 
   3.8366762404789963`*^9}],

Cell[BoxData[
 TemplateBox[{
  "OscSingle$CreateOperators","nocreate",
   "\"Oscillator operators already exist.\"",2,31,17,29813474310506387603,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.6615997768521233`*^9, 3.661599796428073*^9}, 
   3.661599827919055*^9, 3.6615998611201982`*^9, 3.66160012144375*^9, 
   3.661600246675536*^9, 3.6616002770961447`*^9, {3.661600384545188*^9, 
   3.66160040191814*^9}, {3.661600538596599*^9, 3.6616005417500257`*^9}, 
   3.6616006467360973`*^9, 3.66160068952705*^9, 3.661601005186863*^9, 
   3.661601526245742*^9, 3.6616021797482977`*^9, 3.6828519061147223`*^9, 
   3.6828604976082277`*^9, 3.6828607171824493`*^9, 3.682860991230378*^9, 
   3.682861516176228*^9, 3.682861597138839*^9, 3.68286179727414*^9, 
   3.836676240507196*^9}],

Cell[BoxData[
 TemplateBox[{
  "OscSingle$CreateOperators","comm",
   "\"Adding oscillator commutations relations.\"",2,31,18,
   29813474310506387603,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.6615997768521233`*^9, 3.661599796428073*^9}, 
   3.661599827919055*^9, 3.6615998611201982`*^9, 3.66160012144375*^9, 
   3.661600246675536*^9, 3.6616002770961447`*^9, {3.661600384545188*^9, 
   3.66160040191814*^9}, {3.661600538596599*^9, 3.6616005417500257`*^9}, 
   3.6616006467360973`*^9, 3.66160068952705*^9, 3.661601005186863*^9, 
   3.661601526245742*^9, 3.6616021797482977`*^9, 3.6828519061147223`*^9, 
   3.6828604976082277`*^9, 3.6828607171824493`*^9, 3.682860991230378*^9, 
   3.682861516176228*^9, 3.682861597138839*^9, 3.68286179727414*^9, 
   3.8366762405311213`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Q$sym", " ", "/.", " ", "QP$rules"}], " ", "//", " ", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P$sym", " ", "/.", " ", "QP$rules"}], " ", "//", " ", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.682860938059808*^9, 3.6828609575341873`*^9}},
 FontSize->16],

Cell[BoxData["Q"], "Output",
 CellChangeTimes->{{3.6828609406195993`*^9, 3.682860957997595*^9}, {
   3.6828609930187063`*^9, 3.682861007672043*^9}, 3.682861517989829*^9, 
   3.682861597249576*^9, 3.6828617973676558`*^9, 3.8366762407134733`*^9},
 FontSize->16],

Cell[BoxData["P"], "Output",
 CellChangeTimes->{{3.6828609406195993`*^9, 3.682860957997595*^9}, {
   3.6828609930187063`*^9, 3.682861007672043*^9}, 3.682861517989829*^9, 
   3.682861597249576*^9, 3.6828617973676558`*^9, 3.836676240729076*^9},
 FontSize->16]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hamiltonians", "Subsection",
 CellChangeTimes->{{3.6615998667071342`*^9, 3.661599884226001*^9}, 
   3.661601417076589*^9},
 FontSize->24],

Cell[CellGroupData[{

Cell["Free evolution", "Subsubsection",
 CellChangeTimes->{{3.6616014374360332`*^9, 3.661601442085188*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"\[Omega]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[Omega]", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$0", " ", "=", " ", 
   RowBox[{
    FractionBox["\[Omega]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"aR", "**", "aL"}], " ", "+", " ", 
      RowBox[{"aL", "**", "aR"}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599989586681*^9}, {
  3.661600801286552*^9, 3.661600807763794*^9}, {3.6616014623905563`*^9, 
  3.6616014681434603`*^9}, {3.661602151408037*^9, 3.661602151876782*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Evolver", "[", 
    RowBox[{"H$0", ",", "t", ",", "Q$sym"}], "]"}], "  ", "/.", " ", 
   "QP$rules"}], "]"}]], "Input",
 CellChangeTimes->{{3.6615999979301577`*^9, 3.661600052902892*^9}, {
  3.661600252980455*^9, 3.6616003005713778`*^9}, {3.661600331228952*^9, 
  3.6616003753055487`*^9}, {3.661600425748569*^9, 3.6616004460721083`*^9}, {
  3.661600561499104*^9, 3.661600577381302*^9}, {3.661600638480967*^9, 
  3.661600666015003*^9}, {3.661600701280002*^9, 3.6616007310693493`*^9}, {
  3.661601465126539*^9, 3.66160147977136*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  RowBox[{"Q", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"t", " ", "\[Omega]"}], "]"}]}], "-", 
  RowBox[{"P", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"t", " ", "\[Omega]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.661600376064962*^9, {3.661600426843581*^9, 3.66160044692731*^9}, {
   3.661600567841215*^9, 3.66160057816276*^9}, {3.661600643374647*^9, 
   3.6616006677359037`*^9}, {3.661600698704836*^9, 3.661600731836134*^9}, 
   3.6616015274701843`*^9, 3.661602183557083*^9, 3.661602503908524*^9, 
   3.6828519066941977`*^9, 3.6828604981175003`*^9, 3.6828607177263117`*^9, {
   3.68286157872759*^9, 3.682861597688429*^9}, 3.682861797767411*^9, 
   3.836676241304038*^9},
 FontSize->16]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Position or momentum kick", "Subsubsection",
 CellChangeTimes->{{3.682860588363377*^9, 3.682860595142614*^9}, {
  3.682860754542385*^9, 3.682860756985935*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Delta]x", ",", "\[Delta]p"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"\[Delta]x", ",", " ", "Reals"}], "]"}], ",", 
     RowBox[{"Element", "[", 
      RowBox[{"\[Delta]p", ",", " ", "Reals"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$0$x$kick", " ", "=", " ", 
   RowBox[{"\[Delta]x", " ", "P$sym"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$0$p$kick", " ", "=", " ", 
   RowBox[{"\[Delta]p", " ", "Q$sym"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.682860602373087*^9, 3.6828606886124907`*^9}, {
  3.6828607412552156`*^9, 3.682860783850297*^9}, {3.6828608502780323`*^9, 
  3.6828609082849617`*^9}, {3.682861014319292*^9, 3.682861025296002*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Evolver", "[", 
     RowBox[{"H$0$x$kick", " ", ",", "t", ",", "Q$sym"}], "]"}], "  ", "/.", 
    " ", 
    RowBox[{"QP$rules", " ", "~", "Join", "~", " ", 
     RowBox[{"{", 
      RowBox[{"t", "\[Rule]", " ", "1"}], "}"}]}]}], "]"}], "  ", "//", " ", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Evolver", "[", 
     RowBox[{"H$0$p$kick", " ", ",", "t", ",", "P$sym"}], "]"}], "  ", "/.", 
    " ", 
    RowBox[{"QP$rules", " ", "~", "Join", "~", " ", 
     RowBox[{"{", 
      RowBox[{"t", "\[Rule]", " ", "1"}], "}"}]}]}], "]"}], "  ", "//", " ", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.682860694277486*^9, 3.682860700189041*^9}, {
  3.6828607877223043`*^9, 3.682860856687479*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{"Q", "-", "\[Delta]x"}]], "Output",
 CellChangeTimes->{{3.6828607011285877`*^9, 3.682860717825715*^9}, 
   3.682860748017318*^9, {3.682860809881761*^9, 3.682860826895647*^9}, {
   3.682860858932296*^9, 3.6828609104825687`*^9}, {3.6828610116017857`*^9, 
   3.6828610270359163`*^9}, {3.6828615787867107`*^9, 3.6828615978124113`*^9}, 
   3.682861797864156*^9, 3.836676241425955*^9},
 FontSize->16],

Cell[BoxData[
 RowBox[{"P", "+", "\[Delta]p"}]], "Output",
 CellChangeTimes->{{3.6828607011285877`*^9, 3.682860717825715*^9}, 
   3.682860748017318*^9, {3.682860809881761*^9, 3.682860826895647*^9}, {
   3.682860858932296*^9, 3.6828609104825687`*^9}, {3.6828610116017857`*^9, 
   3.6828610270359163`*^9}, {3.6828615787867107`*^9, 3.6828615978124113`*^9}, 
   3.682861797864156*^9, 3.83667624144023*^9},
 FontSize->16]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Phase Kick", "Subsubsection",
 CellChangeTimes->{{3.6616014374360332`*^9, 3.661601442085188*^9}, {
  3.661602158368636*^9, 3.6616021598723507`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"\[Omega]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[Omega]", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$0$phase$kick", " ", "=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"(", 
      RowBox[{"\[Omega]", "+", "\[CapitalDelta]\[Omega]"}], ")"}], "2"], " ", 
    
    RowBox[{"(", 
     RowBox[{
      RowBox[{"aR", "**", "aL"}], " ", "+", " ", 
      RowBox[{"aL", "**", "aR"}]}], ")"}]}]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599989586681*^9}, {
  3.661600801286552*^9, 3.661600807763794*^9}, {3.6616014623905563`*^9, 
  3.6616014681434603`*^9}, {3.661602151408037*^9, 3.661602214021371*^9}, {
  3.661602491512672*^9, 3.661602492367771*^9}, {3.6828606400056334`*^9, 
  3.682860643777688*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Evolver", "[", 
      RowBox[{"H$0$phase$kick", ",", "t", ",", "Q$sym"}], "]"}], "  ", "/.", 
     " ", "QP$rules"}], "]"}], " ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{"\[CapitalDelta]\[Omega]", "\[Rule]", " ", 
     RowBox[{"\[CapitalDelta]\[Phi]", "/", "t"}]}], "}"}]}], " ", "//", " ", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.6615999979301577`*^9, 3.661600052902892*^9}, {
  3.661600252980455*^9, 3.6616003005713778`*^9}, {3.661600331228952*^9, 
  3.6616003753055487`*^9}, {3.661600425748569*^9, 3.6616004460721083`*^9}, {
  3.661600561499104*^9, 3.661600577381302*^9}, {3.661600638480967*^9, 
  3.661600666015003*^9}, {3.661600701280002*^9, 3.6616007310693493`*^9}, {
  3.661601465126539*^9, 3.66160147977136*^9}, {3.6616022234776773`*^9, 
  3.661602260916905*^9}, {3.661602496981515*^9, 3.661602497788101*^9}, {
  3.6828606480883417`*^9, 3.682860649632365*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  RowBox[{"Q", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[CapitalDelta]\[Phi]", "+", 
     RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], "-", 
  RowBox[{"P", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[CapitalDelta]\[Phi]", "+", 
     RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.661600376064962*^9, {3.661600426843581*^9, 3.66160044692731*^9}, {
   3.661600567841215*^9, 3.66160057816276*^9}, {3.661600643374647*^9, 
   3.6616006677359037`*^9}, {3.661600698704836*^9, 3.661600731836134*^9}, 
   3.6616015274701843`*^9, 3.6616021840186167`*^9, 3.6616022191381903`*^9, {
   3.6616022558467607`*^9, 3.661602262348469*^9}, {3.661602499638403*^9, 
   3.6616025048683853`*^9}, 3.682851907815606*^9, 3.6828604990126743`*^9, 
   3.682860650825396*^9, 3.6828607187728977`*^9, {3.682861578859144*^9, 
   3.6828615988174343`*^9}, 3.682861798703857*^9, 3.836676242485388*^9},
 FontSize->16]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Force ", "Subsubsection",
 CellChangeTimes->{{3.661601509513736*^9, 3.661601517167842*^9}, {
  3.661601685086095*^9, 3.6616016856139593`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"F", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"F", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$1", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", " ", "F"}], " ", "Q$sym"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599989586681*^9}, {
  3.661600801286552*^9, 3.661600807763794*^9}, {3.661600966070225*^9, 
  3.661601010459141*^9}, {3.661601621266842*^9, 3.661601648932316*^9}, {
  3.682861688695294*^9, 3.682861758265929*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Evolver", "[", 
    RowBox[{"H$1", ",", "t", ",", "Q$sym"}], "]"}], " ", "/.", " ", 
   "QP$rules"}], " ", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Evolver", "[", 
    RowBox[{"H$1", ",", "t", ",", "P$sym"}], "]"}], " ", "/.", " ", 
   "QP$rules"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6615999979301577`*^9, 3.661600052902892*^9}, {
  3.661600252980455*^9, 3.6616003005713778`*^9}, {3.661600331228952*^9, 
  3.6616003753055487`*^9}, {3.661600425748569*^9, 3.6616004460721083`*^9}, {
  3.661600561499104*^9, 3.661600577381302*^9}, {3.661600638480967*^9, 
  3.661600666015003*^9}, {3.661600701280002*^9, 3.6616007310693493`*^9}, {
  3.661601025010738*^9, 3.6616010520976973`*^9}, {3.66160156137223*^9, 
  3.661601567965077*^9}, {3.66160169077514*^9, 3.661601690909215*^9}, {
  3.682861636522544*^9, 3.682861637763401*^9}, {3.682861709435505*^9, 
  3.682861711471403*^9}, {3.682861764480056*^9, 3.682861784985497*^9}, {
  3.682861846394918*^9, 3.682861862295977*^9}, {3.682861922558144*^9, 
  3.682861922952827*^9}},
 FontSize->16],

Cell[BoxData["Q"], "Output",
 CellChangeTimes->{
  3.661600376064962*^9, {3.661600426843581*^9, 3.66160044692731*^9}, {
   3.661600567841215*^9, 3.66160057816276*^9}, {3.661600643374647*^9, 
   3.6616006677359037`*^9}, {3.661600698704836*^9, 3.661600731836134*^9}, {
   3.6616010484626513`*^9, 3.6616010618633747`*^9}, 3.6616015385193167`*^9, 
   3.6616015689219103`*^9, {3.6616016294550962`*^9, 3.661601652197709*^9}, 
   3.661601691539207*^9, 3.6616021841194553`*^9, 3.661602350590143*^9, 
   3.661602505026248*^9, 3.6828519079221478`*^9, 3.68286049913379*^9, 
   3.682860718851204*^9, {3.682861578905405*^9, 3.682861598900725*^9}, {
   3.6828616487690983`*^9, 3.682861733899745*^9}, 3.682861798764843*^9, 
   3.6828619034474077`*^9, {3.6828619514686813`*^9, 3.682861957007148*^9}, 
   3.836676242610971*^9},
 FontSize->16],

Cell[BoxData[
 RowBox[{"P", "-", 
  RowBox[{"F", " ", "t"}]}]], "Output",
 CellChangeTimes->{
  3.661600376064962*^9, {3.661600426843581*^9, 3.66160044692731*^9}, {
   3.661600567841215*^9, 3.66160057816276*^9}, {3.661600643374647*^9, 
   3.6616006677359037`*^9}, {3.661600698704836*^9, 3.661600731836134*^9}, {
   3.6616010484626513`*^9, 3.6616010618633747`*^9}, 3.6616015385193167`*^9, 
   3.6616015689219103`*^9, {3.6616016294550962`*^9, 3.661601652197709*^9}, 
   3.661601691539207*^9, 3.6616021841194553`*^9, 3.661602350590143*^9, 
   3.661602505026248*^9, 3.6828519079221478`*^9, 3.68286049913379*^9, 
   3.682860718851204*^9, {3.682861578905405*^9, 3.682861598900725*^9}, {
   3.6828616487690983`*^9, 3.682861733899745*^9}, 3.682861798764843*^9, 
   3.6828619034474077`*^9, {3.6828619514686813`*^9, 3.682861957007148*^9}, 
   3.836676242643265*^9},
 FontSize->16]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{"Evolver", "[", 
   RowBox[{"H$1", ",", "t", ",", "aR"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"Evolver", "[", 
   RowBox[{"H$1", ",", "t", ",", "aL"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6828619659969263`*^9, 3.682861968297961*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{"aR", "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "F", " ", "t"}], 
   SqrtBox["2"]]}]], "Output",
 CellChangeTimes->{{3.682861957126622*^9, 3.68286196884212*^9}, 
   3.836676242708151*^9}],

Cell[BoxData[
 RowBox[{"aL", "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "F", " ", "t"}], 
   SqrtBox["2"]]}]], "Output",
 CellChangeTimes->{{3.682861957126622*^9, 3.68286196884212*^9}, 
   3.8366762427179403`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Squeezing", "Subsubsection",
 CellChangeTimes->{{3.661601484143311*^9, 3.661601489493829*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"\[CapitalDelta]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[CapitalDelta]", " ", ">", " ", "0"}], ",", " ", 
     RowBox[{"Element", "[", 
      RowBox[{"\[Omega]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[Omega]", " ", ">", " ", "0"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599983983083*^9}, {
  3.66160078782301*^9, 3.661600795025132*^9}, {3.661600826867373*^9, 
  3.6616008381735077`*^9}, {3.661603544609684*^9, 3.6616035787360067`*^9}, {
  3.6616036156599503`*^9, 3.661603619612896*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Evolver", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[CapitalDelta]", "2"]}], " ", "I", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"aR", "**", "aR"}], " ", "-", " ", 
          RowBox[{"aL", "**", "aL"}]}], ")"}]}], ",", "t", ",", "#"}], "]"}], 
     "  ", "/.", " ", "QP$rules"}], "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"Q$sym", ",", " ", "P$sym"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6616038851683683`*^9, 3.661603946848551*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"t", " ", "\[CapitalDelta]"}]], " ", "Q"}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "t"}], " ", "\[CapitalDelta]"}]], " ", "P"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.661603896686514*^9, 3.6616039476747227`*^9}, 
   3.682851908296933*^9, 3.6828604995403557`*^9, 3.6828607191935053`*^9, {
   3.682861578972477*^9, 3.6828615992656927`*^9}, 3.682861799203569*^9, 
   3.836676243159493*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Evolver", "[", 
      RowBox[{
       RowBox[{
        FractionBox["\[CapitalDelta]", "2"], " ", "I", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"aR", "**", "aR"}], " ", "-", " ", 
          RowBox[{"aL", "**", "aL"}]}], ")"}]}], ",", "t", ",", "#"}], "]"}], 
     "  ", "/.", " ", "QP$rules"}], "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"Q$sym", ",", " ", "P$sym"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6616007406826563`*^9, 3.6616007508623447`*^9}, {
  3.6616008463686867`*^9, 3.661600863540935*^9}, {3.661602942624221*^9, 
  3.661602943210248*^9}, {3.661603589595882*^9, 3.661603793454712*^9}, {
  3.661603959052683*^9, 3.66160396075235*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "t"}], " ", "\[CapitalDelta]"}]], " ", "Q"}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"t", " ", "\[CapitalDelta]"}]], " ", "P"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.66160369963689*^9, 3.661603794264834*^9}, 
   3.661603962100545*^9, 3.682851908574813*^9, 3.682860499800934*^9, 
   3.682860719461383*^9, {3.68286157901229*^9, 3.6828615995153017`*^9}, 
   3.682861799455964*^9, 3.83667624341029*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{"ExpToTrig", "[", 
      RowBox[{
       RowBox[{"Evolver", "[", 
        RowBox[{
         RowBox[{
          FractionBox["\[CapitalDelta]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"aR", "**", "aR"}], " ", "+", " ", 
            RowBox[{"aL", "**", "aL"}]}], ")"}]}], ",", "t", ",", "#"}], 
        "]"}], "  ", "/.", " ", "QP$rules"}], "]"}], "]"}], "]"}], "&"}], " ",
   "/@", " ", 
  RowBox[{"{", 
   RowBox[{"Q$sym", ",", " ", "P$sym"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6616038251199303`*^9, 3.661603864590372*^9}, {
  3.661603970006435*^9, 3.661603993355975*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Q", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}], "+", 
    RowBox[{"P", " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"P", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}], "+", 
    RowBox[{"Q", " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.661603833222344*^9, 3.661603865179731*^9}, 
   3.661603994345737*^9, 3.682851908760969*^9, 3.6828604999552317`*^9, 
   3.682860719662142*^9, {3.682861579062324*^9, 3.6828615997022867`*^9}, 
   3.68286179962737*^9, 3.836676243584896*^9}]
}, Open  ]],

Cell["\<\
Let's remind ourselves what the hyperbolic functions look like\
\>", "Text",
 CellChangeTimes->{{3.661603457102549*^9, 3.661603493792601*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cosh", "[", "T", "]"}], ",", 
     RowBox[{"Sinh", "[", "T", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.661603424774187*^9, 3.661603455277131*^9}},
 FontSize->16],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJw12Hc8V9//AHAZyUxSQmRlb1JEr0go2ckoiYw+VpIZ2QktSYVkl1G2MsLh
jbytbImoVEJ5v6+sNw3f0+Px+/11H8/H4zzuPfeec17jijhdtHChp6Oj495E
R/fvqgA75zY2qOhP4ZqefxkNLq6Jxa2tU1HC4GB5ZDENyiqVJRaXqei5lH/d
7SIaqEgZO01/x54iZRTl0WD/tpix7rdU5GQQVT6bQoPDnxc6U0upqHvJjhoT
SQOL6z3PVB2oiBpxy0jRkgaBvTFebo0UdOzGwRumtFUYGmKba3acR6ZaqTm2
B1dBsOkiz/7dP9CSVoHAk+QVeOHRyrR1Yg5N7Mnn2b6+DOduKhPvomaRTbTz
PY4zy0BLColDMIMyBPK/OfcvQS7nJF/Kp2nUtD/LPkRvCdKPK/sOxn9F34mP
svYtixDl6RgkfewL8g8VWli2WIQQhqJA3/kppM82wpv76Sc4RvSKjxR8QmlL
Q3ovwn/C/YavKenuH1GR58zHHxI/oe6DFPtz0UnktPFGNvbNAohxHdY9mTGO
LhuPBttEL0CFTJz71OdRRO4jq5ZqLMCHtnJhdfURpMQp0yezRsBXufsq6OUg
+j6x8me8hYBtYYXqCpv6kZdDq4X3XQJiX0qRuVb70NZ3N8ObEglYp+TbLv7o
Q8dWdHdux55yeBpaM9qHMjpdI2tvE1Chk0vSLetDxQd4TNhuEmDB9NjE2qEP
ib0+1kCKJUCST6SHLqQXKSm0D0eEEiCnTpV7stiN/N/Ns2v8R4CrQnh47UQ3
6tG210+9QECmxNaBnvZuNNH/d33NjQBuXsXAlUfdqP9923C9KwGrq97NBnrd
6NfdT2aGzgSQailWc8ldqGHByDbAgQAbbUqYononKiu8dU/hFAFJ+8L6jwh3
otTqEJkMKwK65DnFbVg7EdWXQ4sT+5CQQkfEZAea42brpVoSILbhtX0gtgPV
F6xV1pgTQGmaz/d7S0bMoUwBjsYEROvN99UGtSPl3oxGzqP4+YY/TNXOt6Mn
/L3rd/QIoDP+/qbEuB1ZdNY934YdajXbnSvajuy2vby08wgBAa5fybe6XyPX
He/C9+oQcCFuoslR+DWiSyMV2moTcKK7p4yF3Ip8NB1286sTkNDXrRhT0Yoc
fcxZivYRQB7qKvmb3oqyDtzz0MQ+OtHxfPFSK9L8QrtzRg2/D6WtYEKgFS0J
LVs/VSFAiasxq/xiC4p4tfHJVJGAHSdLEm15SWjicETHuhReP4kbdUcZSOgC
+fLHTGyzNbcvytRm1EqVtz+KnZAhcoC1vRmxHZi/fleSgL8zyR/qAprRuwXb
HAUJAqavhijsHmlCArabZ0PECPA2vZvSII1QWzNdqZMQAQVLx3/c34TQtELB
FR7sqVTGw97vGlF2/+Cz14IEnPoS+E0ovhFt5y47JIcNwWfVI2YakFiUgcRv
AQK4cmWHdPPrEbe7xa8SPjzflbatZPE6ZFptX3ZuBwG3i3JIh9ZqkcYxlkI+
bI+z4f4vemrRXHH7rkEeAsRfHxjPCahFBh1+9gbYD+4/e3qVXIOO/7YO2bed
gCtqd7VVPauRpO4NZqlteD4zXkTh4WqUnRPgM8NFgGr68VzhHdWop8vKrBD7
BwMjC2fjSySrMOMnh312MGBoZutLtHtexvzAVgJ0fc94ZFRWIeSVfdKVgwAh
CQ2hHXFViKdzWVYB+9e7Hf03zlShZivRKyvsBFTp9KoHM1Uh0Vt/rsRhS2zT
pT9pXYm8NBM5K9gIYC2TTGX5VY42d/SGCLAS8GT8663ZmBIUMPnC2YCZgLHQ
nZmPVUvQncsib4SxOYUMysynipF86kbG+ma8384VDNRCMepq3BpYiq3/1Z03
Yf0ZOizmQieEPUOhZsn4FKID9vyBnEwE7E4UrpgUKkTc0jrWFEa8H5TNW5J6
CpCMdXfGG+yayxVf12UKUEshu3MidjzNT6br61NkdmFP+y5sGfr1So/TeWh+
+BtFiwF/n1yZtj2secgzcl1PDDtJ7/TIYE0uUvvtQs+KvR5bTzu4Mxfxj+hV
jtLj88kWrs3en41c5rjmr2DTFZeaNIVnI+Ge0avO2GomHx38FLLRQOmSvwl2
eqJO1PsbWYhySCJdDHtUZstt21sZ6HWaY9PAJgIOe/1X1jz3GFVG1t1A2AWl
nQPSho/RHzjf+Bw7WO0W7zp9OnrrkGMbh81/iDs7LSgVTSR0uulhR0VcbqEf
SUH5Qfe91LC/k4a+uqumoG+vno+JY9cbPJQ5SHmATlU2zm3GtjffXTV+PhmF
sLlO9dLh/bK4rOHfeg/5knMcW7BDH/Qizr330NmX4nrV2OnjUV0603fR+PqK
Sha2XNgZ83H9u8iKpA/3sV8Jq7/1y09EyeljJQnYVV0Dbab9t1HRtZ7qAOwh
rtj+qKRbKH+XnLkX9qKVxsQLy5uo5nWPsTO2ysfMJYGReDTy4J2PJbb5Xks6
04dxyNDsyEMjbB/3zexRNtfRQ0uqsB526ZKn2MxYDGKL5Dirjv1GQ1hRID0a
DVqFb1PCpoQNaprYR6GGDhUpGWyO1lj9SKFIJFQjmSOObcPtl3cBhaPKv/bh
e7Afpo+9eqNzFWVeHUb82CMSOoNqrVeQN+/t8zuxecrz59L0gxBP+XV3bmzL
g5z0mzr80Q9l0hAndlKbH5+b0WVUG62dw4bdZzqu1NPjg54krQ1swRaqik50
zfJEusYrrpuxH5HNkMoTN3QjT/UsI/auCUHK30In9OlGeQ09tuznYY0H9qcR
x9rFgE3YEuw+DxXczNHhL94P6bAjhqSGBFq0EY9hicA/y22dcGeSF4frIgoM
/zyyEJXJRTMEBh+K8T8TppI/L/qeAut91F//HHJPv9ND7RzU+Stx/Hve37Dg
R5mKLtC1vyKS4d/93Z97Dsq4Q1KMny0TNsOpD9rMEhch1C0wmRm7RTj++mMu
XzhHqVNhxY55IOqz/7YfhEqDGge2Pnu9TT9bIPjJMqZyYTNHWel4xAeDNQur
Iw82eZUizcQcCiljZjd3YSd4xXFnxoTBztpRfkHspwuJV3dHRsD25mx2UWw3
NxnXl3+jIK9zlU8e21A00C5aOwbIXNf2qWJLTbSYmIVeg3iWk1Ua2HMW9vvn
1q5D8MvqcQPsTo4i2eoD8eBHOhFjiv2MvLInJjAB8pXEE62xPQ8lbhFavgnN
f9L6L2Abr73/Pad6GyraNZl9sRWqpBeqfe/AQodgVgg2LfnTDylaInxwK/l1
B7uWNWSY5H8PlsU22TVgZ8nvGCwVTQYNKVJtJ3asWWlfem8yLOvZ3B7FPvng
c1eA9ANgd2B6sPxvfUROkGQmUuDNT+89+/D5fKs3jXgTUuFhxJe9+tiNbhEN
jPvT4NszlWxr7BvFVTWTiY9g6b3dSgi2hIZgaZJeBuj4zPJ3YrOfqX4evpAB
F9NUyJPYi2HmRZ4ZmRBYbzO3iH1uimQhFpoFd04eurUHxyMFqVXjP8PZ8CE2
wjgUu6PSQa88Pg/aLgfXGOH4p9Um1yL5MQ/8az5VumGXjazpZKg/gTvSKuIx
2A/W7sGNz0+gb+D2+UZsZyBrumjnwyLZxP4AjrcbnUrKfAuFsHaxTFsXx2/f
939K7xgUwfwuxjgX7On5ToXNGUVgF2RiEI/dzeUit3j8GUxe6hIfwE47lSrZ
k/ccthdHn/4P54N9U5uEIm1K4b7o55pinE8U6qwXlApLQTN2NmAYWyKpuPXj
WimQZMfT/mCzZT/fl2VcBn0HY3hMtxDw28zm/QalDPjWWHpXsCfKSqWRcgV4
RPQ52uL8NZZut53XrgJs5LaEX8ceiWP64x1VARraWvQvsd+cO90nNFgBWooZ
mjw4/zVyMQeG+VXCVyP3y8PYmT5nW7Wrq4DwU93sgfNp+hmWkvsfqqA0pTk6
EzvFsOrhPPMLeN/t4DaEnSjM6vHY5gVwFPWfA058/vpebPuz9gIaMsp28+N8
7ajE4VCvVQ3H12/XTuF8Lka8WtMk1YLLLOVuE64XQnuOxCzN1wK3iYA5M64v
Roq6OEv46mDU2ynOBDvBZVxM5FIdPNp/zGESmxhbN2YWfgUFlMoSBl48/zaN
nMGr9f/Wd9gZ1y92j6qPe2ogqN3ws4rE9VBVEAzvdUFQb3Rk91tszlPtDh8S
ETil+Z+W30NAM9dbP4sZBAmWXEfGsXmOhJimGzVBxjWXai0RHG9q0oKj1pug
9ueQ+k5xAo7lvusxsSHB/r6yXDEZPJ9rJa5tXiR4W9mcG4udciF642A0Cd5U
KO6aw56Rl1eWLiFBzD6FsxWyBMTVRCQzMLYA+QKjg6E8jic9kqdrSlughS9V
PUGJAAOa/4wIcxuwqslZuOzH9acxN8Pyi3b4cI/uR7A+rsccWRbWOtphQHZT
0AL2qD/dh78T7ZBoRf3vPwMC3DModVs2k+GkYFa4nSEeT+303X2KDF90nvrq
HMfj70ZPHVkhwz6Fz8GiJnj8yFJzknonyAveF1XG9fwdh7cRStXd4D9YmxiJ
+4PYH1ow3d0NYRO7V4Vw/xAWnPPn0VQ3uOhajtRje9/zusLM2QN9x09srOF+
w6SdwW/SGduO+ivYE39vRSW3m9xvQJiZKS/xEp7P3zjjGa9eaB+N7NuF+5V2
E0EOM+5+qJnuKbmfRMC8yI6wgbRB0HxddaqkmQB/P1nHOztHgC9Qt8BhBceX
91wWruRR+MjoZ7aovgDngrW+MZ8Yh46xkx2HrixAi+z+hBamScgRNdSn61oA
CZb6mTzDj1A55uY/IfgTBOs9jjLFfYK9Cu+CNAJ+At06faHv1BTMtViyqkz+
hFXzhrNte7+As7BiK5PBIoyrOQjsjfkKW09vOWTSvAg+1lzbRN9Pg9XfZPEz
ukvAl/zFhlFwBuZOTd39TVqCktNZ+YtBs1CnHrhQbL0M1trhhuSGOWj35Jk7
/30Zys96iWr+/g6bs5jHSDErQGM9wlBrNQ+uB5aSmPatgkX/QXXBFAoUxZd6
MX1eBdaDbM31jymwuGxUIja9Cs15Y0ZncimgunX4me7sKigFBTs+KqHA7N+t
k1HUVeDcU32Tr40CQTsnRNh/r0KHp8rnHT8pOB7Fa+nuwP37FulEzhNUQMdY
vLQNaUC7ROMvMadCsOWVkMtGNCgdb39ibE2Fje+0Y0UmNBAqdX1104kKhE+M
JL8VDX5b5U2zBlPB+tnjb/RONKjO3aPN/JQKHz1Vk2ghNPDmoLY/fYbvb3G5
WDOcBhKBjRb65VTw5rVLuBpFg+Tj9heu1VOBwSk6nimeBr4LafcYBqlQfmJX
ltADGsicdhfKHaXClKlTl2sqDT61ahTqTlJBlle0tjSdBmYpo42Rs1TIGXF/
fySXBlvoC46JUKkg1ifJfecpDZBH4FDTEhVcEkms44U0CBjWdzi3TgV+SavX
ksU0+L//IfD//0P+B9GTqS8=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwtlFlQkwcUhVmKUDZxl7IJCoNKBQVxquJFLVaUKIlSqCibigygWFyApu5B
oqIg4IgU1wQlLknBrUDghq0JSgYhGIhBlkACiUl+8lMUGSylMz6cOXMev/Pw
ucal0PabGBkZUabyfy+DuZrJSQL1efFPb4tJTPm8kPl5nECKQpCCTST++XS5
x8gogYzSZ/d6Gklc4UmJU30g8ETTtGTXGhJXzWC8a+4g0IXKufCQS2Jgv+HV
DR6B3Lu58rYcEmlZ4ke+0QSq+U3edBqJaS2Mgwdq9MhcG0lzlxmwvd1KUxur
w1vnj/1k3TmMToKU2asctShuE1nZdxP4PKnBbPp7Df51yUErcNVjTPbyYdlZ
Na60YLM+hWhxLI/ORBhCfuToGk+WBlm23faFfSr8YhMgf9A3hMVblqdKLijR
ik0ffOI7iGeTY9MXBw+gYP0+qdVjJdJNH6al6hTobBVk+Gg9gLGnWxZJS/vw
dVpUouSqAq9VKwuLE3sxr8iPut+9Dyt7PK0fu3WjWaVSq93QgwvtAjfsvCXH
CZHlewm9C8uXMBMV/Z1oZ1xypDJThj2NZQv8/aVYNXzC04YjRaXXtRX4QoIB
WXesiWntOOMkx3+ZcStuM1qbV+DXil7+hFfJSDN2nNg6aOQrxnM/6t5UpAvx
+uHggaNFQpyzk5v7y7w6DHUw1Yg86rD8Y+N00aJKvNtcI0zyqcQSufKymsFF
Ufhjn4sXuLiH6vhMvrcAGfTbJn77CrDCkv627lg+/K1KvDH9eD6sVBg7n4ng
gci7g83Yw4OFw1WfV9dVAEbsGNktroBglky8LaIOJlzu9MQn1EEQZabp6HMh
RIcrZlV1CiEnuuO0z8tmuDk7WWk82gzCbU42oTNbIZJ9EmmbWkHnOudkW5EE
9iUcSuSqJXDs6NLYnLlSuKKiBP2eJYWOLjtavKgTWMu8u9wTZBCTsXbQPEQO
r19ZFEpdu6B+6aqL9WbdcGWXt77erQc8vuUPsTf3gup6Jkf5by848ZOCzJh9
IAuMWqdNUoDRuAknVaEAcVnE6i+T/fCJWh3V6D4AyQu283adUYLcL9rBnaEE
p1qHXo7XIBwOt5vh1qWCgVl+lOp3Q2BfMBDxjdMQlOcqos2Pa4AbeefBSLoa
5OXhr2pBC+EBpzaLqjUQzS4tkn3UQVnUQbfVEx+ggftk1LSMgDHLjaYVYTpw
PuAnCG0ZBlrrGn+nQj3w7scUn+MbwHKNVS3/ph4mW8dTXwgMUMt+t3U3Sw+X
zn94q24wgE96RuwfXD2M7w1bTxMbwNblZbZ9ox5yW3Rli7sN0JS8on8OqYcj
3J/njUwaINBica5tCAHM4vnvhzeSMPbr2HdcKgEzd3ufWrmZBJ5cWEIJJ+BA
3euy30JIcObFV2XHTe0cx6ZpYSRMhLFVlhkElKS/qXePJ+ElyyXA/D4BXlw3
81NMEg7ZEML7jwhIzTpc25xNgkdaDW3TFOdziLN1uEpCwZY9CZl8AiwyKmIq
bpCQaijKN5UQ0AYGzcRDEpZEJjqzOgkIdJu/bjuPhL6GHzgbuglILBtZdO8p
CaGFnTVn1ATszKdyg/kkWJiUBrsSBHwfOp96S0ACJqW1C/6Z+vWyI3OkgYTj
bzdFx4wT4Hv59I7gJhK++gu++gv+A1hLo6A=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 1}, {-1.1752011306609194`, 1.5430805868478494`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.661603443468926*^9, 3.661603449072255*^9}, 
   3.6828519089965754`*^9, 3.682860500161415*^9, 3.6828607197060204`*^9, {
   3.682861579107472*^9, 3.682861599735804*^9}, 3.682861799666389*^9, 
   3.836676244258029*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"ExpToTrig", "[", 
       RowBox[{
        RowBox[{"Evolver", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox["\[Omega]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"aR", "**", "aL"}], " ", "+", " ", 
              RowBox[{"aL", "**", "aR"}]}], ")"}]}], "-", 
           RowBox[{
            FractionBox["\[CapitalDelta]", "2"], " ", "I", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"aR", "**", "aR"}], " ", "-", " ", 
              RowBox[{"aL", "**", "aL"}]}], ")"}]}]}], ",", "t", ",", "#"}], 
         "]"}], "  ", "/.", " ", "QP$rules"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Q", ",", "P"}], "}"}]}], "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"Q$sym", ",", " ", "P$sym"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6616007406826563`*^9, 3.6616007508623447`*^9}, {
   3.6616008463686867`*^9, 3.661600913052218*^9}, {3.661602359732606*^9, 
   3.661602475878283*^9}, {3.661602521111289*^9, 3.661602558018815*^9}, {
   3.661602619035358*^9, 3.661602633379653*^9}, 3.661602980534584*^9, {
   3.661604027321581*^9, 3.661604067830595*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"P", " ", "\[Omega]", " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"t", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "-", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "-", 
        SuperscriptBox["\[Omega]", "2"]}]]]}], "+", 
    FractionBox[
     RowBox[{"Q", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "-", 
           SuperscriptBox["\[Omega]", "2"]}]], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[CapitalDelta]", "2"], "-", 
             SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], "+", 
        RowBox[{"\[CapitalDelta]", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[CapitalDelta]", "2"], "-", 
             SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}]}], ")"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "-", 
       SuperscriptBox["\[Omega]", "2"]}]]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"Q", " ", "\[Omega]", " ", 
      RowBox[{"Sinh", "[", 
       RowBox[{"t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "-", 
          SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "-", 
       SuperscriptBox["\[Omega]", "2"]}]]], "+", 
    FractionBox[
     RowBox[{"P", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "-", 
           SuperscriptBox["\[Omega]", "2"]}]], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[CapitalDelta]", "2"], "-", 
             SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], "-", 
        RowBox[{"\[CapitalDelta]", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[CapitalDelta]", "2"], "-", 
             SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}]}], ")"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "-", 
       SuperscriptBox["\[Omega]", "2"]}]]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.661602380236158*^9, 3.661602447324978*^9}, {
   3.661602477997684*^9, 3.661602559382513*^9}, 3.661602634276566*^9, {
   3.6616029734159317`*^9, 3.661602981462379*^9}, 3.6616040071201143`*^9, {
   3.6616040554574623`*^9, 3.661604070622085*^9}, 3.6828519104576473`*^9, 
   3.682860501345872*^9, 3.6828607208483267`*^9, {3.682861579139751*^9, 
   3.68286160083195*^9}, 3.68286180084659*^9, 3.836676245293192*^9},
 FontSize->16]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Another quantum optics example", "Section",
 CellChangeTimes->{{3.836676278620495*^9, 3.836676285785801*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<UniDyn`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Lambda]", ",", "t", ",", " ", "Ix", ",", " ", "Iy", ",", " ", "Iz", ",",
     "I$m", ",", " ", "I$p", ",", "aL", ",", "aR", ",", " ", "H"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "t"}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CreateOperator", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ix", ",", " ", "Iy", ",", " ", "Iz", ",", "I$m", ",", "I$p"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"aL", ",", "aR"}], "}"}]}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OscSingle$CreateOperators", "[", 
   RowBox[{"aL", ",", "aR"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdyk0og3EAx/HRkpfJYZkD2tBYLVbbRLRYDogMmdxobSKWJW+pZRy8pGir
iZM4aIdne5C8ZolSDl7aEHIZwkbIZvMo8fz+h2+fyzdD11VviOZwOEI26Ar1
JSnLX9S5ygUBTHCcpEH+4VgW1Df2SogapRS21AR7oNhf1wc75dQ4DFYwE0TX
6TT5n0xW2JHKP4Pc71riwNlPEBq7jxlItYTj8llnZo/i4WLUej/kf2wTc5Lz
juHRpZ34xmTL1ljlX29Ei8q7CR+rS7dgEbfJ8slKz1imYGYlQ8HbSR4NXcMr
u/DcpnfD5fLAKfRYEz1QX/J+Dc2yhXt4V7UfgKIpwTuMuYiEoKIsKQzdixWC
IKvuZj4FfhZq0+Hz6ihxjpLSsGHOQ9wxt0aGTC9qYbGXGBlh0nz2V7U2ECuE
vPa/TEgnp4uh36srgBtLDuKeSDEIf1UlxHrKZ4O25lE7lDgNTlj3bSQePGjO
Ydu0+Qr+A51hCW8=
  "],
 FontSize->16],

Cell[BoxData[
 TemplateBox[{
  "OscSingle$CreateOperators","nocreate",
   "\"Oscillator operators already exist.\"",2,200,92,29813474310506387603,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.836676377695684*^9, 3.836676397579143*^9}, 
   3.8366765421099987`*^9, 3.8366770748458033`*^9, {3.8366772766322117`*^9, 
   3.8366772929020357`*^9}, 3.836677339149886*^9, 3.836677486586904*^9, {
   3.836677818551963*^9, 3.836677828406592*^9}, 3.8366796392192097`*^9}],

Cell[BoxData[
 TemplateBox[{
  "OscSingle$CreateOperators","comm",
   "\"Adding oscillator commutations relations.\"",2,200,93,
   29813474310506387603,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.836676377695684*^9, 3.836676397579143*^9}, 
   3.8366765421099987`*^9, 3.8366770748458033`*^9, {3.8366772766322117`*^9, 
   3.8366772929020357`*^9}, 3.836677339149886*^9, 3.836677486586904*^9, {
   3.836677818551963*^9, 3.836677828406592*^9}, 3.836679639261704*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"I$p", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"I$p", ",", "I$m"}], "]"}], "=", 
   RowBox[{"2", " ", "Iz"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"I$p", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"I$p", ",", "Iz"}], "]"}], "=", 
   RowBox[{"-", "I$p"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$m", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"I$m", ",", "I$p"}], "]"}], "=", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "Iz"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"I$m", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"I$m", ",", "Iz"}], "]"}], "=", "I$m"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Iz", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"Iz", ",", "I$p"}], "]"}], "=", "I$p"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Iz", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"Iz", ",", "I$m"}], "]"}], "=", 
   RowBox[{"-", "I$m"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8366774989243097`*^9, 3.83667749925176*^9}, {
  3.836677559362499*^9, 3.8366776213838663`*^9}, {3.8366777728844557`*^9, 
  3.836677789961767*^9}, {3.83667783078938*^9, 3.836677960774514*^9}, {
  3.8366780124640627`*^9, 3.836678026117797*^9}, {3.836678096600881*^9, 
  3.8366781021921167`*^9}},
 FontSize->16],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Iz", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "Iz", ",", "Iz", ",", "b___"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a", ",", "b"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$p", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "I$p", ",", "I$p", ",", "b___"}], "]"}], ":=", "0"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I$m", "/:", 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a___", ",", "I$m", ",", "I$m", ",", "b___"}], "]"}], ":=", 
    "0"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$p", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "I$p", ",", "Iz", ",", "b___"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", " ", 
     FractionBox["1", "2"]}], 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a", ",", "I$p", ",", "b"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I$p", "/:", 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a___", ",", "I$p", ",", "I$m", ",", "b___"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}], "+", 
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"a", ",", "Iz", ",", "b"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$m", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "I$m", ",", "Iz", ",", "b___"}], "]"}], ":=", " ", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a", ",", "I$m", ",", "b"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I$m", "/:", 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a___", ",", "I$m", ",", "I$p", ",", "b___"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}], "-", 
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"a", ",", "Iz", ",", "b"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$z", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "I$z", ",", "Ip", ",", "b___"}], "]"}], ":=", "  ", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a", ",", "I$p", ",", "b"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$z", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "I$z", ",", "I$m", ",", "b___"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a", ",", "I$m", ",", "b"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.836678223740842*^9, 3.83667824021528*^9}, {
   3.8366793286094112`*^9, 3.836679617748658*^9}, 3.836679674230486*^9},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", " ", "=", " ", 
   RowBox[{"\[Lambda]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"I$p", "**", "aL"}], "+", 
      RowBox[{"I$m", "**", "aR"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Comm", "[", 
  RowBox[{
   RowBox[{"I", " ", "H"}], ",", "aL"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8366801945311832`*^9, 3.836680260688924*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[ImaginaryI]"}], " ", "I$m", " ", "\[Lambda]"}]], "Output",
 CellChangeTimes->{{3.836680210494046*^9, 3.8366802622154827`*^9}},
 FontSize->16]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Comm", "[", 
  RowBox[{
   RowBox[{"I", " ", "H"}], ",", 
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{"I", " ", "H"}], ",", "aL"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.836680263211213*^9, 3.836680278955698*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["\[Lambda]", "2"], " ", 
  RowBox[{"Iz", "**", "aL"}]}]], "Output",
 CellChangeTimes->{{3.836680275574112*^9, 3.8366802793846197`*^9}},
 FontSize->16]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Comm", "[", 
  RowBox[{
   RowBox[{"I", " ", "H"}], ",", " ", "aR"}], "]"}]], "Input",
 CellChangeTimes->{{3.836694703371355*^9, 3.8366947128340282`*^9}}],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", "I$p", " ", "\[Lambda]"}]], "Output",
 CellChangeTimes->{3.8366947134105473`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Comm", "[", 
  RowBox[{
   RowBox[{"I", " ", "H"}], ",", 
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{"I", " ", "H"}], ",", "aR"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.836694655842784*^9}],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["\[Lambda]", "2"], " ", 
  RowBox[{"Iz", "**", "aR"}]}]], "Output",
 CellChangeTimes->{3.836694656400078*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{
    RowBox[{"I", " ", "H"}], ",", 
    RowBox[{"Comm", "[", 
     RowBox[{
      RowBox[{"I", " ", "H"}], ",", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"I", " ", "H"}], ",", "aL"}], "]"}]}], "]"}]}], "]"}], "  ", "//",
   " ", "Simplify"}]], "Input",
 CellChangeTimes->{{3.836680293145762*^9, 3.8366803437969112`*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[ImaginaryI]"}], " ", 
  SuperscriptBox["\[Lambda]", "3"], " ", 
  RowBox[{"(", 
   RowBox[{"I$m", "-", 
    RowBox[{"2", " ", 
     RowBox[{"I$m", "**", "aL", "**", "aR"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"I$p", "**", "aL", "**", "aL"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.836680306060295*^9, 3.836680374092651*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{
    RowBox[{"I", " ", "H"}], ",", " ", 
    RowBox[{"Comm", "[", 
     RowBox[{
      RowBox[{"I", " ", "H"}], ",", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"I", " ", "H"}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"I", " ", "H"}], ",", "aL"}], "]"}]}], "]"}]}], "]"}]}], 
   " ", "]"}], " ", "//", " ", "Simplify", " "}]], "Input",
 CellChangeTimes->{{3.836680349847651*^9, 3.836680360897409*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[Lambda]", "4"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"3", " ", "aL"}], "-", 
    RowBox[{"4", " ", 
     RowBox[{"Iz", "**", "aL"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"Iz", "**", "aL", "**", "aL", "**", "aR"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"Iz", "**", "aL", "**", "aR", "**", "aL"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.836680368959243*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Evolver", "[", 
  RowBox[{
   RowBox[{"\[Lambda]", " ", "Iz"}], ",", "t", ",", "I$p"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Evolver", "[", 
  RowBox[{
   RowBox[{"\[Lambda]", " ", "Iz"}], ",", "t", ",", "I$m"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.836678046010539*^9, 3.83667808469143*^9}, {
  3.836678118978841*^9, 3.836678120390438*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Lambda]"}]], " ", 
  "I$p"}]], "Output",
 CellChangeTimes->{{3.836678069229344*^9, 3.8366781210042553`*^9}, 
   3.836678255910529*^9, 3.8366796395233803`*^9, 3.83667967811913*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Lambda]"}]], " ", 
  "I$m"}]], "Output",
 CellChangeTimes->{{3.836678069229344*^9, 3.8366781210042553`*^9}, 
   3.836678255910529*^9, 3.8366796395233803`*^9, 3.836679678205516*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evolver", "[", 
   RowBox[{
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"I$p", "**", "aL"}], "+", 
       RowBox[{"I$m", "**", "aR"}]}], ")"}]}], ",", "t", ",", "aL"}], "]"}], 
  " ", "//", " ", "Simplify"}]], "Input",
 CellChangeTimes->{{3.8366781435408993`*^9, 3.8366781720361767`*^9}, {
  3.8366796919248123`*^9, 3.836679694601782*^9}},
 FontSize->16],

Cell[BoxData[
 TemplateBox[{
  "Evolver","unsolvable","\"Unrecognized evolution\"",2,231,97,
   29813474310506387603,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.836678173343528*^9, 3.83667825784004*^9, 3.836679639981099*^9, {
   3.8366796811629553`*^9, 3.836679695236924*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"aL", ",", 
   RowBox[{"\[ImaginaryI]", " ", "I$m", " ", "\[Lambda]"}], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[Lambda]", "2"], " ", 
    RowBox[{"Iz", "**", "aL"}]}], ",", 
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[Lambda]", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"I$m", "-", 
      RowBox[{"2", " ", 
       RowBox[{"I$m", "**", "aL", "**", "aR"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"I$p", "**", "aL", "**", "aL"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[Lambda]", "4"]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "aL"}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL", "**", "aL", "**", "aR"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL", "**", "aR", "**", "aL"}]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.836678173356738*^9, 3.836678257871814*^9, 3.8366796400133057`*^9, {
   3.8366796812002697`*^9, 3.83667969526368*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evolver", "[", 
   RowBox[{
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"(", 
      RowBox[{"I$m", "**", "aR"}], ")"}]}], ",", "t", ",", "aL"}], "]"}], " ",
   "//", " ", "Simplify"}]], "Input",
 CellChangeTimes->{3.836682235871724*^9}],

Cell[BoxData[
 RowBox[{"aL", "+", 
  RowBox[{
  "\[ImaginaryI]", " ", "I$m", " ", "t", " ", "\[Lambda]"}]}]], "Output",
 CellChangeTimes->{3.836682239136174*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evolver", "[", 
   RowBox[{
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"I$p", "**", "aL"}], "+", 
       RowBox[{"I$m", "**", "aR"}]}], ")"}]}], ",", "t", ",", 
    RowBox[{"(", 
     RowBox[{"aL", " ", "-", " ", "aR"}], ")"}]}], "]"}], " ", "//", " ", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.836695794938993*^9, 3.836695800856147*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Evolver","unsolvable","\"Unrecognized evolution\"",2,260,99,
   29813474310506387603,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.836695802454815*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"aL", "-", "aR"}], ",", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{"I$m", "+", "I$p"}], ")"}], " ", "\[Lambda]"}], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[Lambda]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Iz", "**", "aL"}], "-", 
      RowBox[{"Iz", "**", "aR"}]}], ")"}]}], ",", 
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[Lambda]", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"I$m", "-", "I$p", "-", 
      RowBox[{"2", " ", 
       RowBox[{"I$m", "**", "aL", "**", "aR"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"I$m", "**", "aR", "**", "aR"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"I$p", "**", "aL", "**", "aL"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"I$p", "**", "aR", "**", "aL"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[Lambda]", "4"]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "aL"}], "-", 
      RowBox[{"3", " ", "aR"}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL"}]}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aR"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL", "**", "aL", "**", "aR"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL", "**", "aR", "**", "aL"}]}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aR", "**", "aL", "**", "aR"}]}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aR", "**", "aR", "**", "aL"}]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8366958024675703`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Failing cases", "Section",
 CellChangeTimes->{{3.661604273535866*^9, 3.6616042801731567`*^9}}],

Cell[CellGroupData[{

Cell["Off-resonance evolution of Iz is touchy", "Subsubsection",
 CellChangeTimes->{{3.682853897109785*^9, 3.682853924034186*^9}}],

Cell["\<\
This Evolution broke in upgrading from Mathematica 10 to 11.  Figure out why.\
\
\>", "Text",
 CellChangeTimes->{{3.682853925069911*^9, 3.6828539480419188`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "Ix$sym", ",", " ", "Iy$sym", ",", " ", "Iz$sym", ",", " ", "Sx$sym", ",", 
   " ", "Sy$sym", ",", " ", "Sz$sym", ",", " ", "\[Omega]", ",", " ", "d$sym",
    ",", " ", "\[CapitalDelta]", ",", " ", "rho$sym", ",", " ", "t$sym"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "A", ",", " ", "r", ",", " ", "lhs$list", ",", " ", "rhs$list", ",", " ", 
    "time", ",", " ", "eqns", ",", " ", "system", ",", " ", "rho$calc", ",", 
    " ", "rho$known", ",", " ", "X"}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"\[Omega]", ",", " ", "d$sym", ",", " ", "\[CapitalDelta]"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CreateOperator", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ix$sym", ",", " ", "Iy$sym", ",", " ", "Iz$sym"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"Sx$sym", ",", " ", "Sy$sym", ",", " ", "Sz$sym"}], "}"}]}], 
    "}"}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"SpinSingle$CreateOperators", "[", 
   RowBox[{"Ix$sym", ",", " ", "Iy$sym", ",", " ", "Iz$sym", ",", " ", 
    RowBox[{"L", "=", 
     RowBox[{"1", "/", "2"}]}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SpinSingle$CreateOperators", "[", 
   RowBox[{"Sx$sym", ",", " ", "Sy$sym", ",", " ", "Sz$sym", ",", " ", 
    RowBox[{"L", "=", 
     RowBox[{"1", "/", "2"}]}]}], "]"}], ";"}]}], "Input"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators","nocreate","\"Spin operators already exist.\"",
   2,1031,83,28805397995740573242,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.682853965104638*^9, 3.682854304160749*^9, 
  3.6828605014188547`*^9, 3.682860720889642*^9, 3.682861600871541*^9, 
  3.682861800920054*^9}],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators","comm",
   "\"Adding spin commutations relations.\"",2,1031,84,28805397995740573242,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.682853965104638*^9, 3.682854304160749*^9, 
  3.6828605014188547`*^9, 3.682860720889642*^9, 3.682861600871541*^9, 
  3.682861800922523*^9}],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators","simplify",
   "\"Angular momentum L = 1/2. Adding operator simplification rules.\"",2,
   1031,85,28805397995740573242,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.682853965104638*^9, 3.682854304160749*^9, 
  3.6828605014188547`*^9, 3.682860720889642*^9, 3.682861600871541*^9, 
  3.682861800924404*^9}],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators","nocreate","\"Spin operators already exist.\"",
   2,1032,86,28805397995740573242,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.682853965104638*^9, 3.682854304160749*^9, 
  3.6828605014188547`*^9, 3.682860720889642*^9, 3.682861600871541*^9, 
  3.682861800926125*^9}],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators","comm",
   "\"Adding spin commutations relations.\"",2,1032,87,28805397995740573242,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.682853965104638*^9, 3.682854304160749*^9, 
  3.6828605014188547`*^9, 3.682860720889642*^9, 3.682861600871541*^9, 
  3.682861800927806*^9}],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators","simplify",
   "\"Angular momentum L = 1/2. Adding operator simplification rules.\"",2,
   1032,88,28805397995740573242,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.682853965104638*^9, 3.682854304160749*^9, 
  3.6828605014188547`*^9, 3.682860720889642*^9, 3.682861600871541*^9, 
  3.682861800929523*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rho$known", " ", "=", " ", 
    RowBox[{"Collect", "[", "\n", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"constant1", " ", "Iz$sym"}], " ", "+", " ", 
        RowBox[{"constant2", " ", "Ix$sym"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"constant3", " ", "Iz$sym"}], " ", "-", " ", 
           RowBox[{"constant2", " ", "Ix$sym"}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"omega$eff", " ", "t$sym"}], "]"}]}], " ", "-", " ", 
        RowBox[{"constant4", " ", "Iy$sym", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"omega$eff", " ", "t$sym"}], "]"}]}]}], " ", "//", " ", 
       "\n", "    ", "Expand"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Ix$sym", ",", " ", "Iy$sym", ",", " ", "Iz$sym"}], "}"}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rho$calc", " ", "=", " ", 
    RowBox[{"Collect", "[", "\n", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"Evolver", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[CapitalDelta]", " ", "Iz$sym"}], " ", "+", " ", 
          RowBox[{"\[Omega]", " ", "Ix$sym"}]}], " ", ",", " ", "t$sym", ",", 
         " ", "Iz$sym", ",", " ", 
         RowBox[{"quiet", " ", "->", " ", "True"}]}], "]"}], " ", "//", " ", 
       "FullSimplify"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Ix$sym", ",", " ", "Iy$sym", ",", " ", "Iz$sym"}], "}"}], ",",
       "Expand"}], "]"}]}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.6828539971267843`*^9, 3.682854142716613*^9}, {
  3.682854234186981*^9, 3.6828542652062473`*^9}, {3.682854330660592*^9, 
  3.6828543329939013`*^9}, {3.682854708606367*^9, 3.682854727712431*^9}}],

Cell[CellGroupData[{

Cell[BoxData["rho$known"], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ix$sym", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"\[CapitalDelta]", " ", "\[Omega]"}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]], "-", 
     FractionBox[
      RowBox[{"\[CapitalDelta]", " ", "\[Omega]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t$sym", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "+", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]}], ")"}]}], "+", 
  RowBox[{"Iz$sym", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[CapitalDelta]", "2"], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Omega]", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t$sym", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "+", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{"Iy$sym", " ", "\[Omega]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"t$sym", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[CapitalDelta]", "2"], "+", 
     SuperscriptBox["\[Omega]", "2"]}]]]}]], "Output",
 CellChangeTimes->{{3.6828542855384903`*^9, 3.682854309037294*^9}, 
   3.6828547322708073`*^9, 3.6828605032000713`*^9, 3.682860722907832*^9, 
   3.682861602632804*^9, 3.682861802769744*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rho$calc", " "}]], "Input",
 CellChangeTimes->{{3.6828542698954763`*^9, 3.6828542731195374`*^9}, {
  3.682854565784657*^9, 3.6828546066844263`*^9}, {3.68285464301569*^9, 
  3.6828546958659763`*^9}, {3.682854737272936*^9, 3.682854740237505*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ix$sym", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"\[CapitalDelta]", " ", "\[Omega]"}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]], "-", 
     FractionBox[
      RowBox[{"\[CapitalDelta]", " ", "\[Omega]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t$sym", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "+", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]}], ")"}]}], "+", 
  RowBox[{"Iz$sym", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[CapitalDelta]", "2"], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Omega]", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t$sym", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "+", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{"Iy$sym", " ", "\[Omega]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"t$sym", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[CapitalDelta]", "2"], "+", 
     SuperscriptBox["\[Omega]", "2"]}]]]}]], "Output",
 CellChangeTimes->{{3.682854287332494*^9, 3.682854311339834*^9}, {
   3.68285456954366*^9, 3.68285460715519*^9}, {3.682854646537404*^9, 
   3.682854697941959*^9}, 3.682854740611821*^9, 3.682860503244466*^9, 
   3.682860722936603*^9, 3.682861602654777*^9, 3.6828618028038397`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Force with a phase factor ", "Subsubsection",
 CellChangeTimes->{{3.661601509513736*^9, 3.661601517167842*^9}, {
  3.661601685086095*^9, 3.6616016856139593`*^9}, {3.661604369472599*^9, 
  3.661604373430613*^9}}],

Cell[TextData[{
 "This fails because Mathematica cannot recognize that ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{"aL", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}], "\[Rule]",
    "  ", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "i"}], " ", "\[Phi]"}]], " ", 
     RowBox[{"Comm", "[", 
      RowBox[{"aL", ",", "aR"}], "]"}]}], "\[Rule]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "i"}], " ", "\[Phi]"}]]}]}]],
  CellChangeTimes->{
   3.661600376064962*^9, {3.661600426843581*^9, 3.66160044692731*^9}, {
    3.661600567841215*^9, 3.66160057816276*^9}, {3.661600643374647*^9, 
    3.6616006677359037`*^9}, {3.661600698704836*^9, 3.661600731836134*^9}, {
    3.6616010484626513`*^9, 3.6616010618633747`*^9}, 3.6616015385193167`*^9, 
    3.6616015689219103`*^9, {3.6616016294550962`*^9, 3.661601652197709*^9}, 
    3.661601691539207*^9, 3.6616021841194553`*^9, 3.661602350590143*^9, 
    3.661602505026248*^9, 3.661604317425989*^9, {3.6616043721031218`*^9, 
    3.66160438973948*^9}, 3.6828519218874083`*^9, 3.682860512411813*^9, 
    3.6828607332919893`*^9, 3.6828616117405653`*^9, 3.682861811635421*^9, 
    3.682862041754469*^9, 3.682862099291905*^9},
  FontSize->16],
 ".  Conclude that the Comm[] function is not yet smart enough to factor a",
 StyleBox[" function of scalar",
  FontSlant->"Italic"],
 " out of a commutator.  "
}], "Text",
 CellChangeTimes->{{3.682862327680539*^9, 3.682862438992874*^9}},
 FontSize->18],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"{", 
    RowBox[{"F", ",", "\[Phi]"}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"F", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"F", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$1", " ", "=", " ", 
   RowBox[{"F", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "i"}], " ", "\[Phi]"}], "]"}], " ", "aL"}], " ", "+", 
      " ", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"i", " ", "\[Phi]"}], "]"}], " ", "aL"}]}], " ", ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599989586681*^9}, {
  3.661600801286552*^9, 3.661600807763794*^9}, {3.661600966070225*^9, 
  3.661601010459141*^9}, {3.661601621266842*^9, 3.661601648932316*^9}, {
  3.6616043049887943`*^9, 3.66160435768355*^9}, {3.6828620738967447`*^9, 
  3.682862087158081*^9}},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evolver", "[", 
   RowBox[{"H$1", ",", "t", ",", "aR"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.6615999979301577`*^9, 3.661600052902892*^9}, {
  3.661600252980455*^9, 3.6616003005713778`*^9}, {3.661600331228952*^9, 
  3.6616003753055487`*^9}, {3.661600425748569*^9, 3.6616004460721083`*^9}, {
  3.661600561499104*^9, 3.661600577381302*^9}, {3.661600638480967*^9, 
  3.661600666015003*^9}, {3.661600701280002*^9, 3.6616007310693493`*^9}, {
  3.661601025010738*^9, 3.6616010520976973`*^9}, {3.66160156137223*^9, 
  3.661601567965077*^9}, {3.66160169077514*^9, 3.661601690909215*^9}, {
  3.661604378984228*^9, 3.661604387210058*^9}},
 FontSize->16],

Cell[BoxData[
 TemplateBox[{
  "Evolver","unsolvable","\"Unrecognized evolution\"",2,1058,95,
   28805397995740573242,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.661604317396896*^9, {3.661604372092123*^9, 3.661604389733602*^9}, 
   3.682851921865035*^9, 3.682860512394071*^9, 3.682860733274548*^9, 
   3.6828616117240887`*^9, 3.6828618116192636`*^9, 3.682862041738008*^9, 
   3.682862099275535*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"aR", ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "F", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["F", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
     ")"}]}], ",", 
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["F", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
         "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
         "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
         "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
         "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
       "]"}]}], ")"}]}], ",", 
   RowBox[{
    SuperscriptBox["F", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}],
            "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}],
            "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}],
            "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}],
            "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}],
            "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}],
            "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}],
            "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}],
            "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.661600376064962*^9, {3.661600426843581*^9, 3.66160044692731*^9}, {
   3.661600567841215*^9, 3.66160057816276*^9}, {3.661600643374647*^9, 
   3.6616006677359037`*^9}, {3.661600698704836*^9, 3.661600731836134*^9}, {
   3.6616010484626513`*^9, 3.6616010618633747`*^9}, 3.6616015385193167`*^9, 
   3.6616015689219103`*^9, {3.6616016294550962`*^9, 3.661601652197709*^9}, 
   3.661601691539207*^9, 3.6616021841194553`*^9, 3.661602350590143*^9, 
   3.661602505026248*^9, 3.661604317425989*^9, {3.6616043721031218`*^9, 
   3.66160438973948*^9}, 3.6828519218874083`*^9, 3.682860512411813*^9, 
   3.6828607332919893`*^9, 3.6828616117405653`*^9, 3.682861811635421*^9, 
   3.682862041754469*^9, 3.682862099291905*^9},
 FontSize->16]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1045, 741},
WindowMargins->{{73, Automatic}, {14, Automatic}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 212, 3, 92, "Title"],
Cell[795, 27, 156, 6, 83, "Text"],
Cell[954, 35, 363, 10, 35, "Text"],
Cell[CellGroupData[{
Cell[1342, 49, 111, 1, 64, "Section"],
Cell[1456, 52, 315, 9, 77, "Text"],
Cell[1774, 63, 608, 13, 36, "Input"],
Cell[2385, 78, 152, 2, 33, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2574, 85, 100, 1, 64, "Section"],
Cell[2677, 88, 686, 15, 83, "Text"],
Cell[CellGroupData[{
Cell[3388, 107, 463, 10, 63, "Input"],
Cell[3854, 119, 598, 8, 32, "Output"]
}, Open  ]],
Cell[4467, 130, 301, 6, 59, "Text"],
Cell[CellGroupData[{
Cell[4793, 140, 569, 12, 63, "Input"],
Cell[CellGroupData[{
Cell[5387, 156, 135, 2, 24, "Print"],
Cell[5525, 160, 244, 6, 24, "Print"],
Cell[5772, 168, 367, 8, 24, "Print"],
Cell[6142, 178, 101, 1, 24, "Print"],
Cell[6246, 181, 99, 1, 24, "Print"],
Cell[6348, 184, 95, 1, 24, "Print"],
Cell[6446, 187, 97, 1, 24, "Print"],
Cell[6546, 190, 95, 1, 24, "Print"],
Cell[6644, 193, 89, 1, 24, "Print"],
Cell[6736, 196, 91, 1, 24, "Print"],
Cell[6830, 199, 101, 1, 24, "Print"],
Cell[6934, 202, 96, 1, 24, "Print"],
Cell[7033, 205, 97, 1, 24, "Print"],
Cell[7133, 208, 95, 1, 24, "Print"],
Cell[7231, 211, 92, 1, 24, "Print"],
Cell[7326, 214, 92, 1, 24, "Print"],
Cell[7421, 217, 103, 1, 24, "Print"],
Cell[7527, 220, 104, 1, 24, "Print"],
Cell[7634, 223, 105, 1, 24, "Print"],
Cell[7742, 226, 96, 1, 24, "Print"],
Cell[7841, 229, 94, 1, 24, "Print"],
Cell[7938, 232, 91, 1, 24, "Print"],
Cell[8032, 235, 92, 1, 24, "Print"],
Cell[8127, 238, 91, 1, 24, "Print"],
Cell[8221, 241, 90, 1, 24, "Print"],
Cell[8314, 244, 98, 1, 24, "Print"],
Cell[8415, 247, 109, 1, 24, "Print"],
Cell[8527, 250, 107, 1, 24, "Print"],
Cell[8637, 253, 94, 1, 24, "Print"],
Cell[8734, 256, 295, 6, 24, "Print"],
Cell[9032, 264, 89, 1, 24, "Print"],
Cell[9124, 267, 93, 1, 24, "Print"],
Cell[9220, 270, 93, 1, 24, "Print"],
Cell[9316, 273, 1478, 52, 857, "Print"],
Cell[10797, 327, 135, 2, 24, "Print"],
Cell[10935, 331, 246, 6, 24, "Print"],
Cell[11184, 339, 365, 8, 24, "Print"],
Cell[11552, 349, 111, 1, 24, "Print"]
}, Open  ]],
Cell[11678, 353, 440, 8, 42, "Message"],
Cell[12121, 363, 347, 7, 24, "Message"],
Cell[CellGroupData[{
Cell[12493, 374, 135, 2, 24, "Print"],
Cell[12631, 378, 244, 6, 24, "Print"],
Cell[12878, 386, 365, 8, 24, "Print"],
Cell[13246, 396, 110, 1, 24, "Print"]
}, Open  ]],
Cell[13371, 400, 244, 6, 24, "Message"],
Cell[13618, 408, 307, 7, 24, "Message"],
Cell[13928, 417, 354, 7, 42, "Message"],
Cell[CellGroupData[{
Cell[14307, 428, 137, 2, 24, "Print"],
Cell[14447, 432, 244, 6, 24, "Print"],
Cell[14694, 440, 365, 8, 24, "Print"],
Cell[15062, 450, 111, 1, 24, "Print"]
}, Open  ]],
Cell[15188, 454, 229, 5, 24, "Message"],
Cell[CellGroupData[{
Cell[15442, 463, 137, 2, 24, "Print"],
Cell[15582, 467, 244, 6, 24, "Print"],
Cell[15829, 475, 365, 8, 24, "Print"],
Cell[16197, 485, 111, 1, 24, "Print"]
}, Open  ]],
Cell[16323, 489, 559, 10, 59, "Message"],
Cell[CellGroupData[{
Cell[16907, 503, 137, 2, 24, "Print"],
Cell[17047, 507, 244, 6, 24, "Print"],
Cell[17294, 515, 367, 8, 24, "Print"],
Cell[17664, 525, 111, 1, 24, "Print"]
}, Open  ]],
Cell[17790, 529, 371, 7, 42, "Message"],
Cell[CellGroupData[{
Cell[18186, 540, 137, 2, 24, "Print"],
Cell[18326, 544, 246, 6, 24, "Print"],
Cell[18575, 552, 367, 8, 24, "Print"],
Cell[18945, 562, 111, 1, 24, "Print"]
}, Open  ]],
Cell[19071, 566, 397, 8, 42, "Message"],
Cell[19471, 576, 371, 8, 24, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19891, 590, 166, 2, 64, "Section"],
Cell[20060, 594, 457, 9, 59, "Text"],
Cell[CellGroupData[{
Cell[20542, 607, 892, 19, 63, "Input"],
Cell[21437, 628, 1388, 32, 49, "Output"]
}, Open  ]],
Cell[22840, 663, 479, 9, 59, "Text"],
Cell[CellGroupData[{
Cell[23344, 676, 504, 15, 63, "Input"],
Cell[23851, 693, 1990, 48, 129, "Output"]
}, Open  ]],
Cell[25856, 744, 151, 2, 35, "Text"],
Cell[CellGroupData[{
Cell[26032, 750, 1767, 46, 245, "Input"],
Cell[27802, 798, 115422, 2320, 301, "Output"],
Cell[143227, 3120, 645, 12, 32, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143921, 3138, 129, 1, 64, "Section"],
Cell[144053, 3141, 137, 2, 35, "Text"],
Cell[CellGroupData[{
Cell[144215, 3147, 1257, 26, 115, "Input"],
Cell[145475, 3175, 830, 14, 24, "Message"],
Cell[146308, 3191, 841, 15, 24, "Message"],
Cell[147152, 3208, 843, 15, 24, "Message"]
}, Open  ]],
Cell[148010, 3226, 117, 2, 35, "Text"],
Cell[148130, 3230, 265, 7, 36, "Input"],
Cell[CellGroupData[{
Cell[148420, 3241, 110, 1, 44, "Subsection"],
Cell[148533, 3244, 337, 13, 35, "Text"],
Cell[148873, 3259, 1235, 32, 115, "Input"],
Cell[150111, 3293, 141, 2, 35, "Text"],
Cell[CellGroupData[{
Cell[150277, 3299, 346, 9, 63, "Input"],
Cell[150626, 3310, 1689, 48, 111, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[152364, 3364, 99, 1, 44, "Subsection"],
Cell[152466, 3367, 581, 12, 37, "Text"],
Cell[CellGroupData[{
Cell[153072, 3383, 1092, 26, 63, "Input"],
Cell[154167, 3411, 1633, 47, 76, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155861, 3465, 99, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[155985, 3470, 111, 2, 49, "Subsection"],
Cell[CellGroupData[{
Cell[156121, 3476, 2649, 73, 271, "Input"],
Cell[158773, 3551, 790, 13, 24, "Message"],
Cell[159566, 3566, 796, 14, 24, "Message"],
Cell[160365, 3582, 830, 14, 24, "Message"],
Cell[161198, 3598, 799, 14, 24, "Message"],
Cell[162000, 3614, 803, 14, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162840, 3633, 316, 8, 63, "Input"],
Cell[163159, 3643, 259, 4, 36, "Output"],
Cell[163421, 3649, 257, 4, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[163727, 3659, 143, 3, 49, "Subsection"],
Cell[CellGroupData[{
Cell[163895, 3666, 107, 1, 35, "Subsubsection"],
Cell[164005, 3669, 754, 20, 79, "Input"],
Cell[CellGroupData[{
Cell[164784, 3693, 610, 12, 36, "Input"],
Cell[165397, 3707, 719, 16, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166165, 3729, 165, 2, 35, "Subsubsection"],
Cell[166333, 3733, 908, 23, 115, "Input"],
Cell[CellGroupData[{
Cell[167266, 3760, 847, 23, 63, "Input"],
Cell[168116, 3785, 417, 7, 36, "Output"],
Cell[168536, 3794, 416, 7, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[169001, 3807, 154, 2, 35, "Subsubsection"],
Cell[169158, 3811, 950, 25, 81, "Input"],
Cell[CellGroupData[{
Cell[170133, 3840, 984, 20, 36, "Input"],
Cell[171120, 3862, 938, 19, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[172107, 3887, 148, 2, 35, "Subsubsection"],
Cell[172258, 3891, 663, 17, 63, "Input"],
Cell[CellGroupData[{
Cell[172946, 3912, 1137, 22, 63, "Input"],
Cell[174086, 3936, 825, 13, 36, "Output"],
Cell[174914, 3951, 870, 15, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175821, 3971, 353, 9, 63, "Input"],
Cell[176177, 3982, 222, 6, 52, "Output"],
Cell[176402, 3990, 224, 6, 52, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176675, 4002, 100, 1, 35, "Subsubsection"],
Cell[176778, 4005, 711, 15, 36, "Input"],
Cell[CellGroupData[{
Cell[177514, 4024, 622, 18, 53, "Input"],
Cell[178139, 4044, 548, 14, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178724, 4063, 793, 20, 53, "Input"],
Cell[179520, 4085, 558, 13, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180115, 4103, 734, 21, 81, "Input"],
Cell[180852, 4126, 780, 20, 32, "Output"]
}, Open  ]],
Cell[181647, 4149, 167, 4, 33, "Text"],
Cell[CellGroupData[{
Cell[181839, 4157, 358, 11, 36, "Input"],
Cell[182200, 4170, 9008, 162, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191245, 4337, 1320, 33, 123, "Input"],
Cell[192568, 4372, 3090, 88, 175, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[195731, 4468, 115, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[195871, 4473, 1443, 39, 141, "Input"],
Cell[197317, 4514, 490, 9, 24, "Message"],
Cell[197810, 4525, 490, 9, 24, "Message"]
}, Open  ]],
Cell[198315, 4537, 1246, 36, 167, "Input"],
Cell[199564, 4575, 3162, 85, 514, "Input"],
Cell[CellGroupData[{
Cell[202751, 4664, 411, 13, 63, "Input"],
Cell[203165, 4679, 183, 4, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203385, 4688, 269, 8, 36, "Input"],
Cell[203657, 4698, 201, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203895, 4708, 178, 4, 32, "Input"],
Cell[204076, 4714, 126, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204239, 4721, 230, 7, 32, "Input"],
Cell[204472, 4730, 160, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204669, 4739, 413, 13, 36, "Input"],
Cell[205085, 4754, 381, 10, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205503, 4769, 524, 16, 36, "Input"],
Cell[206030, 4787, 450, 14, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206517, 4806, 393, 11, 63, "Input"],
Cell[206913, 4819, 306, 7, 32, "Output"],
Cell[207222, 4828, 287, 6, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207546, 4839, 425, 12, 36, "Input"],
Cell[207974, 4853, 307, 7, 24, "Message"],
Cell[208284, 4862, 1086, 30, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209407, 4897, 271, 8, 32, "Input"],
Cell[209681, 4907, 161, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209879, 4916, 417, 12, 32, "Input"],
Cell[210299, 4930, 209, 5, 24, "Message"],
Cell[210511, 4937, 1613, 45, 79, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[212173, 4988, 100, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[212298, 4993, 130, 1, 35, "Subsubsection"],
Cell[212431, 4996, 171, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[212627, 5004, 1424, 36, 180, "Input"],
Cell[214054, 5042, 352, 7, 70, "Message"],
Cell[214409, 5051, 358, 8, 70, "Message"],
Cell[214770, 5061, 390, 8, 70, "Message"],
Cell[215163, 5071, 352, 7, 70, "Message"],
Cell[215518, 5080, 358, 8, 70, "Message"],
Cell[215879, 5090, 390, 8, 70, "Message"]
}, Open  ]],
Cell[216284, 5101, 1770, 43, 180, "Input"],
Cell[CellGroupData[{
Cell[218079, 5148, 35, 0, 32, "Input"],
Cell[218117, 5150, 1912, 55, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220066, 5210, 268, 4, 32, "Input"],
Cell[220337, 5216, 2002, 56, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[222388, 5278, 217, 3, 29, "Subsubsection"],
Cell[222608, 5283, 1640, 39, 62, "Text"],
Cell[224251, 5324, 1122, 33, 89, "Input"],
Cell[CellGroupData[{
Cell[225398, 5361, 687, 12, 36, "Input"],
Cell[226088, 5375, 429, 9, 24, "Message"],
Cell[226520, 5386, 21587, 597, 655, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

