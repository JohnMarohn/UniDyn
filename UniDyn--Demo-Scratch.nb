(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    312518,       6871]
NotebookOptionsPosition[    295466,       6587]
NotebookOutlinePosition[    295959,       6606]
CellTagsIndexPosition[    295916,       6603]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["UniDyn--Demo-Scratch.nb", "Title",
 CellChangeTimes->{{3.6352690845273046`*^9, 3.635269100847275*^9}, {
  3.6609180081345453`*^9, 3.660918013241088*^9}, {3.6615988707006617`*^9, 
  3.6615988735349627`*^9}},ExpressionUUID->"391a202e-1e28-48b9-91a8-\
88743dfbb72d"],

Cell["\<\
John A. Marohn
jam99@cornell.edu
Cornell University\
\>", "Text",
 CellChangeTimes->{{3.635269101985786*^9, 3.635269121580956*^9}},
 FontSize->18,ExpressionUUID->"9c13195a-2f5b-44a0-b9d6-7d334412a0b8"],

Cell[TextData[{
 StyleBox["Abstract:",
  FontWeight->"Bold"],
 "  This demonstration notebook loads the ",
 StyleBox["UniDyn",
  FontWeight->"Bold"],
 " package and executes the package\[CloseCurlyQuote]s unit tests."
}], "Text",
 CellChangeTimes->{{3.6352698622319117`*^9, 3.635269926908793*^9}, {
  3.6352701305950613`*^9, 3.635270138669529*^9}},
 FontSize->18,ExpressionUUID->"d5e7dddf-7378-41a8-a0a7-42b519c56421"],

Cell[CellGroupData[{

Cell["Set the path to the package", "Section",
 CellChangeTimes->{{3.635270036711257*^9, 
  3.63527004852262*^9}},ExpressionUUID->"4f5edf7b-f0b5-41bd-98ab-\
96ef2604d472"],

Cell[TextData[{
 "Tell ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " the path to the directory containing the package.    \n\nEDIT THE \
FOLLOWING PATH STRING:"
}], "Text",
 CellChangeTimes->{{3.635270060901009*^9, 3.635270086988311*^9}, {
  3.6610825274488792`*^9, 3.6610825288209763`*^9}},
 FontSize->16,ExpressionUUID->"72627f24-66c0-4362-93bf-94bb3be82d04"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$NCPath", " ", "=", " ", "\"\</Users/jam99/Dropbox\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "$UniDynPath", " ", "=", 
    "\"\</Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/unidyn\>\"\
"}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.6349053527016897`*^9, 3.6349054064223843`*^9}, {
   3.634910931339162*^9, 3.634910931457775*^9}, {3.634914337947165*^9, 
   3.6349143671071568`*^9}, {3.634922597904743*^9, 3.634922606812076*^9}, {
   3.635268730835155*^9, 3.635268731125407*^9}, {3.635269951638358*^9, 
   3.635269958323474*^9}, {3.660918115324842*^9, 3.660918132325369*^9}, {
   3.660918590921587*^9, 3.660918600403768*^9}, 3.8554986177031803`*^9},
 FontSize->16,
 CellLabel->"In[5]:=",ExpressionUUID->"1d4257d9-d4f6-4f1d-ad1c-8f90af652578"],

Cell["YOU SHOULD NOT NEED TO EDIT ANYTHING FROM HERE ONWARDS.", "Text",
 CellChangeTimes->{{3.635270073196437*^9, 3.635270077357624*^9}},
 FontSize->16,ExpressionUUID->"5a5f6383-8d48-41c2-b70f-bd0112887a06"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load the package", "Section",
 CellChangeTimes->{{3.635269129230983*^9, 
  3.63526913095236*^9}},ExpressionUUID->"b69153fa-f825-45f0-8739-\
690e4abd6b5a"],

Cell[TextData[{
 "Append the package path to the system path.  Before trying to load the \
package, ask ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to find it.  This is a test that we directed ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to the correct directory.  The output of this command should be the full \
system path to the UniDyn.m file.   "
}], "Text",
 CellChangeTimes->{{3.635269223597199*^9, 3.635269340159473*^9}, {
   3.635269947982662*^9, 3.6352699492517843`*^9}, {3.635269985297124*^9, 
   3.63527000724584*^9}, 3.635270066996499*^9, {3.63527010818321*^9, 
   3.6352701131658497`*^9}, {3.660918102499856*^9, 3.6609181035465183`*^9}},
 FontSize->18,ExpressionUUID->"3655837e-64da-408c-9c7c-8c2b99bb2c37"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Path", " ", "=", " ", 
   RowBox[{"AppendTo", "[", 
    RowBox[{"$Path", ",", "$NCPath"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Path", " ", "=", " ", 
   RowBox[{"AppendTo", "[", 
    RowBox[{"$Path", ",", "$UniDynPath"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindFile", "[", "\"\<UniDyn`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"FindFile", "[", "\"\<NC`\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.634906393354924*^9, 3.634906398308229*^9}, {
   3.634922599063291*^9, 3.634922599752222*^9}, {3.635268728673848*^9, 
   3.6352687402094*^9}, {3.635269954012105*^9, 3.6352699550474253`*^9}, 
   3.855498627862424*^9},
 FontSize->16,
 CellLabel->"In[11]:=",ExpressionUUID->"ab7657da-a278-4379-a33e-689bfd39b35b"],

Cell[BoxData["\<\"/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/UniDyn.m\"\>"], "Output",
 CellChangeTimes->{3.855684587552087*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"d9904eb6-d1e9-4f76-9760-95086d817ae7"],

Cell[BoxData["\<\"/Users/jam99/Dropbox/NC/init.m\"\>"], "Output",
 CellChangeTimes->{3.855684587556794*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"2dad5fdc-95fe-4de0-8601-9e88256b4e09"]
}, Open  ]],

Cell["\<\
Now that we are confident that the path is set correctly, load the package.  \
Setting the global $VerboseLoad variable to True will print out the help \
strings for key commands in the package.  \
\>", "Text",
 CellChangeTimes->{{3.635269347360386*^9, 3.63526943190546*^9}, 
   3.855498641698617*^9},
 FontSize->18,ExpressionUUID->"931bda02-bd34-4f64-836d-d38976e30a7a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$VerboseLoad", " ", "=", "False"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "to", " ", "load", " ", "quietly"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<UniDyn`\>\"", "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQfYUjQpVD9LXjxxR+TRC9peyGEyeQ/lH0EExXTKuJ
BdGbVk8B0zYvFOpA9Ik35o0gmsEzcwKI3ruyF0yrn4ubDqITDHPAdMGBGUdA
9K1JG8G0V4+DGg+Q1vtwBUyLu5WcAtE8yv6nQfT861tdBUDm3NFxA9F2v/Ym
g+h4M4cUED09+VEGiC6rzcoH0RUNSUHSQHqfnVQoiP6uyGkiC6T5nmeCabdp
f25FAekIO8nbINqkKUQlBUiz/Z0DplNs3jwG0Q88GJ+A6Bf2PcZdQNqjYi6Y
XnQt//l3t9eOqzNZX4DoFiF11h9A+sM0Wwht1Mp6bucbR0bVPnYQDQDOxZAu

  "],
 FontSize->16,
 CellLabel->"In[15]:=",ExpressionUUID->"8777a335-4ef0-48ee-99fe-4f94f81dcf5c"],

Cell[BoxData[
 TemplateBox[{
  "NC", "Directory", 
   "\"You are using the version of NCAlgebra which is found in: \
\\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"/Users/jam99/Dropbox/NC/\\\\\\\"\\\"}]\\)\\\"\
.\"", 2, 16, 1, 19344918016878384063, "Local", "NC`NC"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.855684589757469*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"b4c6405a-85a9-49a3-9ea1-bb9b3e35dac4"],

Cell[BoxData[
 TemplateBox[{
  "tr", "shdw", 
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"tr\\\\\\\"\\\"}]\\) appears in \
multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"NCTr`\\\\\\\
\"\\\", \\\",\\\", \\\"\\\\\\\"Global`\\\\\\\"\\\"}], \\\"}\\\"}]\\); \
definitions in context \\!\\(\\*RowBox[{\\\"\\\\\\\"NCTr`\\\\\\\"\\\"}]\\) \
may shadow or be shadowed by other definitions.\"", 2, 16, 2, 
   19344918016878384063, "Local", "NCTr`tr"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.855684589834579*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"421c61a1-3555-4b4e-9823-9e1d089a66b3"],

Cell["\<\
------------------------------------------------------------
NCAlgebra - Version 5.0.6
Compatible with Mathematica Version 10 and above

Authors:

  J. William Helton*
  Mauricio de Oliveira&

* Math, UCSD, La Jolla, CA
& MAE, UCSD, La Jolla, CA

with major earlier contributions by:

  Mark Stankus$ 
  Robert L. Miller#

$ Math, Cal Poly San Luis Obispo
# General Atomics Corp

Copyright: 
  Helton and de Oliveira 2017
  Helton 2002
  Helton and Miller June 1991
  All rights reserved.

The program was written by the authors and by:
  David Hurst, Daniel Lamm, Orlando Merino, Robert Obar,
  Henry Pfister, Mike Walker, John Wavrik, Lois Yu,
  J. Camino, J. Griffin, J. Ovall, T. Shaheen, John Shopple. 
  The beginnings of the program come from eran@slac.
  Considerable recent help came from Igor Klep.

Current primary support is from the 
  NSF Division of Mathematical Sciences.
  
This program was written with support from 
  AFOSR, NSF, ONR, Lab for Math and Statistics at UCSD,
  UCSD Faculty Mentor Program,
  and US Department of Education.

For NCAlgebra updates see:

  www.github.com/NCAlgebra/NC
  www.math.ucsd.edu/~ncalg

------------------------------------------------------------\
\>", "Print",
 CellChangeTimes->{3.855684590131865*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"d9c59dd6-09f4-46fb-a536-d9d07d764b95"],

Cell[BoxData[
 TemplateBox[{
  "NCAlgebra", "SmallCapSymbolsNonCommutative", 
   "\"All lower cap single letter symbols (e.g. a,b,c,...) were set as \
noncommutative.\"", 2, 16, 3, 19344918016878384063, "Local", 
   "NCAlgebra`NCAlgebra"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.855684590135005*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"353dffd3-f89d-4971-84fd-0dabac55384b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Execute the units tests in batch", "Section",
 CellChangeTimes->{{3.635269450321582*^9, 3.635269455866803*^9}, {
  3.661082576038043*^9, 
  3.661082577577619*^9}},ExpressionUUID->"40dd6435-da21-4952-afcb-\
9ffff154b643"],

Cell["\<\
Included with the package are a number of files, ending in \
\[OpenCurlyDoubleQuote]-tests.m\[CloseCurlyDoubleQuote], that contain tests \
of the package\[CloseCurlyQuote]s functions -- so-called unit tests.  Set the \
working directory to the package directory and pretty-print the directory \
name.\
\>", "Text",
 CellChangeTimes->{{3.635269466546741*^9, 3.63526959787702*^9}, {
  3.6352696661918793`*^9, 3.6352697255432568`*^9}},
 FontSize->18,ExpressionUUID->"82a186b2-ec29-4d77-89ae-048209ebd5ef"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", "$UniDynPath", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "$UniDynPath", "}"}], "}"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", "\"\<Directory\>\"", "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.634944324488654*^9, 3.6349443603233624`*^9}, {
   3.6349444030097713`*^9, 3.63494440330383*^9}, {3.634944747308063*^9, 
   3.6349447481808853`*^9}, {3.634946064022402*^9, 3.634946069263152*^9}, {
   3.634946188079462*^9, 3.634946189912341*^9}, {3.6349479903618507`*^9, 
   3.6349480514686327`*^9}, {3.6349480899795113`*^9, 
   3.6349482285783367`*^9}, {3.634948408385352*^9, 3.634948452061852*^9}, {
   3.635269608570084*^9, 3.635269645220949*^9}, 3.635269728194304*^9, {
   3.8554986690267487`*^9, 3.85549868178732*^9}},
 FontSize->16,
 CellLabel->"In[17]:=",ExpressionUUID->"8c2cad5a-cd1e-4d46-9c12-f91019b722de"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Directory\"\>",
       HoldForm]},
     {"\<\"/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/unidyn\"\
\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {None, {"Directory"}}]]]], "Output",\

 CellChangeTimes->{3.855684618382215*^9},
 CellLabel->
  "Out[18]//TableForm=",ExpressionUUID->"7c75eb8e-a29b-4c71-9191-\
3a1cddfa9d62"]
}, Open  ]],

Cell["\<\
Get the names of all the unit-testing files included with the package \
(following my convention that the unit testing file end in \
\[OpenCurlyDoubleQuote]-tests.m\[CloseCurlyDoubleQuote]).   Pretty-print the \
names of the unit-test files included with the package.\
\>", "Text",
 CellChangeTimes->{
  3.6352696714534483`*^9, {3.6352697371205063`*^9, 3.6352697785313387`*^9}, {
   3.6352698393266697`*^9, 3.635269839517961*^9}, 3.6609243923593283`*^9},
 FontSize->18,ExpressionUUID->"f066a196-5844-4b85-8fa4-78a71c0d7d77"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fn", " ", "=", " ", 
   RowBox[{"FileNames", "[", "\"\<*-tests.m\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "fn", "}"}], "}"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", "\"\<Test files found\>\"", "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6610821906566467`*^9, 3.661082193022552*^9}},
 FontSize->16,
 CellLabel->"In[19]:=",ExpressionUUID->"64231d27-0bce-42ea-b9d6-f63ce6c02bb6"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Test files found\"\>",
       HoldForm]},
     {
      TagBox[GridBox[{
         {"\<\"Comm-tests.m\"\>"},
         {"\<\"Evolve-tests.m\"\>"},
         {"\<\"Mult-tests.m\"\>"},
         {"\<\"OpCreate-tests.m\"\>"},
         {"\<\"Osc-tests.m\"\>"},
         {"\<\"Spins-tests.m\"\>"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {None, {"Test files found"}}]]]], "Output",
 CellChangeTimes->{3.855684621125762*^9},
 CellLabel->
  "Out[20]//TableForm=",ExpressionUUID->"979bafa6-600f-4b3a-a8ce-\
f7b73c740519"]
}, Open  ]],

Cell["Finally, carry out the unit tests and make a report.", "Text",
 CellChangeTimes->{{3.635269787557482*^9, 3.6352698056777897`*^9}},
 FontSize->18,ExpressionUUID->"a45755e1-b303-4fa9-8287-c9aa13e6116c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test$report", " ", "=", 
   RowBox[{"TestReport", " ", "/@", " ", "fn"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"test$report", "[", 
     RowBox[{"[", "k", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      RowBox[{"Length", "[", "test$report", "]"}]}], "}"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.661056096117302*^9, 3.6610561018069153`*^9}, {
   3.661057070228121*^9, 3.6610570741421413`*^9}, {3.661081914458424*^9, 
   3.661081936122706*^9}, {3.6610826347312403`*^9, 3.6610826394672413`*^9}, {
   3.6611400376524487`*^9, 3.661140039730514*^9}, {3.855509021373403*^9, 
   3.855509021797516*^9}, 3.855512258241598*^9, {3.855512622396385*^9, 
   3.8555126233753777`*^9}, {3.8556846392495937`*^9, 3.855684680772561*^9}},
 FontSize->16,
 CellLabel->"In[23]:=",ExpressionUUID->"90433bd8-d59d-4c8b-a733-562dc43b0402"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
                   BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True),
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  InsetBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"], 
                    ImageSizeCache -> {16., {3., 9.}}], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]]], AspectRatio -> 1, Axes -> False, 
                  Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Comm-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12", "SummaryItem"]}]}}, AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
             GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                   BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  InsetBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]]], AspectRatio -> 1, Axes -> False, 
                  Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Comm-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with wrong results: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with errors: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    "0.00119`", "\"s\"", "seconds", "\"Seconds\""}, 
                    "Quantity"], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                  AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[<|
        "Title" -> "Test Report: Comm-tests.m", "Aborted" -> False, 
         "TestResults" -> <|
          1243030922440782226 -> 
           TestResultObject[<|
             "TestKey" -> 1243030922440782226, "TestID" -> "Comm > test01a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Comm-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693599231`15.639706496198684*^9, "AbsoluteTimeUsed" -> 
              0.000112`2.1997330205021752, "CPUTimeUsed" -> 
              0.00010599999999527654`, "MemoryUsed" -> 3176|>], 
           4033339801043083943 -> 
           TestResultObject[<|
             "TestKey" -> 4033339801043083943, "TestID" -> "Comm > test01b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Comm-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693600033`15.639706496198775*^9, "AbsoluteTimeUsed" -> 
              0.000089`2.0999050044769065, "CPUTimeUsed" -> 
              0.00012100000000714317`, "MemoryUsed" -> 3176|>], 
           5662350584576451481 -> 
           TestResultObject[<|
             "TestKey" -> 5662350584576451481, "TestID" -> "Comm > test01c", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Comm-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693600732`15.639706496198855*^9, "AbsoluteTimeUsed" -> 
              0.000085`2.079933923546286, "CPUTimeUsed" -> 
              0.00008400000000108321, "MemoryUsed" -> 3176|>], 
           6907133682374773661 -> 
           TestResultObject[<|
             "TestKey" -> 6907133682374773661, "TestID" -> "Comm > test01d", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Comm-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693601425`15.639706496198933*^9, "AbsoluteTimeUsed" -> 
              0.000083`2.069593090208068, "CPUTimeUsed" -> 
              0.00008300000000360797, "MemoryUsed" -> 3176|>], 
           6736659576804610039 -> 
           TestResultObject[<|
             "TestKey" -> 6736659576804610039, "TestID" -> "Comm > test01e", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Comm-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693602134`15.639706496199015*^9, "AbsoluteTimeUsed" -> 
              0.000219`2.4909591126721122, "CPUTimeUsed" -> 
              0.00017100000000169757`, "MemoryUsed" -> 3176|>], 
           6929492499461396134 -> 
           TestResultObject[<|
             "TestKey" -> 6929492499461396134, "TestID" -> "Comm > test02a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Comm-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693603365`15.639706496199151*^9, "AbsoluteTimeUsed" -> 
              0.000088`2.0949976699821624, "CPUTimeUsed" -> 
              0.0000859999999960337, "MemoryUsed" -> 3176|>], 
           1559170285841959933 -> 
           TestResultObject[<|
             "TestKey" -> 1559170285841959933, "TestID" -> "Comm > test03a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Comm-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693604565`15.639706496199288*^9, "AbsoluteTimeUsed" -> 
              0.000085`2.079933923546286, "CPUTimeUsed" -> 
              0.00008499999999855845, "MemoryUsed" -> 3176|>], 
           2481784840759180042 -> 
           TestResultObject[<|
             "TestKey" -> 2481784840759180042, "TestID" -> "Comm > test03b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Comm-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693605518`15.639706496199395*^9, "AbsoluteTimeUsed" -> 
              0.000086`2.0850134490755616, "CPUTimeUsed" -> 
              0.00008499999999855845, "MemoryUsed" -> 3176|>], 
           3666939394091659316 -> 
           TestResultObject[<|
             "TestKey" -> 3666939394091659316, "TestID" -> "Comm > test03c", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Comm-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693606353`15.639706496199489*^9, "AbsoluteTimeUsed" -> 
              0.000084`2.0747942838938753, "CPUTimeUsed" -> 
              0.0000819999999990273, "MemoryUsed" -> 3176|>], 
           5636333406161750551 -> 
           TestResultObject[<|
             "TestKey" -> 5636333406161750551, "TestID" -> "Comm > test04a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Comm-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693607369`15.639706496199599*^9, "AbsoluteTimeUsed" -> 
              0.00008`2.0536049848239375, "CPUTimeUsed" -> 
              0.0000780000000020209, "MemoryUsed" -> 3176|>], 
           202790024502774635 -> 
           TestResultObject[<|
             "TestKey" -> 202790024502774635, "TestID" -> "Comm > test04b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Comm-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693608884`15.639706496199771*^9, "AbsoluteTimeUsed" -> 
              0.000081`2.0590000167106437, "CPUTimeUsed" -> 
              0.00007999999999697138, "MemoryUsed" -> 3176|>], 
           4663538700263743995 -> 
           TestResultObject[<|
             "TestKey" -> 4663538700263743995, "TestID" -> "Comm > test05a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Comm-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693610555`15.63970649619996*^9, "AbsoluteTimeUsed" -> 
              0.000098`2.1417410735244884, "CPUTimeUsed" -> 
              0.00009599999999920783, "MemoryUsed" -> 3176|>]|>, 
         "TestsSucceededKeys" -> {1243030922440782226, 4033339801043083943, 
          5662350584576451481, 6907133682374773661, 6736659576804610039, 
          6929492499461396134, 1559170285841959933, 2481784840759180042, 
          3666939394091659316, 5636333406161750551, 202790024502774635, 
          4663538700263743995}, "TestsFailedWrongResultsKeys" -> {}, 
         "TestsFailedWithMessagesKeys" -> {}, 
         "TestsFailedWithErrorsKeys" -> {}|>],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
                   BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True),
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  InsetBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"], 
                    ImageSizeCache -> {16., {3., 9.}}], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]]], AspectRatio -> 1, Axes -> False, 
                  Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Test Report: Evolve-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["27", "SummaryItem"]}]}}, AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
             GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                   BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  InsetBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]]], AspectRatio -> 1, Axes -> False, 
                  Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Test Report: Evolve-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["27", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["27", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with wrong results: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with errors: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    "0.00241`", "\"s\"", "seconds", "\"Seconds\""}, 
                    "Quantity"], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                  AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[<|
        "Title" -> "Test Report: Evolve-tests.m", "Aborted" -> False, 
         "TestResults" -> <|
          9019972609524441245 -> 
           TestResultObject[<|
             "TestKey" -> 9019972609524441245, "TestID" -> 
              "Osc > test01a > distribute addition", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693652905`15.63970649620473*^9, "AbsoluteTimeUsed" -> 
              0.000101`2.1548363716146364, "CPUTimeUsed" -> 
              0.00010000000000331966`, "MemoryUsed" -> 3176|>], 
           7214733301110636966 -> 
           TestResultObject[<|
             "TestKey" -> 7214733301110636966, "TestID" -> 
              "Osc > test01b > distribute multiplication", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.85568469365417`15.639706496204875*^9, "AbsoluteTimeUsed" -> 
              0.000126`2.2508855429495567, "CPUTimeUsed" -> 
              0.00012499999999704414`, "MemoryUsed" -> 3176|>], 
           2522942305076259646 -> 
           TestResultObject[<|
             "TestKey" -> 2522942305076259646, "TestID" -> 
              "Osc > test01c > distribute complicated expression", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693655709`15.639706496205045*^9, "AbsoluteTimeUsed" -> 
              0.000138`2.29039408423323, "CPUTimeUsed" -> 
              0.00013500000000021828`, "MemoryUsed" -> 3176|>], 
           9030504350647031667 -> 
           TestResultObject[<|
             "TestKey" -> 9030504350647031667, "TestID" -> 
              "Osc > test01d > NCExpand bottom-out test 1", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693657042`15.639706496205195*^9, "AbsoluteTimeUsed" -> 
              0.000098`2.1417410735244884, "CPUTimeUsed" -> 
              0.0000959999999921024, "MemoryUsed" -> 3176|>], 
           7213749102745300141 -> 
           TestResultObject[<|
             "TestKey" -> 7213749102745300141, "TestID" -> 
              "Osc > test01e > NCExpand bottom-out test 2", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693657899`15.639706496205294*^9, "AbsoluteTimeUsed" -> 
              0.000088`2.094997669982163, "CPUTimeUsed" -> 
              0.00008700000000061436, "MemoryUsed" -> 3176|>], 
           6363507524589422115 -> 
           TestResultObject[<|
             "TestKey" -> 6363507524589422115, "TestID" -> 
              "Osc > test01f > NCExpand bottom-out test 3", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693658796`15.639706496205392*^9, "AbsoluteTimeUsed" -> 
              0.000087`2.0900342504506124, "CPUTimeUsed" -> 
              0.0000859999999960337, "MemoryUsed" -> 3176|>], 
           2845487187976554245 -> 
           TestResultObject[<|
             "TestKey" -> 2845487187976554245, "TestID" -> 
              "Osc > test02a > commuting test 1", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693660593`15.639706496205598*^9, "AbsoluteTimeUsed" -> 
              0.0001`2.150514997831994, "CPUTimeUsed" -> 
              0.0000970000000037885, "MemoryUsed" -> 3176|>], 
           6845891712410014790 -> 
           TestResultObject[<|
             "TestKey" -> 6845891712410014790, "TestID" -> 
              "Osc > test02b > commuting test 2", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693668153`15.639706496206449*^9, "AbsoluteTimeUsed" -> 
              0.000154`2.3380357186684573, "CPUTimeUsed" -> 
              0.00014600000000086766`, "MemoryUsed" -> 3176|>], 
           7650417665910022874 -> 
           TestResultObject[<|
             "TestKey" -> 7650417665910022874, "TestID" -> 
              "Osc > test02c > commuting test 3", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693670243`15.639706496206685*^9, "AbsoluteTimeUsed" -> 
              0.000102`2.1591151695939113, "CPUTimeUsed" -> 
              0.0001010000000007949, "MemoryUsed" -> 3176|>], 
           67020826718951733 -> 
           TestResultObject[<|
             "TestKey" -> 67020826718951733, "TestID" -> 
              "Osc > test03a > Evolve expand test 1", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693671146`15.639706496206786*^9, "AbsoluteTimeUsed" -> 
              0.000093`2.118997946385929, "CPUTimeUsed" -> 
              0.000091999999995096, "MemoryUsed" -> 3176|>], 
           3864320646752254508 -> 
           TestResultObject[<|
             "TestKey" -> 3864320646752254508, "TestID" -> 
              "Osc > test03b > Evolve expand test 2", "TestFileName" -> 
              
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.85568469367961`15.639706496207737*^9, "AbsoluteTimeUsed" -> 
              0.000093`2.118997946385929, "CPUTimeUsed" -> 
              0.00008900000000267028, "MemoryUsed" -> 3176|>], 
           3656261106176799209 -> 
           TestResultObject[<|
             "TestKey" -> 3656261106176799209, "TestID" -> 
              "Osc > test03c > Evolve expand test 3", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684693681243`15.639706496207921*^9, "AbsoluteTimeUsed" -> 
              0.000078`2.0426096005224745, "CPUTimeUsed" -> 
              0.0000780000000020209, "MemoryUsed" -> 3176|>], 
           8343015618517512978 -> 
           TestResultObject[<|
             "TestKey" -> 8343015618517512978, "TestID" -> 
              "Osc > test04a > DSolve test", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684694312094`15.639706496278981*^9, "AbsoluteTimeUsed" -> 
              0.000077`2.0370057230044756, "CPUTimeUsed" -> 
              0.00007200000000295859, "MemoryUsed" -> 3176|>], 
           5420791144642109093 -> 
           TestResultObject[<|
             "TestKey" -> 5420791144642109093, "TestID" -> 
              "Osc > test05a > free evolution of Ix test", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.85568469496503`15.639706496352526*^9, "AbsoluteTimeUsed" -> 
              0.000077`2.0370057230044756, "CPUTimeUsed" -> 
              0.00007199999999585316, "MemoryUsed" -> 3176|>], 
           4197312835243919479 -> 
           TestResultObject[<|
             "TestKey" -> 4197312835243919479, "TestID" -> 
              "Osc > test05a > free evolution of Ix", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684695523874`15.63970649641547*^9, "AbsoluteTimeUsed" -> 
              0.000082`2.0643288502157104, "CPUTimeUsed" -> 
              0.0000780000000020209, "MemoryUsed" -> 3176|>], 
           2923056962597196416 -> 
           TestResultObject[<|
             "TestKey" -> 2923056962597196416, "TestID" -> 
              "Osc > test05b > on-resonance nutation of Iz", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684696140206`15.639706496484893*^9, "AbsoluteTimeUsed" -> 
              0.000068`1.9830239105382301, "CPUTimeUsed" -> 
              0.00006199999999978445, "MemoryUsed" -> 3176|>], 
           7133565423570087818 -> 
           TestResultObject[<|
             "TestKey" -> 7133565423570087818, "TestID" -> 
              "Osc > test05c > free evolution of I+", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684697345873`15.639706496620699*^9, "AbsoluteTimeUsed" -> 
              0.000065`1.9634283544748494, "CPUTimeUsed" -> 
              0.00006100000000230921, "MemoryUsed" -> 3176|>], 
           2872835937110139151 -> 
           TestResultObject[<|
             "TestKey" -> 2872835937110139151, "TestID" -> 
              "Osc > test05d > scalar-coupling evolution of Ix", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684698121678`15.639706496708083*^9, "AbsoluteTimeUsed" -> 
              0.000102`2.1591151695939113, "CPUTimeUsed" -> 
              0.00009699999999668307, "MemoryUsed" -> 3176|>], 
           8906110506633190403 -> 
           TestResultObject[<|
             "TestKey" -> 8906110506633190403, "TestID" -> 
              "Osc > test05e > Off-resonance nutation of of Iz", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684703656669`15.639706497331531*^9, "AbsoluteTimeUsed" -> 
              0.00008`2.0536049848239375, "CPUTimeUsed" -> 
              0.00007699999999744023, "MemoryUsed" -> 3176|>], 
           5536166563021726329 -> 
           TestResultObject[<|
             "TestKey" -> 5536166563021726329, "TestID" -> 
              "Osc > test06a1 > free evolution of lowering operator", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684703872502`15.639706497355842*^9, "AbsoluteTimeUsed" -> 
              0.000081`2.0590000167106437, "CPUTimeUsed" -> 
              0.00007799999999491547, "MemoryUsed" -> 3176|>], 
           2839064965179246681 -> 
           TestResultObject[<|
             "TestKey" -> 2839064965179246681, "TestID" -> 
              "Osc > test06a2 > free evolution of raising operator", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684704100113`15.639706497381479*^9, "AbsoluteTimeUsed" -> 
              0.000069`1.989364088569249, "CPUTimeUsed" -> 
              0.0000649999999993156, "MemoryUsed" -> 3176|>], 
           8051082441632665842 -> 
           TestResultObject[<|
             "TestKey" -> 8051082441632665842, "TestID" -> 
              "Osc > test06b > test Q definition", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684704102181`15.63970649738171*^9, "AbsoluteTimeUsed" -> 
              0.000066`1.9700589333738627, "CPUTimeUsed" -> 
              0.00006599999999679085, "MemoryUsed" -> 3176|>], 
           2264730063618718348 -> 
           TestResultObject[<|
             "TestKey" -> 2264730063618718348, "TestID" -> 
              "Osc > test06c > test P definition", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684704103217`15.639706497381825*^9, "AbsoluteTimeUsed" -> 
              0.000057`1.9063898535044852, "CPUTimeUsed" -> 
              0.00005699999999819738, "MemoryUsed" -> 3176|>], 
           8453788555171166125 -> 
           TestResultObject[<|
             "TestKey" -> 8453788555171166125, "TestID" -> 
              "Osc > test06d > free evolution of Q", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684705064421`15.639706497490096*^9, "AbsoluteTimeUsed" -> 
              0.000076`2.031328590112785, "CPUTimeUsed" -> 
              0.00007200000000295859, "MemoryUsed" -> 3176|>], 
           2994835201713987928 -> 
           TestResultObject[<|
             "TestKey" -> 2994835201713987928, "TestID" -> 
              "Osc > test06e > free evolution of P", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684705955151`15.639706497590424*^9, "AbsoluteTimeUsed" -> 
              0.000089`2.0999050044769065, "CPUTimeUsed" -> 
              0.0000819999999990273, "MemoryUsed" -> 3176|>], 
           6848316921519318035 -> 
           TestResultObject[<|
             "TestKey" -> 6848316921519318035, "TestID" -> 
              "Osc > test06f > position kick", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684705976307`15.639706497592806*^9, "AbsoluteTimeUsed" -> 
              0.000089`2.0999050044769065, "CPUTimeUsed" -> 
              0.00008299999999650254, "MemoryUsed" -> 3176|>], 
           9051500071186147164 -> 
           TestResultObject[<|
             "TestKey" -> 9051500071186147164, "TestID" -> 
              "Osc > test06g > momentum kick", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Evolve-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684705988558`15.639706497594188*^9, "AbsoluteTimeUsed" -> 
              0.000074`2.01974671756297, "CPUTimeUsed" -> 
              0.000068999999996322, "MemoryUsed" -> 3176|>]|>, 
         "TestsSucceededKeys" -> {9019972609524441245, 7214733301110636966, 
          2522942305076259646, 9030504350647031667, 7213749102745300141, 
          6363507524589422115, 2845487187976554245, 6845891712410014790, 
          7650417665910022874, 67020826718951733, 3864320646752254508, 
          3656261106176799209, 8343015618517512978, 5420791144642109093, 
          4197312835243919479, 2923056962597196416, 7133565423570087818, 
          2872835937110139151, 8906110506633190403, 5536166563021726329, 
          2839064965179246681, 8051082441632665842, 2264730063618718348, 
          8453788555171166125, 2994835201713987928, 6848316921519318035, 
          9051500071186147164}, "TestsFailedWrongResultsKeys" -> {}, 
         "TestsFailedWithMessagesKeys" -> {}, 
         "TestsFailedWithErrorsKeys" -> {}|>],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
                   BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True),
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  InsetBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"], 
                    ImageSizeCache -> {16., {3., 9.}}], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]]], AspectRatio -> 1, Axes -> False, 
                  Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Mult-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}]}}, AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
             GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                   BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  InsetBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]]], AspectRatio -> 1, Axes -> False, 
                  Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Mult-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with wrong results: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with errors: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    "0.001717`", "\"s\"", "seconds", "\"Seconds\""}, 
                    "Quantity"], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                  AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[<|
        "Title" -> "Test Report: Mult-tests.m", "Aborted" -> False, 
         "TestResults" -> <|
          6380156362935235402 -> 
           TestResultObject[<|
             "TestKey" -> 6380156362935235402, "TestID" -> "Mult > test01a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706017417`15.639706497597436*^9, "AbsoluteTimeUsed" -> 
              0.000151`2.3294919451251634, "CPUTimeUsed" -> 
              0.00014700000000544833`, "MemoryUsed" -> 3176|>], 
           777429854520286687 -> 
           TestResultObject[<|
             "TestKey" -> 777429854520286687, "TestID" -> "Mult > test02a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706019712`15.639706497597697*^9, "AbsoluteTimeUsed" -> 
              0.000144`2.3088774899272435, "CPUTimeUsed" -> 
              0.00014000000000180535`, "MemoryUsed" -> 3176|>], 
           6571719819953771003 -> 
           TestResultObject[<|
             "TestKey" -> 6571719819953771003, "TestID" -> "Mult > test02b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706020879`15.63970649759783*^9, "AbsoluteTimeUsed" -> 
              0.000123`2.240420109271392, "CPUTimeUsed" -> 
              0.00012299999999498823`, "MemoryUsed" -> 3176|>], 
           8530580040398602095 -> 
           TestResultObject[<|
             "TestKey" -> 8530580040398602095, "TestID" -> "Mult > test03a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706022119`15.639706497597967*^9, "AbsoluteTimeUsed" -> 
              0.000127`2.2543187187879505, "CPUTimeUsed" -> 
              0.00012400000000667433`, "MemoryUsed" -> 3176|>], 
           3773158586397170017 -> 
           TestResultObject[<|
             "TestKey" -> 3773158586397170017, "TestID" -> "Mult > test03b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706023078`15.639706497598073*^9, "AbsoluteTimeUsed" -> 
              0.000079`2.048142089122435, "CPUTimeUsed" -> 
              0.0000769999999903348, "MemoryUsed" -> 3176|>], 
           4923960337144680319 -> 
           TestResultObject[<|
             "TestKey" -> 4923960337144680319, "TestID" -> "Mult > test03c", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706023829`15.639706497598159*^9, "AbsoluteTimeUsed" -> 
              0.000074`2.01974671756297, "CPUTimeUsed" -> 
              0.00007399999999790907, "MemoryUsed" -> 3176|>], 
           4529216484295503066 -> 
           TestResultObject[<|
             "TestKey" -> 4529216484295503066, "TestID" -> "Mult > test04a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706024758`15.639706497598265*^9, "AbsoluteTimeUsed" -> 
              0.000075`2.0255762612236934, "CPUTimeUsed" -> 
              0.00007399999999790907, "MemoryUsed" -> 3176|>], 
           3902323057567531828 -> 
           TestResultObject[<|
             "TestKey" -> 3902323057567531828, "TestID" -> "Mult > test04b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706025525`15.639706497598352*^9, "AbsoluteTimeUsed" -> 
              0.000089`2.0999050044769065, "CPUTimeUsed" -> 
              0.00008800000000519503, "MemoryUsed" -> 3176|>], 
           5337266783055585897 -> 
           TestResultObject[<|
             "TestKey" -> 5337266783055585897, "TestID" -> "Mult > test04c", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706026407`15.63970649759845*^9, "AbsoluteTimeUsed" -> 
              0.000077`2.037005723004476, "CPUTimeUsed" -> 
              0.00007500000000959517, "MemoryUsed" -> 3176|>], 
           111289022653160436 -> 
           TestResultObject[<|
             "TestKey" -> 111289022653160436, "TestID" -> "Mult > test04d", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706027102`15.639706497598526*^9, "AbsoluteTimeUsed" -> 
              0.000072`2.0078474942632623, "CPUTimeUsed" -> 
              0.00007000000000090267, "MemoryUsed" -> 3176|>], 
           5233029488679655842 -> 
           TestResultObject[<|
             "TestKey" -> 5233029488679655842, "TestID" -> "Mult > test05a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706027954`15.639706497598626*^9, "AbsoluteTimeUsed" -> 
              0.000072`2.0078474942632623, "CPUTimeUsed" -> 
              0.00007300000000043383, "MemoryUsed" -> 3176|>], 
           1912409196839447466 -> 
           TestResultObject[<|
             "TestKey" -> 1912409196839447466, "TestID" -> "Mult > test06a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706028786`15.63970649759872*^9, "AbsoluteTimeUsed" -> 
              0.000072`2.0078474942632623, "CPUTimeUsed" -> 
              0.00007099999999837792, "MemoryUsed" -> 3176|>], 
           2414748112973813058 -> 
           TestResultObject[<|
             "TestKey" -> 2414748112973813058, "TestID" -> "Mult > test06b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706029705`15.639706497598821*^9, "AbsoluteTimeUsed" -> 
              0.00008`2.053604984823938, "CPUTimeUsed" -> 
              0.0000780000000020209, "MemoryUsed" -> 3176|>], 
           7787551906411089465 -> 
           TestResultObject[<|
             "TestKey" -> 7787551906411089465, "TestID" -> "Mult > test07a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706030617`15.639706497598924*^9, "AbsoluteTimeUsed" -> 
              0.000073`2.01383785795245, "CPUTimeUsed" -> 
              0.00007199999999585316, "MemoryUsed" -> 3176|>], 
           8213718779153360400 -> 
           TestResultObject[<|
             "TestKey" -> 8213718779153360400, "TestID" -> "Mult > test08a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706031504`15.639706497599024*^9, "AbsoluteTimeUsed" -> 
              0.000071`2.0017733465510688, "CPUTimeUsed" -> 
              0.0000819999999990273, "MemoryUsed" -> 3176|>], 
           3579130278088949115 -> 
           TestResultObject[<|
             "TestKey" -> 3579130278088949115, "TestID" -> "Mult > test08b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706032219`15.639706497599104*^9, "AbsoluteTimeUsed" -> 
              0.000067`1.9765898005328202, "CPUTimeUsed" -> 
              0.00006599999999679085, "MemoryUsed" -> 3176|>], 
           8404692041247254680 -> 
           TestResultObject[<|
             "TestKey" -> 8404692041247254680, "TestID" -> "Mult > test08b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706033391`15.639706497599237*^9, "AbsoluteTimeUsed" -> 
              0.000069`1.989364088569249, "CPUTimeUsed" -> 
              0.00006800000000595219, "MemoryUsed" -> 3176|>], 
           8487754508090480237 -> 
           TestResultObject[<|
             "TestKey" -> 8487754508090480237, "TestID" -> "Mult > test08d", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706034171`15.639706497599327*^9, "AbsoluteTimeUsed" -> 
              0.000068`1.9830239105382301, "CPUTimeUsed" -> 
              0.00006700000000137152, "MemoryUsed" -> 3176|>], 
           3009292809565540786 -> 
           TestResultObject[<|
             "TestKey" -> 3009292809565540786, "TestID" -> "Mult > test09a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706035056`15.639706497599425*^9, "AbsoluteTimeUsed" -> 
              0.000066`1.9700589333738627, "CPUTimeUsed" -> 
              0.00006399999999473494, "MemoryUsed" -> 3176|>], 
           4283205935363120449 -> 
           TestResultObject[<|
             "TestKey" -> 4283205935363120449, "TestID" -> "Mult > test10a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Mult-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.85568470603825`15.639706497599784*^9, "AbsoluteTimeUsed" -> 
              0.000068`1.9830239105382301, "CPUTimeUsed" -> 
              0.00006599999999679085, "MemoryUsed" -> 3176|>]|>, 
         "TestsSucceededKeys" -> {6380156362935235402, 777429854520286687, 
          6571719819953771003, 8530580040398602095, 3773158586397170017, 
          4923960337144680319, 4529216484295503066, 3902323057567531828, 
          5337266783055585897, 111289022653160436, 5233029488679655842, 
          1912409196839447466, 2414748112973813058, 7787551906411089465, 
          8213718779153360400, 3579130278088949115, 8404692041247254680, 
          8487754508090480237, 3009292809565540786, 4283205935363120449}, 
         "TestsFailedWrongResultsKeys" -> {}, 
         "TestsFailedWithMessagesKeys" -> {}, 
         "TestsFailedWithErrorsKeys" -> {}|>],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
                   BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True),
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  InsetBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"], 
                    ImageSizeCache -> {16., {3., 9.}}], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]]], AspectRatio -> 1, Axes -> False, 
                  Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Test Report: OpCreate-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23", "SummaryItem"]}]}}, AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
             GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                   BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  InsetBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]]], AspectRatio -> 1, Axes -> False, 
                  Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Test Report: OpCreate-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with wrong results: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with errors: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    "0.001914`", "\"s\"", "seconds", "\"Seconds\""}, 
                    "Quantity"], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                  AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[<|
        "Title" -> "Test Report: OpCreate-tests.m", "Aborted" -> False, 
         "TestResults" -> <|
          3552230153082576075 -> 
           TestResultObject[<|
             "TestKey" -> 3552230153082576075, "TestID" -> 
              "OpCreate > test01a", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706068327`15.639706497603173*^9, "AbsoluteTimeUsed" -> 
              0.000157`2.3464146502412278, "CPUTimeUsed" -> 
              0.0001509999999953493, "MemoryUsed" -> 3176|>], 
           370802235862651732 -> 
           TestResultObject[<|
             "TestKey" -> 370802235862651732, "TestID" -> 
              "OpCreate > test01b", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706069489`15.639706497603301*^9, "AbsoluteTimeUsed" -> 
              0.000133`2.2743666387990795, "CPUTimeUsed" -> 
              0.0001319999999935817, "MemoryUsed" -> 3176|>], 
           2998914876802951172 -> 
           TestResultObject[<|
             "TestKey" -> 2998914876802951172, "TestID" -> 
              "OpCreate > test01c", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706070659`15.639706497603434*^9, "AbsoluteTimeUsed" -> 
              0.000127`2.2543187187879505, "CPUTimeUsed" -> 
              0.00012800000000368073`, "MemoryUsed" -> 3176|>], 
           8833444383869532581 -> 
           TestResultObject[<|
             "TestKey" -> 8833444383869532581, "TestID" -> 
              "OpCreate > test02a", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706072725`15.639706497603669*^9, "AbsoluteTimeUsed" -> 
              0.000105`2.171704296901932, "CPUTimeUsed" -> 
              0.00009800000000126374, "MemoryUsed" -> 3176|>], 
           5116094506976503978 -> 
           TestResultObject[<|
             "TestKey" -> 5116094506976503978, "TestID" -> 
              "OpCreate > test02b", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.85568470607347`15.63970649760375*^9, "AbsoluteTimeUsed" -> 
              0.000081`2.0590000167106437, "CPUTimeUsed" -> 
              0.00008000000001118224, "MemoryUsed" -> 3176|>], 
           1232995103341599681 -> 
           TestResultObject[<|
             "TestKey" -> 1232995103341599681, "TestID" -> 
              "OpCreate > test02c", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706074652`15.639706497603882*^9, "AbsoluteTimeUsed" -> 
              0.000077`2.0370057230044756, "CPUTimeUsed" -> 
              0.00007599999999996498, "MemoryUsed" -> 3176|>], 
           270778253609546562 -> 
           TestResultObject[<|
             "TestKey" -> 270778253609546562, "TestID" -> 
              "OpCreate > test03a", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706075646`15.639706497603997*^9, "AbsoluteTimeUsed" -> 
              0.000084`2.0747942838938758, "CPUTimeUsed" -> 
              0.00008399999999397778, "MemoryUsed" -> 3176|>], 
           4065722054503783934 -> 
           TestResultObject[<|
             "TestKey" -> 4065722054503783934, "TestID" -> 
              "OpCreate > test03b", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706076349`15.639706497604076*^9, "AbsoluteTimeUsed" -> 
              0.000079`2.0481420891224356, "CPUTimeUsed" -> 
              0.0000780000000020209, "MemoryUsed" -> 3176|>], 
           8192054773155019542 -> 
           TestResultObject[<|
             "TestKey" -> 8192054773155019542, "TestID" -> 
              "OpCreate > test03c", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706077017`15.639706497604152*^9, "AbsoluteTimeUsed" -> 
              0.0000759999999999999`2.031328590112785, "CPUTimeUsed" -> 
              0.00007600000000707041, "MemoryUsed" -> 3176|>], 
           3768331731234568422 -> 
           TestResultObject[<|
             "TestKey" -> 3768331731234568422, "TestID" -> 
              "OpCreate > test04a", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706077842`15.639706497604243*^9, "AbsoluteTimeUsed" -> 
              0.000073`2.01383785795245, "CPUTimeUsed" -> 
              0.00007100000000548334, "MemoryUsed" -> 3176|>], 
           8890318114172787506 -> 
           TestResultObject[<|
             "TestKey" -> 8890318114172787506, "TestID" -> 
              "OpCreate > test04b", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706078446`15.63970649760431*^9, "AbsoluteTimeUsed" -> 
              0.000072`2.0078474942632623, "CPUTimeUsed" -> 
              0.00007199999999585316, "MemoryUsed" -> 3176|>], 
           5401365508606810747 -> 
           TestResultObject[<|
             "TestKey" -> 5401365508606810747, "TestID" -> 
              "OpCreate > test04c", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706079042`15.63970649760438*^9, "AbsoluteTimeUsed" -> 
              0.000072`2.0078474942632623, "CPUTimeUsed" -> 
              0.00007199999999585316, "MemoryUsed" -> 3176|>], 
           4186003678371048976 -> 
           TestResultObject[<|
             "TestKey" -> 4186003678371048976, "TestID" -> 
              "OpCreate > test04d", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706079635`15.639706497604447*^9, "AbsoluteTimeUsed" -> 
              0.000071`2.0017733465510688, "CPUTimeUsed" -> 
              0.00006999999999379725, "MemoryUsed" -> 3176|>], 
           7599773404917638631 -> 
           TestResultObject[<|
             "TestKey" -> 7599773404917638631, "TestID" -> 
              "OpCreate > test04e", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706080233`15.63970649760451*^9, "AbsoluteTimeUsed" -> 
              0.000071`2.0017733465510688, "CPUTimeUsed" -> 
              0.00007000000000090267, "MemoryUsed" -> 3176|>], 
           2033486423072073324 -> 
           TestResultObject[<|
             "TestKey" -> 2033486423072073324, "TestID" -> 
              "OpCreate > test04f", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706080826`15.63970649760458*^9, "AbsoluteTimeUsed" -> 
              0.000068`1.9830239105382301, "CPUTimeUsed" -> 
              0.00006799999999884676, "MemoryUsed" -> 3176|>], 
           1174405952922776981 -> 
           TestResultObject[<|
             "TestKey" -> 1174405952922776981, "TestID" -> 
              "OpCreate > test04g", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706081406`15.639706497604644*^9, "AbsoluteTimeUsed" -> 
              0.00007`1.9956130378462504, "CPUTimeUsed" -> 
              0.00006799999999884676, "MemoryUsed" -> 3176|>], 
           7102656916214525171 -> 
           TestResultObject[<|
             "TestKey" -> 7102656916214525171, "TestID" -> 
              "OpCreate > test04h", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706081976`15.639706497604708*^9, "AbsoluteTimeUsed" -> 
              0.00007`1.9956130378462509, "CPUTimeUsed" -> 
              0.00006799999999884676, "MemoryUsed" -> 3176|>], 
           8689614836743753151 -> 
           TestResultObject[<|
             "TestKey" -> 8689614836743753151, "TestID" -> 
              "OpCreate > test05a", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706083349`15.639706497604863*^9, "AbsoluteTimeUsed" -> 
              0.000077`2.037005723004476, "CPUTimeUsed" -> 
              0.00007599999999996498, "MemoryUsed" -> 3176|>], 
           920561061679989437 -> 
           TestResultObject[<|
             "TestKey" -> 920561061679989437, "TestID" -> 
              "OpCreate > test05b", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706083959`15.63970649760493*^9, "AbsoluteTimeUsed" -> 
              0.000069`1.989364088569249, "CPUTimeUsed" -> 
              0.00006900000000342743, "MemoryUsed" -> 3176|>], 
           5771889118301331235 -> 
           TestResultObject[<|
             "TestKey" -> 5771889118301331235, "TestID" -> 
              "OpCreate > test05c", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706084554`15.639706497605*^9, "AbsoluteTimeUsed" -> 
              0.000069`1.989364088569249, "CPUTimeUsed" -> 
              0.00006799999999884676, "MemoryUsed" -> 3176|>], 
           3442061428582796314 -> 
           TestResultObject[<|
             "TestKey" -> 3442061428582796314, "TestID" -> 
              "OpCreate > test05d", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706085243`15.639706497605076*^9, "AbsoluteTimeUsed" -> 
              0.000077`2.037005723004476, "CPUTimeUsed" -> 
              0.00007700000000454565, "MemoryUsed" -> 3176|>], 
           3163285625079918304 -> 
           TestResultObject[<|
             "TestKey" -> 3163285625079918304, "TestID" -> 
              "OpCreate > test06a", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706086046`15.639706497605166*^9, "AbsoluteTimeUsed" -> 
              0.00007`1.9956130378462509, "CPUTimeUsed" -> 
              0.00006799999999884676, "MemoryUsed" -> 3176|>], 
           4034313930890613348 -> 
           TestResultObject[<|
             "TestKey" -> 4034313930890613348, "TestID" -> 
              "OpCreate > test06b", "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/OpCreate-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706086618`15.63970649760523*^9, "AbsoluteTimeUsed" -> 
              0.000066`1.9700589333738623, "CPUTimeUsed" -> 
              0.00006400000000184036, "MemoryUsed" -> 3176|>]|>, 
         "TestsSucceededKeys" -> {3552230153082576075, 370802235862651732, 
          2998914876802951172, 8833444383869532581, 5116094506976503978, 
          1232995103341599681, 270778253609546562, 4065722054503783934, 
          8192054773155019542, 3768331731234568422, 8890318114172787506, 
          5401365508606810747, 4186003678371048976, 7599773404917638631, 
          2033486423072073324, 1174405952922776981, 7102656916214525171, 
          8689614836743753151, 920561061679989437, 5771889118301331235, 
          3442061428582796314, 3163285625079918304, 4034313930890613348}, 
         "TestsFailedWrongResultsKeys" -> {}, 
         "TestsFailedWithMessagesKeys" -> {}, 
         "TestsFailedWithErrorsKeys" -> {}|>],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
                   BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True),
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  InsetBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"], 
                    ImageSizeCache -> {16., {3., 9.}}], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]]], AspectRatio -> 1, Axes -> False, 
                  Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Osc-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}]}}, AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
             GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                   BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  InsetBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]]], AspectRatio -> 1, Axes -> False, 
                  Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Osc-tests.m\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with wrong results: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with errors: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    "0.001524`", "\"s\"", "seconds", "\"Seconds\""}, 
                    "Quantity"], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                  AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[<|
        "Title" -> "Test Report: Osc-tests.m", "Aborted" -> False, 
         "TestResults" -> <|
          8627758141249453865 -> 
           TestResultObject[<|
             "TestKey" -> 8627758141249453865, "TestID" -> "Osc > test00a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706121038`15.63970649760911*^9, "AbsoluteTimeUsed" -> 
              0.000147`2.3178323325801697, "CPUTimeUsed" -> 
              0.00013999999999469992`, "MemoryUsed" -> 3176|>], 
           5738039045643158259 -> 
           TestResultObject[<|
             "TestKey" -> 5738039045643158259, "TestID" -> "Osc > test00b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706122976`15.639706497609328*^9, "AbsoluteTimeUsed" -> 
              0.000087`2.0900342504506124, "CPUTimeUsed" -> 
              0.00008400000000108321, "MemoryUsed" -> 3176|>], 
           685790250326148030 -> 
           TestResultObject[<|
             "TestKey" -> 685790250326148030, "TestID" -> "Osc > test00c", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706124493`15.639706497609499*^9, "AbsoluteTimeUsed" -> 
              0.000079`2.0481420891224356, "CPUTimeUsed" -> 
              0.00007799999999491547, "MemoryUsed" -> 3176|>], 
           2930378042330077167 -> 
           TestResultObject[<|
             "TestKey" -> 2930378042330077167, "TestID" -> "Osc > test01a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706126908`15.639706497609769*^9, "AbsoluteTimeUsed" -> 
              0.00009`2.104757507271319, "CPUTimeUsed" -> 
              0.00008700000000061436, "MemoryUsed" -> 3176|>], 
           5933224618374039600 -> 
           TestResultObject[<|
             "TestKey" -> 5933224618374039600, "TestID" -> "Osc > test01b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.85568470612759`15.639706497609845*^9, "AbsoluteTimeUsed" -> 
              0.000078`2.0426096005224745, "CPUTimeUsed" -> 
              0.00007599999999996498, "MemoryUsed" -> 3176|>], 
           903808320329361291 -> 
           TestResultObject[<|
             "TestKey" -> 903808320329361291, "TestID" -> "Osc > test01c", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706128244`15.639706497609918*^9, "AbsoluteTimeUsed" -> 
              0.000077`2.037005723004476, "CPUTimeUsed" -> 
              0.00007500000000248974, "MemoryUsed" -> 3176|>], 
           4682513963649768879 -> 
           TestResultObject[<|
             "TestKey" -> 4682513963649768879, "TestID" -> "Osc > test01d", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706128916`15.639706497609996*^9, "AbsoluteTimeUsed" -> 
              0.000073`2.01383785795245, "CPUTimeUsed" -> 
              0.00007199999999585316, "MemoryUsed" -> 3176|>], 
           3634937690194566743 -> 
           TestResultObject[<|
             "TestKey" -> 3634937690194566743, "TestID" -> "Osc > test02a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706130861`15.639706497610215*^9, "AbsoluteTimeUsed" -> 
              0.000072`2.0078474942632623, "CPUTimeUsed" -> 
              0.00007099999999837792, "MemoryUsed" -> 3176|>], 
           387154797280294887 -> 
           TestResultObject[<|
             "TestKey" -> 387154797280294887, "TestID" -> "Osc > test02b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706131469`15.639706497610282*^9, "AbsoluteTimeUsed" -> 
              0.000069`1.989364088569249, "CPUTimeUsed" -> 
              0.00006799999999884676, "MemoryUsed" -> 3176|>], 
           3959480480843073092 -> 
           TestResultObject[<|
             "TestKey" -> 3959480480843073092, "TestID" -> "Osc > test02c", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706132114`15.639706497610355*^9, "AbsoluteTimeUsed" -> 
              0.000069`1.989364088569249, "CPUTimeUsed" -> 
              0.00006700000000137152, "MemoryUsed" -> 3176|>], 
           2054254424333650589 -> 
           TestResultObject[<|
             "TestKey" -> 2054254424333650589, "TestID" -> "Osc > test02d", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706132876`15.63970649761044*^9, "AbsoluteTimeUsed" -> 
              0.000076`2.031328590112785, "CPUTimeUsed" -> 
              0.0000740000000050145, "MemoryUsed" -> 3176|>], 
           6080767769150476048 -> 
           TestResultObject[<|
             "TestKey" -> 6080767769150476048, "TestID" -> "Osc > test03a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706135366`15.639706497610723*^9, "AbsoluteTimeUsed" -> 
              0.00007`1.9956130378462504, "CPUTimeUsed" -> 
              0.00006799999999884676, "MemoryUsed" -> 3176|>], 
           6505612840871011111 -> 
           TestResultObject[<|
             "TestKey" -> 6505612840871011111, "TestID" -> "Osc > test03b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706136543`15.639706497610856*^9, "AbsoluteTimeUsed" -> 
              0.000075`2.0255762612236934, "CPUTimeUsed" -> 
              0.0000729999999933284, "MemoryUsed" -> 3176|>], 
           8304339508316609375 -> 
           TestResultObject[<|
             "TestKey" -> 8304339508316609375, "TestID" -> "Osc > test04a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706138504`15.639706497611078*^9, "AbsoluteTimeUsed" -> 
              0.000079`2.048142089122435, "CPUTimeUsed" -> 
              0.00007499999999538431, "MemoryUsed" -> 3176|>], 
           1281716123735924998 -> 
           TestResultObject[<|
             "TestKey" -> 1281716123735924998, "TestID" -> "Osc > test04b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706139139`15.639706497611147*^9, "AbsoluteTimeUsed" -> 
              0.000068`1.9830239105382301, "CPUTimeUsed" -> 
              0.00006800000000595219, "MemoryUsed" -> 3176|>], 
           5980825829659196144 -> 
           TestResultObject[<|
             "TestKey" -> 5980825829659196144, "TestID" -> "Osc > test04c", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706139794`15.639706497611224*^9, "AbsoluteTimeUsed" -> 
              0.000064`1.956694971815881, "CPUTimeUsed" -> 
              0.00006400000000184036, "MemoryUsed" -> 3176|>], 
           2433139904018782403 -> 
           TestResultObject[<|
             "TestKey" -> 2433139904018782403, "TestID" -> "Osc > test04d", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.85568470614033`15.639706497611284*^9, "AbsoluteTimeUsed" -> 
              0.000064`1.956694971815881, "CPUTimeUsed" -> 
              0.00006299999999725969, "MemoryUsed" -> 3176|>], 
           4287961979647415372 -> 
           TestResultObject[<|
             "TestKey" -> 4287961979647415372, "TestID" -> "Osc > test04e", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.85568470614092`15.639706497611348*^9, "AbsoluteTimeUsed" -> 
              0.000063`1.9498555472855754, "CPUTimeUsed" -> 
              0.00006299999999725969, "MemoryUsed" -> 3176|>], 
           7955221873749851681 -> 
           TestResultObject[<|
             "TestKey" -> 7955221873749851681, "TestID" -> "Osc > test04f", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706141514`15.639706497611416*^9, "AbsoluteTimeUsed" -> 
              0.000063`1.9498555472855754, "CPUTimeUsed" -> 
              0.00006200000000688988, "MemoryUsed" -> 3176|>], 
           2241010698866226059 -> 
           TestResultObject[<|
             "TestKey" -> 2241010698866226059, "TestID" -> "Osc > test05a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Osc-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706142361`15.63970649761151*^9, "AbsoluteTimeUsed" -> 
              0.000061`1.935844832842761, "CPUTimeUsed" -> 
              0.00006099999999520378, "MemoryUsed" -> 3176|>]|>, 
         "TestsSucceededKeys" -> {8627758141249453865, 5738039045643158259, 
          685790250326148030, 2930378042330077167, 5933224618374039600, 
          903808320329361291, 4682513963649768879, 3634937690194566743, 
          387154797280294887, 3959480480843073092, 2054254424333650589, 
          6080767769150476048, 6505612840871011111, 8304339508316609375, 
          1281716123735924998, 5980825829659196144, 2433139904018782403, 
          4287961979647415372, 7955221873749851681, 2241010698866226059}, 
         "TestsFailedWrongResultsKeys" -> {}, 
         "TestsFailedWithMessagesKeys" -> {}, 
         "TestsFailedWithErrorsKeys" -> {}|>],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      InterpretationBox[
       RowBox[{
        TagBox["TestReportObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
                   BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True),
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  InsetBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"], 
                    ImageSizeCache -> {16., {3., 9.}}], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]]], AspectRatio -> 1, Axes -> False, 
                  Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Spins-tests.m\"", "SummaryItem"]}],
                     "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["14", "SummaryItem"]}]}}, AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
             GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                   BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  InsetBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]]], AspectRatio -> 1, Axes -> False, 
                  Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Test Report: Spins-tests.m\"", "SummaryItem"]}],
                     "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["14", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["14", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with wrong results: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"Failed with errors: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    "0.0010370000000000002`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity"], "SummaryItem"]}], 
                    "\[SpanFromLeft]"}}, AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       TestReportObject[<|
        "Title" -> "Test Report: Spins-tests.m", "Aborted" -> False, 
         "TestResults" -> <|
          6095184473512494118 -> 
           TestResultObject[<|
             "TestKey" -> 6095184473512494118, "TestID" -> "Spins > test00a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Spins-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706175565`15.639706497615249*^9, "AbsoluteTimeUsed" -> 
              0.000096`2.132786230871562, "CPUTimeUsed" -> 
              0.00009099999999051533, "MemoryUsed" -> 3176|>], 
           2420805177244082268 -> 
           TestResultObject[<|
             "TestKey" -> 2420805177244082268, "TestID" -> "Spins > test00b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Spins-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706177082`15.63970649761542*^9, "AbsoluteTimeUsed" -> 
              0.000078`2.0426096005224745, "CPUTimeUsed" -> 
              0.00007599999999996498, "MemoryUsed" -> 3176|>], 
           4501020672913225092 -> 
           TestResultObject[<|
             "TestKey" -> 4501020672913225092, "TestID" -> "Spins > test00c", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Spins-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706178322`15.639706497615562*^9, "AbsoluteTimeUsed" -> 
              0.000096`2.132786230871562, "CPUTimeUsed" -> 
              0.00009499999999462716, "MemoryUsed" -> 3176|>], 
           8789279891552571733 -> 
           TestResultObject[<|
             "TestKey" -> 8789279891552571733, "TestID" -> "Spins > test01a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Spins-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.85568470617989`15.639706497615737*^9, "AbsoluteTimeUsed" -> 
              0.000073`2.01383785795245, "CPUTimeUsed" -> 
              0.00007099999999837792, "MemoryUsed" -> 3176|>], 
           6570208297130713780 -> 
           TestResultObject[<|
             "TestKey" -> 6570208297130713780, "TestID" -> "Spins > test01b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Spins-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.8556847061805`15.639706497615805*^9, "AbsoluteTimeUsed" -> 
              0.00007`1.9956130378462509, "CPUTimeUsed" -> 
              0.000068999999996322, "MemoryUsed" -> 3176|>], 
           2300743106954499115 -> 
           TestResultObject[<|
             "TestKey" -> 2300743106954499115, "TestID" -> "Spins > test01c", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Spins-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706181116`15.639706497615878*^9, "AbsoluteTimeUsed" -> 
              0.000069`1.989364088569249, "CPUTimeUsed" -> 
              0.00006800000000595219, "MemoryUsed" -> 3176|>], 
           1882902342555544377 -> 
           TestResultObject[<|
             "TestKey" -> 1882902342555544377, "TestID" -> "Spins > test01d", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Spins-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706181714`15.639706497615942*^9, "AbsoluteTimeUsed" -> 
              0.00007`1.9956130378462509, "CPUTimeUsed" -> 
              0.00006799999999884676, "MemoryUsed" -> 3176|>], 
           8287527147483585402 -> 
           TestResultObject[<|
             "TestKey" -> 8287527147483585402, "TestID" -> "Spins > test02a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Spins-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.85568470618351`15.639706497616148*^9, "AbsoluteTimeUsed" -> 
              0.000073`2.01383785795245, "CPUTimeUsed" -> 
              0.00007100000000548334, "MemoryUsed" -> 3176|>], 
           6155496547750436628 -> 
           TestResultObject[<|
             "TestKey" -> 6155496547750436628, "TestID" -> "Spins > test02b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Spins-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706184098`15.639706497616212*^9, "AbsoluteTimeUsed" -> 
              0.000067`1.9765898005328202, "CPUTimeUsed" -> 
              0.00006599999999679085, "MemoryUsed" -> 3176|>], 
           2731461261424102713 -> 
           TestResultObject[<|
             "TestKey" -> 2731461261424102713, "TestID" -> "Spins > test03a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Spins-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706184894`15.639706497616302*^9, "AbsoluteTimeUsed" -> 
              0.00007`1.9956130378462509, "CPUTimeUsed" -> 
              0.00007000000000090267, "MemoryUsed" -> 3176|>], 
           8596035845979283504 -> 
           TestResultObject[<|
             "TestKey" -> 8596035845979283504, "TestID" -> "Spins > test03b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Spins-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706185507`15.63970649761637*^9, "AbsoluteTimeUsed" -> 
              0.000067`1.9765898005328202, "CPUTimeUsed" -> 
              0.00006599999999679085, "MemoryUsed" -> 3176|>], 
           2973310910608962105 -> 
           TestResultObject[<|
             "TestKey" -> 2973310910608962105, "TestID" -> "Spins > test03c", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Spins-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706186083`15.639706497616434*^9, "AbsoluteTimeUsed" -> 
              0.000067`1.9765898005328202, "CPUTimeUsed" -> 
              0.00006599999999679085, "MemoryUsed" -> 3176|>], 
           7421777164388319571 -> 
           TestResultObject[<|
             "TestKey" -> 7421777164388319571, "TestID" -> "Spins > test04a", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Spins-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706187851`15.639706497616634*^9, "AbsoluteTimeUsed" -> 
              0.000067`1.9765898005328202, "CPUTimeUsed" -> 
              0.00006600000000389628, "MemoryUsed" -> 3176|>], 
           4435715386351426451 -> 
           TestResultObject[<|
             "TestKey" -> 4435715386351426451, "TestID" -> "Spins > test04b", 
              "TestFileName" -> 
              "/Users/jam99/Dropbox/MarohnGroup__Software_Library/UniDyn/\
unidyn/Spins-tests.m", "SameTest" -> SameQ, "SameMessages" -> 
              Testing`MessageMatchQ, "MemoryConstraint" -> 
              DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
              "Outcome" -> "Success", "Input" -> HoldForm[True], 
              "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
              HoldForm[True], "ExpectedMessages" -> HoldForm[{}], 
              "ActualMessages" -> {}, "AbsoluteTime" -> 
              3.855684706190836`15.639706497616974*^9, "AbsoluteTimeUsed" -> 
              0.000074`2.01974671756297, "CPUTimeUsed" -> 
              0.00007100000000548334, "MemoryUsed" -> 3176|>]|>, 
         "TestsSucceededKeys" -> {6095184473512494118, 2420805177244082268, 
          4501020672913225092, 8789279891552571733, 6570208297130713780, 
          2300743106954499115, 1882902342555544377, 8287527147483585402, 
          6155496547750436628, 2731461261424102713, 8596035845979283504, 
          2973310910608962105, 7421777164388319571, 4435715386351426451}, 
         "TestsFailedWrongResultsKeys" -> {}, 
         "TestsFailedWithMessagesKeys" -> {}, 
         "TestsFailedWithErrorsKeys" -> {}|>],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.855684667141718*^9, 3.855684706883288*^9},
 CellLabel->
  "Out[24]//TableForm=",ExpressionUUID->"0ada09b7-9001-4481-b744-\
2af2183d6766"]
}, Open  ]],

Cell["Make a report.", "Text",
 CellChangeTimes->{{3.635269787557482*^9, 3.6352698056777897`*^9}, {
  3.855512588963078*^9, 3.855512608940481*^9}},
 FontSize->18,ExpressionUUID->"95fe649a-8e59-499e-854e-ff37d92fdfe8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tests$passed$total", " ", "=", " ", 
   RowBox[{"Plus", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"test$report", "[", 
         RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<TestsSucceededCount\>\"", 
        "]"}], "&"}], " ", "/@", " ", 
      RowBox[{"List", " ", "@@", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"k", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"Length", "[", "test$report", "]"}]}], "}"}]}], "]"}]}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tests$failed$total", " ", "=", " ", 
    RowBox[{"Plus", " ", "@@", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"test$report", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<TestsFailedCount\>\"", 
         "]"}], "&"}], " ", "/@", " ", 
       RowBox[{"List", " ", "@@", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"k", ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "test$report", "]"}]}], "}"}]}], "]"}]}]}],
       ")"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ToString", "[", "tests$passed$total", " ", "]"}], " ", "<>", 
     " ", "\"\< tests passed\>\""}], ",", 
    RowBox[{"FontWeight", "\[Rule]", " ", "Bold"}], ",", 
    RowBox[{"FontSize", "\[Rule]", " ", "18"}], ",", 
    RowBox[{"FontColor", "\[Rule]", " ", "Blue"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ToString", "[", "tests$failed$total", " ", "]"}], " ", "<>", 
     " ", "\"\< tests failed\>\""}], " ", ",", 
    RowBox[{"FontWeight", "\[Rule]", " ", "Bold"}], ",", 
    RowBox[{"FontSize", "\[Rule]", " ", "18"}], ",", 
    RowBox[{"FontColor", "\[Rule]", " ", "Red"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.855512813021071*^9, 3.855512882596389*^9}, {
  3.855684685156039*^9, 3.855684691329094*^9}, {3.855686108209751*^9, 
  3.855686115609105*^9}},ExpressionUUID->"1a2b1bfe-4738-4185-a2e2-\
26ef206bd1ae"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"116 tests passed\"\>",
  StripOnInput->False,
  FontSize->18,
  FontWeight->Bold,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.855684707249772*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"ddea573a-3625-4e3a-b163-656a2289727a"],

Cell[BoxData[
 StyleBox["\<\"0 tests failed\"\>",
  StripOnInput->False,
  FontSize->18,
  FontWeight->Bold,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.855684707252262*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"fe5bb21c-1c7e-4482-b2a3-2ebcfe801d04"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Single spin: Taking repeated commutators", "Section",
 CellChangeTimes->{{3.6615992412243643`*^9, 
  3.6615992640686407`*^9}},ExpressionUUID->"dfefb8e6-da99-4bd0-9ed1-\
b6a5a4d41ff7"],

Cell["Create a  single-spin system to play with.", "Text",
 CellChangeTimes->{{3.661268509659028*^9, 3.6612685346131*^9}},
 FontSize->18,ExpressionUUID->"96351404-c45d-448b-bc63-4e93635996bb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<UniDyn`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "H", ",", "Ix", ",", " ", "Iy", ",", " ", "Iz", ",", "\[CapitalDelta]", ",",
    "\[Omega]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"{", 
    RowBox[{"\[CapitalDelta]", ",", "\[Omega]"}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SpinSingle$CreateOperators", "[", 
   RowBox[{"Ix", ",", " ", "Iy", ",", " ", "Iz"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.661209723717368*^9, 3.661209781037619*^9}, {
  3.661209830458013*^9, 3.661209884242929*^9}, {3.6612099236667957`*^9, 
  3.661209945634691*^9}, {3.6612105356033173`*^9, 3.66121054655971*^9}, {
  3.661210693381155*^9, 3.661210703790155*^9}, {3.661210750490106*^9, 
  3.661210763528246*^9}, {3.661211264597097*^9, 3.6612112665302753`*^9}, {
  3.661211551837948*^9, 3.661211598420218*^9}, {3.661211727699301*^9, 
  3.661211734299876*^9}, {3.6612126056876993`*^9, 3.661212605841806*^9}, {
  3.661213289440082*^9, 3.661213292682469*^9}, {3.661472121218009*^9, 
  3.661472127467431*^9}, {3.6614732226012573`*^9, 3.661473226009387*^9}, {
  3.661599753513829*^9, 3.66159975380103*^9}},
 FontSize->16,
 CellLabel->"In[29]:=",ExpressionUUID->"d3806585-b421-434c-abd9-2e9f505618f8"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "create", "\"Creating spin operators.\"", 2, 
   32, 4, 19344918016878384063, "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.855684717742189*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"e7080daf-12cd-45e3-8d15-ea15c808e892"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "comm", 
   "\"Adding spin commutations relations.\"", 2, 32, 5, 19344918016878384063, 
   "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.85568471775073*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"a63d00e2-a517-4ea9-9333-cde9a13cbbb5"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "nosimplify", 
   "\"No angular momentum L defined.\"", 2, 32, 6, 19344918016878384063, 
   "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8556847177554007`*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"4fffcaa6-472e-449a-a955-41438099e86e"]
}, Open  ]],

Cell["Define a Hamiltonian", "Text",
 CellChangeTimes->{{3.661599281144273*^9, 3.661599289244596*^9}},
 FontSize->18,ExpressionUUID->"790179ad-eee3-4590-9ea5-c33ab8188bdb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"H", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", " ", "Iz"}], " ", "+", " ", 
    RowBox[{"\[Omega]", " ", "Ix"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.661599299803336*^9, 3.661599305960333*^9}},
 FontSize->16,
 CellLabel->"In[33]:=",ExpressionUUID->"05cbd74f-efee-4f1b-a208-324ee6d0e8c7"],

Cell[CellGroupData[{

Cell["Repeated commutators", "Subsection",
 CellChangeTimes->{{3.661599685100058*^9, 
  3.6615996923128147`*^9}},ExpressionUUID->"3edc2822-178a-4639-8fec-\
8b6ef46811f8"],

Cell[TextData[{
 "Define a function to take ",
 StyleBox["n",
  FontSlant->"Italic"],
 " commutators of an operator ",
 StyleBox["Op",
  FontSlant->"Italic"],
 " with the -i times the Hamiltonian ",
 StyleBox["H",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.6615993113406057`*^9, 3.661599347492508*^9}},
 FontSize->18,ExpressionUUID->"34675cf0-7997-4d0b-a96f-f8d967d8b44a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "RepeatedComm", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RepeatedComm", "[", 
    RowBox[{"1", ",", "H_", ",", "Op_"}], "]"}], " ", ":=", "  ", 
   RowBox[{"List", "[", "Op", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RepeatedComm", "[", 
    RowBox[{"n_", ",", "H_", ",", "Op_"}], "]"}], " ", ":=", "  ", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"RepeatedComm", "[", 
      RowBox[{
       RowBox[{"n", "-", "1"}], ",", "H", ",", "Op"}], "]"}], ",", 
     RowBox[{
      RowBox[{"-", "I"}], " ", 
      RowBox[{"Comm", "[", 
       RowBox[{"H", ",", 
        RowBox[{
         RowBox[{"RepeatedComm", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", "H", ",", "Op"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.661212641100292*^9, 3.661212767076599*^9}, {
  3.6612128063190527`*^9, 3.6612128825633593`*^9}, {3.661212919216586*^9, 
  3.661212939855138*^9}, {3.661212982178464*^9, 3.661213025278123*^9}, {
  3.6612130737536497`*^9, 3.661213151209804*^9}, {3.66121319869022*^9, 
  3.6612132063347263`*^9}},
 FontSize->16,
 CellLabel->"In[34]:=",ExpressionUUID->"00b31c7a-1c82-4221-8d6b-8ea8027766bc"],

Cell["Example calculation of repeated commutators", "Text",
 CellChangeTimes->{{3.6615993686319523`*^9, 3.66159937714777*^9}},
 FontSize->18,ExpressionUUID->"b43409e0-25e0-4280-ad0b-dcfaf4176c3f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"RepeatedComm", "[", 
      RowBox[{"5", ",", "H", ",", "Iz"}], "]"}], " ", "//", " ", "Expand"}], 
    " ", "//", " ", "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Sigma]", " ", "//", " ", "MatrixForm"}]}], "Input",
 FontSize->16,
 CellLabel->"In[37]:=",ExpressionUUID->"d89ee293-dc04-450b-b734-b369ac840c1e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Ix"}], " ", "\[CapitalDelta]"}], "+", 
          RowBox[{"Iz", " ", "\[Omega]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}], ")"}]}]},
      {
       RowBox[{"Iy", " ", "\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}], ")"}]}]},
      {
       RowBox[{"\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Ix", " ", "\[CapitalDelta]"}], "-", 
          RowBox[{"Iz", " ", "\[Omega]"}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"-", "Iy"}], " ", "\[Omega]"}]},
      {"Iz"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8556847178444777`*^9},
 CellLabel->
  "Out[38]//MatrixForm=",ExpressionUUID->"799d92ab-23b7-4071-ba44-\
0b0e299d5195"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evolution", "Subsection",
 CellChangeTimes->{{3.6615996956735153`*^9, 
  3.661599699524911*^9}},ExpressionUUID->"21e579fd-e317-4909-88f0-\
fcd87faade2f"],

Cell[TextData[{
 "Use the Evolver function to calculate the evolution of the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "x"], TraditionalForm]],ExpressionUUID->
  "59019542-4873-491b-853a-ff8c00e829a6"],
 " operator under the on-resonance Zeeman Hamiltonian first."
}], "Text",
 CellChangeTimes->{{3.66147272233392*^9, 3.6614727570869102`*^9}, {
   3.6614727958845654`*^9, 3.661472872662071*^9}, {3.661473131854478*^9, 
   3.661473138759437*^9}, 3.6614733335244417`*^9, {3.6615993982390747`*^9, 
   3.661599469119955*^9}, {3.6615996560801477`*^9, 3.661599657964798*^9}, {
   3.661599702534917*^9, 3.6615997089029007`*^9}, {3.8555060700626297`*^9, 
   3.855506078104827*^9}},
 FontSize->18,ExpressionUUID->"c2b7809c-24c2-4413-a8f0-940fecbbaca8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalDelta]", " ", "\[Element]", "Reals"}], ",", 
     RowBox[{"\[CapitalDelta]", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Evolver", ",", 
     RowBox[{"quiet", " ", "->", " ", "True"}]}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "this", " ", "to", " ", "False", " ", "when", " ", 
    RowBox[{"debugging", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Evolver", "[", 
  RowBox[{
   RowBox[{"\[CapitalDelta]", " ", "Iz"}], ",", "t", ",", "Ix"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.855506099808861*^9, 3.85550613899752*^9}, {
  3.855506263713902*^9, 3.855506265407618*^9}, {3.855506708116395*^9, 
  3.8555067098087063`*^9}, {3.855509257319785*^9, 3.855509267460223*^9}, {
  3.855513001736157*^9, 3.855513013972969*^9}},
 FontSize->16,
 CellLabel->"In[39]:=",ExpressionUUID->"47722331-ebc1-4891-8149-acdea61bf41f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ix", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}], "+", 
  RowBox[{"Iy", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.8556847185366173`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"951322a2-eaa8-4407-84ae-1f553b36cc79"]
}, Open  ]],

Cell[TextData[{
 "As a check, use the Evolver function to calculate the evolution of the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "x"], TraditionalForm]],ExpressionUUID->
  "4e712f95-c2fc-45c3-a452-9daaefe90143"],
 " operator under the off-resonance Zeeman Hamiltonian."
}], "Text",
 CellChangeTimes->{{3.66147272233392*^9, 3.6614727570869102`*^9}, {
   3.6614727958845654`*^9, 3.661472872662071*^9}, {3.661473131854478*^9, 
   3.661473138759437*^9}, 3.6614733335244417`*^9, {3.6615993982390747`*^9, 
   3.661599469119955*^9}, {3.6615996560801477`*^9, 3.661599657964798*^9}, {
   3.661599702534917*^9, 3.6615997089029007`*^9}, {3.8555118011141853`*^9, 
   3.8555118060420322`*^9}},
 FontSize->18,ExpressionUUID->"33b08f2f-4f44-4b47-9de5-bca03ba21ea7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalDelta]", " ", "\[Element]", "Reals"}], ",", 
     RowBox[{"\[CapitalDelta]", " ", ">", " ", "0"}], ",", " ", 
     RowBox[{"\[Omega]", " ", "\[Element]", "Reals"}], ",", " ", 
     RowBox[{"\[Omega]", ">=", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Evolver", ",", 
     RowBox[{"quiet", " ", "->", " ", "True"}]}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "this", " ", "to", " ", "False", " ", "when", " ", 
    RowBox[{"debugging", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Evolver", "[", 
  RowBox[{"H", ",", "t", ",", "Ix"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6614726049703293`*^9, 3.661472606627006*^9}, {
   3.661472660162282*^9, 3.6614727211706247`*^9}, {3.661472858979467*^9, 
   3.66147291870306*^9}, {3.661473067543955*^9, 3.6614731530575647`*^9}, {
   3.661599416817731*^9, 3.661599417596442*^9}, {3.6615995568730087`*^9, 
   3.6615996382419167`*^9}, {3.855499929944619*^9, 3.8554999442292833`*^9}, {
   3.855506003173958*^9, 3.855506036357575*^9}, 3.8555061546068697`*^9, {
   3.855511808585477*^9, 3.85551182568471*^9}, {3.855513016260429*^9, 
   3.855513018282111*^9}},
 FontSize->16,
 CellLabel->"In[42]:=",ExpressionUUID->"5d7ee539-d3f4-48ca-aabe-bc10646fb5f2"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", "Iy", " ", 
      SuperscriptBox["\[CapitalDelta]", "3"]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}]]}]], " ", "Iy", " ", 
      SuperscriptBox["\[CapitalDelta]", "3"]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", "Iy", " ", "\[CapitalDelta]", " ", 
      SuperscriptBox["\[Omega]", "2"]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}]]}]], " ", "Iy", " ", 
      "\[CapitalDelta]", " ", 
      SuperscriptBox["\[Omega]", "2"]}], "+", 
     RowBox[{"Ix", " ", 
      SuperscriptBox["\[CapitalDelta]", "2"], " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}]]}]], " ", "Ix", " ", 
      SuperscriptBox["\[CapitalDelta]", "2"], " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "-", 
     RowBox[{"Iz", " ", "\[CapitalDelta]", " ", "\[Omega]", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}]]}]], " ", "Iz", " ", 
      "\[CapitalDelta]", " ", "\[Omega]", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}]]}]], " ", "Iz", " ", 
      "\[CapitalDelta]", " ", "\[Omega]", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}]]}]], " ", "Ix", " ", 
      SuperscriptBox["\[Omega]", "2"], " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.855684719056177*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"136e47f4-3d16-4970-a2a1-13ad46b75943"]
}, Open  ]],

Cell["Some simplification is needed to get a nice-looking answer.", "Text",
 CellChangeTimes->{{3.66147272233392*^9, 3.6614727570869102`*^9}, {
   3.6614727958845654`*^9, 3.661472872662071*^9}, {3.661473131854478*^9, 
   3.661473138759437*^9}, 3.6614733335244417`*^9, {3.6615993982390747`*^9, 
   3.661599469119955*^9}, {3.6615996560801477`*^9, 3.661599657964798*^9}, {
   3.661599702534917*^9, 3.6615997089029007`*^9}, {3.8555118011141853`*^9, 
   3.8555118060420322`*^9}, {3.855512976407572*^9, 3.855512991990921*^9}},
 FontSize->18,ExpressionUUID->"329bcee6-c85d-4796-b76f-e8dc316da813"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalDelta]", " ", "\[Element]", "Reals"}], ",", 
     RowBox[{"\[CapitalDelta]", " ", ">", " ", "0"}], ",", " ", 
     RowBox[{"\[Omega]", " ", "\[Element]", "Reals"}], ",", " ", 
     RowBox[{"\[Omega]", ">=", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Rho]", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"ExpToTrig", "[", 
       RowBox[{"Evolver", "[", 
        RowBox[{"H", ",", "t", ",", "Ix"}], "]"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"Ix", ",", "Iy", ",", "Iz"}], "}"}], ",", "Simplify"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6614726049703293`*^9, 3.661472606627006*^9}, {
  3.661472660162282*^9, 3.6614727211706247`*^9}, {3.661472858979467*^9, 
  3.66147291870306*^9}, {3.661473067543955*^9, 3.6614731530575647`*^9}, {
  3.661599416817731*^9, 3.661599417596442*^9}, {3.6615995568730087`*^9, 
  3.6615996382419167`*^9}},
 FontSize->16,
 CellLabel->"In[45]:=",ExpressionUUID->"1d4ee958-21cd-4ee4-ab4d-3ebd68362402"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Ix", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], "+", 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "+", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox["\[CapitalDelta]", "2"], "+", 
    SuperscriptBox["\[Omega]", "2"]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", "Iz", " ", "\[CapitalDelta]", " ", "\[Omega]", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", "t", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[CapitalDelta]", "2"], "+", 
         SuperscriptBox["\[Omega]", "2"]}]]}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox["\[CapitalDelta]", "2"], "+", 
    SuperscriptBox["\[Omega]", "2"]}]], "+", 
  FractionBox[
   RowBox[{"Iy", " ", "\[CapitalDelta]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"t", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[CapitalDelta]", "2"], "+", 
     SuperscriptBox["\[Omega]", "2"]}]]]}]], "Output",
 CellChangeTimes->{3.8556847204517384`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"48bd1ee3-6c54-44b6-a11e-753037756a46"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantum optics", "Section",
 CellChangeTimes->{{3.661599727498398*^9, 
  3.661599733336445*^9}},ExpressionUUID->"075ed698-265d-4b6e-82d3-\
693ec9c7ae65"],

Cell[CellGroupData[{

Cell["Operators", "Subsection",
 CellChangeTimes->{{3.66159987182402*^9, 3.661599876507362*^9}},
 FontSize->24,ExpressionUUID->"8e5e675f-c4bf-4619-b9a3-6d74b82b3c81"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<UniDyn`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "H", ",", "Ix", ",", " ", "Iy", ",", " ", "Iz", ",", "\[CapitalDelta]", ",",
    "\[Omega]", ",", " ", "g", ",", " ", "F", ",", " ", "aL", ",", "aR", ",", 
   "Q$sym", ",", " ", "P$sym", ",", " ", "Q", ",", "P", ",", "QP$rules"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"{", 
    RowBox[{
    "\[CapitalDelta]", ",", "\[Omega]", ",", "\[CapitalDelta]\[Omega]", ",", 
     "g", ",", " ", "F", ",", "\[Phi]"}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CreateOperator", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ix", ",", " ", "Iy", ",", " ", "Iz"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"aL", ",", "aR"}], "}"}]}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SpinSingle$CreateOperators", "[", 
   RowBox[{"Ix", ",", " ", "Iy", ",", " ", "Iz", ",", " ", 
    RowBox[{"1", "/", "2"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OscSingle$CreateOperators", "[", 
    RowBox[{"aL", ",", "aR"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q$sym", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"aR", "+", "aL"}], ")"}], "/", 
    RowBox[{"Sqrt", "[", "2", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P$sym", " ", "=", 
   RowBox[{"I", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"aR", "-", "aL"}], ")"}], "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QP$rules", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"aR", " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Q", " ", "-", " ", 
         RowBox[{"I", " ", "P"}]}], ")"}], "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}]}], ",", " ", 
     RowBox[{"aL", " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Q", " ", "+", " ", 
         RowBox[{"I", " ", "P"}]}], ")"}], "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQve5LGb+J+2tHXZOFYiCae8U5GRAtfKxdGUSnhJVq
gGl/E20QneD3uQREq74MLAPROUZrOkD0Z4+fnWB63fl+sPrnBRNBdLa08AUQ
zfIjAExXXPj1GUTnFp39CaLXJHzjNAXS02ac5ALRixi3lYNo4Q+7wLS6qN5Z
EH3y2lQw/e6nmv4WIG309R2YbrC9vANEP/Nx2AmirVgiGj4B6fXTGvpAtJLn
zzUg+k43z3oQva5x414QfWVSyj4QvcH91XkQfWki7yUQnWL//iaIrtVf+BhE
P/I+9ApEK/SJvQfRbFe/fwHRxs7830D0vkUeYp+BdNKt+eIg+pNFqCyIfrGp
DUzPXKO9HkSHzLwEpnfXpn2vL3jtKG99GUwDAAcQx/E=
  "],
 FontSize->16,
 CellLabel->"In[47]:=",ExpressionUUID->"fcf52e1f-2f00-4ab4-9769-ba630c5f4602"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "nocreate", 
   "\"Spin operators already exist.\"", 2, 51, 7, 19344918016878384063, 
   "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.855684720497037*^9},
 CellLabel->
  "During evaluation of \
In[47]:=",ExpressionUUID->"ad629e4a-f091-459d-82c6-7a5e917540e1"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "comm", 
   "\"Adding spin commutations relations.\"", 2, 51, 8, 19344918016878384063, 
   "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.855684720502434*^9},
 CellLabel->
  "During evaluation of \
In[47]:=",ExpressionUUID->"cd6558e9-5c97-4415-9b4e-401f6efb2aef"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "simplify", 
   "\"Angular momentum L = 1/2. Adding operator simplification rules.\"", 2, 
   51, 9, 19344918016878384063, "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.855684720506454*^9},
 CellLabel->
  "During evaluation of \
In[47]:=",ExpressionUUID->"b04f61fe-953e-438a-a8f7-6e2b493a83b6"],

Cell[BoxData[
 TemplateBox[{
  "OscSingle$CreateOperators", "nocreate", 
   "\"Oscillator operators already exist.\"", 2, 52, 10, 19344918016878384063,
    "Local", "Osc`OscSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.855684720510829*^9},
 CellLabel->
  "During evaluation of \
In[47]:=",ExpressionUUID->"16e0ff90-6aa5-4e50-83f8-dcb902076121"],

Cell[BoxData[
 TemplateBox[{
  "OscSingle$CreateOperators", "comm", 
   "\"Adding oscillator commutations relations.\"", 2, 52, 11, 
   19344918016878384063, "Local", "Osc`OscSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.85568472051735*^9},
 CellLabel->
  "During evaluation of \
In[47]:=",ExpressionUUID->"0e2f6216-bb94-4290-a3d4-f5ae0b145c43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Q$sym", " ", "/.", " ", "QP$rules"}], " ", "//", " ", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P$sym", " ", "/.", " ", "QP$rules"}], " ", "//", " ", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.682860938059808*^9, 3.6828609575341873`*^9}},
 FontSize->16,
 CellLabel->"In[56]:=",ExpressionUUID->"3557371a-385f-4036-85c1-cb279db328ba"],

Cell[BoxData["Q"], "Output",
 CellChangeTimes->{3.855684720529689*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"e4820cd1-b2db-482b-8fdb-ef33dfb7f0b1"],

Cell[BoxData["P"], "Output",
 CellChangeTimes->{3.85568472053281*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"10403c6a-025c-497e-a5fe-bb42acffb312"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hamiltonians", "Subsection",
 CellChangeTimes->{{3.6615998667071342`*^9, 3.661599884226001*^9}, 
   3.661601417076589*^9},
 FontSize->24,ExpressionUUID->"2ee4a907-cd3a-4091-aa99-b9f4faca65b3"],

Cell[CellGroupData[{

Cell["Free evolution", "Subsubsection",
 CellChangeTimes->{{3.6616014374360332`*^9, 
  3.661601442085188*^9}},ExpressionUUID->"23381176-f60d-4f95-a313-\
e254cbc06dc7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"\[Omega]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[Omega]", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$0", " ", "=", " ", 
   RowBox[{
    FractionBox["\[Omega]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"aR", "**", "aL"}], " ", "+", " ", 
      RowBox[{"aL", "**", "aR"}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599989586681*^9}, {
  3.661600801286552*^9, 3.661600807763794*^9}, {3.6616014623905563`*^9, 
  3.6616014681434603`*^9}, {3.661602151408037*^9, 3.661602151876782*^9}},
 FontSize->16,
 CellLabel->"In[58]:=",ExpressionUUID->"f1498f4a-d74e-4bbc-ac14-f62106dde580"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Evolver", "[", 
    RowBox[{"H$0", ",", "t", ",", "Q$sym"}], "]"}], "  ", "/.", " ", 
   "QP$rules"}], "]"}]], "Input",
 CellChangeTimes->{{3.6615999979301577`*^9, 3.661600052902892*^9}, {
  3.661600252980455*^9, 3.6616003005713778`*^9}, {3.661600331228952*^9, 
  3.6616003753055487`*^9}, {3.661600425748569*^9, 3.6616004460721083`*^9}, {
  3.661600561499104*^9, 3.661600577381302*^9}, {3.661600638480967*^9, 
  3.661600666015003*^9}, {3.661600701280002*^9, 3.6616007310693493`*^9}, {
  3.661601465126539*^9, 3.66160147977136*^9}},
 FontSize->16,
 CellLabel->"In[60]:=",ExpressionUUID->"44173c89-4aae-449c-80c4-0631752e388b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Q", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"t", " ", "\[Omega]"}], "]"}]}], "-", 
  RowBox[{"P", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"t", " ", "\[Omega]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.8556847215737743`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"5c2a1efe-474b-4445-8c42-eeda67945d22"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Position or momentum kick", "Subsubsection",
 CellChangeTimes->{{3.682860588363377*^9, 3.682860595142614*^9}, {
  3.682860754542385*^9, 
  3.682860756985935*^9}},ExpressionUUID->"732605c5-2fc7-4600-84f6-\
1843950a2e2a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Delta]x", ",", "\[Delta]p"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"\[Delta]x", ",", " ", "Reals"}], "]"}], ",", 
     RowBox[{"Element", "[", 
      RowBox[{"\[Delta]p", ",", " ", "Reals"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$0$x$kick", " ", "=", " ", 
   RowBox[{"\[Delta]x", " ", "P$sym"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$0$p$kick", " ", "=", " ", 
   RowBox[{"\[Delta]p", " ", "Q$sym"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.682860602373087*^9, 3.6828606886124907`*^9}, {
  3.6828607412552156`*^9, 3.682860783850297*^9}, {3.6828608502780323`*^9, 
  3.6828609082849617`*^9}, {3.682861014319292*^9, 3.682861025296002*^9}},
 FontSize->16,
 CellLabel->"In[61]:=",ExpressionUUID->"486f6406-f25c-4edf-89ab-3706c90469ca"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Evolver", "[", 
     RowBox[{"H$0$x$kick", " ", ",", "t", ",", "Q$sym"}], "]"}], "  ", "/.", 
    " ", 
    RowBox[{"QP$rules", " ", "~", "Join", "~", " ", 
     RowBox[{"{", 
      RowBox[{"t", "\[Rule]", " ", "1"}], "}"}]}]}], "]"}], "  ", "//", " ", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Evolver", "[", 
     RowBox[{"H$0$p$kick", " ", ",", "t", ",", "P$sym"}], "]"}], "  ", "/.", 
    " ", 
    RowBox[{"QP$rules", " ", "~", "Join", "~", " ", 
     RowBox[{"{", 
      RowBox[{"t", "\[Rule]", " ", "1"}], "}"}]}]}], "]"}], "  ", "//", " ", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.682860694277486*^9, 3.682860700189041*^9}, {
  3.6828607877223043`*^9, 3.682860856687479*^9}},
 FontSize->16,
 CellLabel->"In[65]:=",ExpressionUUID->"9a3a138a-7ef8-42be-9233-03185cb08747"],

Cell[BoxData[
 RowBox[{"Q", "-", "\[Delta]x"}]], "Output",
 CellChangeTimes->{3.855684721648776*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"b2e136d9-5fb4-48a0-b69a-afbb28add358"],

Cell[BoxData[
 RowBox[{"P", "+", "\[Delta]p"}]], "Output",
 CellChangeTimes->{3.8556847216670923`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"1acd8358-1067-44f1-9477-4d221c5487ff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Phase Kick", "Subsubsection",
 CellChangeTimes->{{3.6616014374360332`*^9, 3.661601442085188*^9}, {
  3.661602158368636*^9, 
  3.6616021598723507`*^9}},ExpressionUUID->"41858e2d-7e10-4e49-b231-\
c669ae98c3af"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"\[Omega]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[Omega]", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$0$phase$kick", " ", "=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"(", 
      RowBox[{"\[Omega]", "+", "\[CapitalDelta]\[Omega]"}], ")"}], "2"], " ", 
    
    RowBox[{"(", 
     RowBox[{
      RowBox[{"aR", "**", "aL"}], " ", "+", " ", 
      RowBox[{"aL", "**", "aR"}]}], ")"}]}]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599989586681*^9}, {
  3.661600801286552*^9, 3.661600807763794*^9}, {3.6616014623905563`*^9, 
  3.6616014681434603`*^9}, {3.661602151408037*^9, 3.661602214021371*^9}, {
  3.661602491512672*^9, 3.661602492367771*^9}, {3.6828606400056334`*^9, 
  3.682860643777688*^9}},
 FontSize->16,
 CellLabel->"In[67]:=",ExpressionUUID->"08e6d34d-c4fb-43b3-b202-a94f0f18fa91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Evolver", "[", 
      RowBox[{"H$0$phase$kick", ",", "t", ",", "Q$sym"}], "]"}], "  ", "/.", 
     " ", "QP$rules"}], "]"}], " ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{"\[CapitalDelta]\[Omega]", "\[Rule]", " ", 
     RowBox[{"\[CapitalDelta]\[Phi]", "/", "t"}]}], "}"}]}], " ", "//", " ", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.6615999979301577`*^9, 3.661600052902892*^9}, {
  3.661600252980455*^9, 3.6616003005713778`*^9}, {3.661600331228952*^9, 
  3.6616003753055487`*^9}, {3.661600425748569*^9, 3.6616004460721083`*^9}, {
  3.661600561499104*^9, 3.661600577381302*^9}, {3.661600638480967*^9, 
  3.661600666015003*^9}, {3.661600701280002*^9, 3.6616007310693493`*^9}, {
  3.661601465126539*^9, 3.66160147977136*^9}, {3.6616022234776773`*^9, 
  3.661602260916905*^9}, {3.661602496981515*^9, 3.661602497788101*^9}, {
  3.6828606480883417`*^9, 3.682860649632365*^9}},
 FontSize->16,
 CellLabel->"In[69]:=",ExpressionUUID->"c76ec6b7-1daf-424d-af2b-440c438305a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Q", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[CapitalDelta]\[Phi]", "+", 
     RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], "-", 
  RowBox[{"P", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[CapitalDelta]\[Phi]", "+", 
     RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.85568472446726*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"9dfbddbe-17fc-4c8d-9fab-4776c10b65d2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Force ", "Subsubsection",
 CellChangeTimes->{{3.661601509513736*^9, 3.661601517167842*^9}, {
  3.661601685086095*^9, 
  3.6616016856139593`*^9}},ExpressionUUID->"7c90b3f8-f411-4d32-af1e-\
1f756afc0518"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"F", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"F", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$1", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", " ", "F"}], " ", "Q$sym"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599989586681*^9}, {
  3.661600801286552*^9, 3.661600807763794*^9}, {3.661600966070225*^9, 
  3.661601010459141*^9}, {3.661601621266842*^9, 3.661601648932316*^9}, {
  3.682861688695294*^9, 3.682861758265929*^9}},
 FontSize->16,
 CellLabel->"In[70]:=",ExpressionUUID->"746e8bbc-b64f-4a76-a7ad-0943b01b70ae"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Evolver", "[", 
    RowBox[{"H$1", ",", "t", ",", "Q$sym"}], "]"}], " ", "/.", " ", 
   "QP$rules"}], " ", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Evolver", "[", 
    RowBox[{"H$1", ",", "t", ",", "P$sym"}], "]"}], " ", "/.", " ", 
   "QP$rules"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6615999979301577`*^9, 3.661600052902892*^9}, {
  3.661600252980455*^9, 3.6616003005713778`*^9}, {3.661600331228952*^9, 
  3.6616003753055487`*^9}, {3.661600425748569*^9, 3.6616004460721083`*^9}, {
  3.661600561499104*^9, 3.661600577381302*^9}, {3.661600638480967*^9, 
  3.661600666015003*^9}, {3.661600701280002*^9, 3.6616007310693493`*^9}, {
  3.661601025010738*^9, 3.6616010520976973`*^9}, {3.66160156137223*^9, 
  3.661601567965077*^9}, {3.66160169077514*^9, 3.661601690909215*^9}, {
  3.682861636522544*^9, 3.682861637763401*^9}, {3.682861709435505*^9, 
  3.682861711471403*^9}, {3.682861764480056*^9, 3.682861784985497*^9}, {
  3.682861846394918*^9, 3.682861862295977*^9}, {3.682861922558144*^9, 
  3.682861922952827*^9}},
 FontSize->16,
 CellLabel->"In[72]:=",ExpressionUUID->"8e911bd6-e939-4418-b6f5-a7c007985682"],

Cell[BoxData["Q"], "Output",
 CellChangeTimes->{3.855684724555909*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"c30a0b14-a79c-4ce3-b76e-6651744a61d8"],

Cell[BoxData[
 RowBox[{"P", "-", 
  RowBox[{"F", " ", "t"}]}]], "Output",
 CellChangeTimes->{3.855684724558951*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"256e5dc5-b2cf-43cd-a061-6178b443ce20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{"Evolver", "[", 
   RowBox[{"H$1", ",", "t", ",", "aR"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"Evolver", "[", 
   RowBox[{"H$1", ",", "t", ",", "aL"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6828619659969263`*^9, 3.682861968297961*^9}},
 FontSize->16,
 CellLabel->"In[74]:=",ExpressionUUID->"f747de03-a945-4f2f-9a8e-2e12764ebdf5"],

Cell[BoxData[
 RowBox[{"aR", "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "F", " ", "t"}], 
   SqrtBox["2"]]}]], "Output",
 CellChangeTimes->{3.855684724633575*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"50893b7e-9625-4474-9444-61748b9929e8"],

Cell[BoxData[
 RowBox[{"aL", "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "F", " ", "t"}], 
   SqrtBox["2"]]}]], "Output",
 CellChangeTimes->{3.8556847246697483`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"8d92caaa-6758-4cf9-98c8-51f0fb62bb17"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Squeezing", "Subsubsection",
 CellChangeTimes->{{3.661601484143311*^9, 
  3.661601489493829*^9}},ExpressionUUID->"00e1af55-0f63-4636-bebc-\
c1a90e5a9f97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"\[CapitalDelta]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[CapitalDelta]", " ", ">", " ", "0"}], ",", " ", 
     RowBox[{"Element", "[", 
      RowBox[{"\[Omega]", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"\[Omega]", " ", ">", " ", "0"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599983983083*^9}, {
  3.66160078782301*^9, 3.661600795025132*^9}, {3.661600826867373*^9, 
  3.6616008381735077`*^9}, {3.661603544609684*^9, 3.6616035787360067`*^9}, {
  3.6616036156599503`*^9, 3.661603619612896*^9}},
 FontSize->16,
 CellLabel->"In[76]:=",ExpressionUUID->"222b41f0-d4c0-4bd3-8b75-35b0f7259305"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Evolver", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[CapitalDelta]", "2"]}], " ", "I", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"aR", "**", "aR"}], " ", "-", " ", 
          RowBox[{"aL", "**", "aL"}]}], ")"}]}], ",", "t", ",", "#"}], "]"}], 
     "  ", "/.", " ", "QP$rules"}], "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"Q$sym", ",", " ", "P$sym"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6616038851683683`*^9, 3.661603946848551*^9}},
 FontSize->16,
 CellLabel->"In[77]:=",ExpressionUUID->"c90fd35e-d52f-4e84-8b4c-a1ae6030084e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"t", " ", "\[CapitalDelta]"}]], " ", "Q"}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "t"}], " ", "\[CapitalDelta]"}]], " ", "P"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.855684725588129*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"dd30807e-8867-40f3-9180-0f2931d0d344"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Evolver", "[", 
      RowBox[{
       RowBox[{
        FractionBox["\[CapitalDelta]", "2"], " ", "I", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"aR", "**", "aR"}], " ", "-", " ", 
          RowBox[{"aL", "**", "aL"}]}], ")"}]}], ",", "t", ",", "#"}], "]"}], 
     "  ", "/.", " ", "QP$rules"}], "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"Q$sym", ",", " ", "P$sym"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6616007406826563`*^9, 3.6616007508623447`*^9}, {
  3.6616008463686867`*^9, 3.661600863540935*^9}, {3.661602942624221*^9, 
  3.661602943210248*^9}, {3.661603589595882*^9, 3.661603793454712*^9}, {
  3.661603959052683*^9, 3.66160396075235*^9}},
 FontSize->16,
 CellLabel->"In[78]:=",ExpressionUUID->"e9f53545-3cd2-418c-a762-9bddaa4dfaca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "t"}], " ", "\[CapitalDelta]"}]], " ", "Q"}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"t", " ", "\[CapitalDelta]"}]], " ", "P"}]}], "}"}]], "Output",
 CellChangeTimes->{3.855684726280809*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"4282f651-3183-4628-81cc-9f3d195115f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{"ExpToTrig", "[", 
      RowBox[{
       RowBox[{"Evolver", "[", 
        RowBox[{
         RowBox[{
          FractionBox["\[CapitalDelta]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"aR", "**", "aR"}], " ", "+", " ", 
            RowBox[{"aL", "**", "aL"}]}], ")"}]}], ",", "t", ",", "#"}], 
        "]"}], "  ", "/.", " ", "QP$rules"}], "]"}], "]"}], "]"}], "&"}], " ",
   "/@", " ", 
  RowBox[{"{", 
   RowBox[{"Q$sym", ",", " ", "P$sym"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6616038251199303`*^9, 3.661603864590372*^9}, {
  3.661603970006435*^9, 3.661603993355975*^9}},
 FontSize->16,
 CellLabel->"In[79]:=",ExpressionUUID->"ac92671f-ef50-487e-a4b2-b021ebe29395"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Q", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}], "+", 
    RowBox[{"P", " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"P", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}], "+", 
    RowBox[{"Q", " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"t", " ", "\[CapitalDelta]"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.855684726678897*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"cc4ac921-cbf8-4020-9c75-178554d5fe74"]
}, Open  ]],

Cell["\<\
Let's remind ourselves what the hyperbolic functions look like\
\>", "Text",
 CellChangeTimes->{{3.661603457102549*^9, 3.661603493792601*^9}},
 FontSize->16,ExpressionUUID->"81e0ca37-16af-4660-9af1-97927ef146b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cosh", "[", "T", "]"}], ",", 
     RowBox[{"Sinh", "[", "T", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.661603424774187*^9, 3.661603455277131*^9}},
 FontSize->16,
 CellLabel->"In[80]:=",ExpressionUUID->"74dc47f7-3fa2-473a-bb35-8498ff99903e"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw12Hc8V9//AHAZyUxSQmRlb1JEr0go2ckoiYw+VpIZ2QktSYVkl1G2MsLh
jbytbImoVEJ5v6+sNw3f0+Px+/11H8/H4zzuPfeec17jijhdtHChp6Oj495E
R/fvqgA75zY2qOhP4ZqefxkNLq6Jxa2tU1HC4GB5ZDENyiqVJRaXqei5lH/d
7SIaqEgZO01/x54iZRTl0WD/tpix7rdU5GQQVT6bQoPDnxc6U0upqHvJjhoT
SQOL6z3PVB2oiBpxy0jRkgaBvTFebo0UdOzGwRumtFUYGmKba3acR6ZaqTm2
B1dBsOkiz/7dP9CSVoHAk+QVeOHRyrR1Yg5N7Mnn2b6+DOduKhPvomaRTbTz
PY4zy0BLColDMIMyBPK/OfcvQS7nJF/Kp2nUtD/LPkRvCdKPK/sOxn9F34mP
svYtixDl6RgkfewL8g8VWli2WIQQhqJA3/kppM82wpv76Sc4RvSKjxR8QmlL
Q3ovwn/C/YavKenuH1GR58zHHxI/oe6DFPtz0UnktPFGNvbNAohxHdY9mTGO
LhuPBttEL0CFTJz71OdRRO4jq5ZqLMCHtnJhdfURpMQp0yezRsBXufsq6OUg
+j6x8me8hYBtYYXqCpv6kZdDq4X3XQJiX0qRuVb70NZ3N8ObEglYp+TbLv7o
Q8dWdHdux55yeBpaM9qHMjpdI2tvE1Chk0vSLetDxQd4TNhuEmDB9NjE2qEP
ib0+1kCKJUCST6SHLqQXKSm0D0eEEiCnTpV7stiN/N/Ns2v8R4CrQnh47UQ3
6tG210+9QECmxNaBnvZuNNH/d33NjQBuXsXAlUfdqP9923C9KwGrq97NBnrd
6NfdT2aGzgSQailWc8ldqGHByDbAgQAbbUqYononKiu8dU/hFAFJ+8L6jwh3
otTqEJkMKwK65DnFbVg7EdWXQ4sT+5CQQkfEZAea42brpVoSILbhtX0gtgPV
F6xV1pgTQGmaz/d7S0bMoUwBjsYEROvN99UGtSPl3oxGzqP4+YY/TNXOt6Mn
/L3rd/QIoDP+/qbEuB1ZdNY934YdajXbnSvajuy2vby08wgBAa5fybe6XyPX
He/C9+oQcCFuoslR+DWiSyMV2moTcKK7p4yF3Ip8NB1286sTkNDXrRhT0Yoc
fcxZivYRQB7qKvmb3oqyDtzz0MQ+OtHxfPFSK9L8QrtzRg2/D6WtYEKgFS0J
LVs/VSFAiasxq/xiC4p4tfHJVJGAHSdLEm15SWjicETHuhReP4kbdUcZSOgC
+fLHTGyzNbcvytRm1EqVtz+KnZAhcoC1vRmxHZi/fleSgL8zyR/qAprRuwXb
HAUJAqavhijsHmlCArabZ0PECPA2vZvSII1QWzNdqZMQAQVLx3/c34TQtELB
FR7sqVTGw97vGlF2/+Cz14IEnPoS+E0ovhFt5y47JIcNwWfVI2YakFiUgcRv
AQK4cmWHdPPrEbe7xa8SPjzflbatZPE6ZFptX3ZuBwG3i3JIh9ZqkcYxlkI+
bI+z4f4vemrRXHH7rkEeAsRfHxjPCahFBh1+9gbYD+4/e3qVXIOO/7YO2bed
gCtqd7VVPauRpO4NZqlteD4zXkTh4WqUnRPgM8NFgGr68VzhHdWop8vKrBD7
BwMjC2fjSySrMOMnh312MGBoZutLtHtexvzAVgJ0fc94ZFRWIeSVfdKVgwAh
CQ2hHXFViKdzWVYB+9e7Hf03zlShZivRKyvsBFTp9KoHM1Uh0Vt/rsRhS2zT
pT9pXYm8NBM5K9gIYC2TTGX5VY42d/SGCLAS8GT8663ZmBIUMPnC2YCZgLHQ
nZmPVUvQncsib4SxOYUMysynipF86kbG+ma8384VDNRCMepq3BpYiq3/1Z03
Yf0ZOizmQieEPUOhZsn4FKID9vyBnEwE7E4UrpgUKkTc0jrWFEa8H5TNW5J6
CpCMdXfGG+yayxVf12UKUEshu3MidjzNT6br61NkdmFP+y5sGfr1So/TeWh+
+BtFiwF/n1yZtj2secgzcl1PDDtJ7/TIYE0uUvvtQs+KvR5bTzu4Mxfxj+hV
jtLj88kWrs3en41c5rjmr2DTFZeaNIVnI+Ge0avO2GomHx38FLLRQOmSvwl2
eqJO1PsbWYhySCJdDHtUZstt21sZ6HWaY9PAJgIOe/1X1jz3GFVG1t1A2AWl
nQPSho/RHzjf+Bw7WO0W7zp9OnrrkGMbh81/iDs7LSgVTSR0uulhR0VcbqEf
SUH5Qfe91LC/k4a+uqumoG+vno+JY9cbPJQ5SHmATlU2zm3GtjffXTV+PhmF
sLlO9dLh/bK4rOHfeg/5knMcW7BDH/Qizr330NmX4nrV2OnjUV0603fR+PqK
Sha2XNgZ83H9u8iKpA/3sV8Jq7/1y09EyeljJQnYVV0Dbab9t1HRtZ7qAOwh
rtj+qKRbKH+XnLkX9qKVxsQLy5uo5nWPsTO2ysfMJYGReDTy4J2PJbb5Xks6
04dxyNDsyEMjbB/3zexRNtfRQ0uqsB526ZKn2MxYDGKL5Dirjv1GQ1hRID0a
DVqFb1PCpoQNaprYR6GGDhUpGWyO1lj9SKFIJFQjmSOObcPtl3cBhaPKv/bh
e7Afpo+9eqNzFWVeHUb82CMSOoNqrVeQN+/t8zuxecrz59L0gxBP+XV3bmzL
g5z0mzr80Q9l0hAndlKbH5+b0WVUG62dw4bdZzqu1NPjg54krQ1swRaqik50
zfJEusYrrpuxH5HNkMoTN3QjT/UsI/auCUHK30In9OlGeQ09tuznYY0H9qcR
x9rFgE3YEuw+DxXczNHhL94P6bAjhqSGBFq0EY9hicA/y22dcGeSF4frIgoM
/zyyEJXJRTMEBh+K8T8TppI/L/qeAut91F//HHJPv9ND7RzU+Stx/Hve37Dg
R5mKLtC1vyKS4d/93Z97Dsq4Q1KMny0TNsOpD9rMEhch1C0wmRm7RTj++mMu
XzhHqVNhxY55IOqz/7YfhEqDGge2Pnu9TT9bIPjJMqZyYTNHWel4xAeDNQur
Iw82eZUizcQcCiljZjd3YSd4xXFnxoTBztpRfkHspwuJV3dHRsD25mx2UWw3
NxnXl3+jIK9zlU8e21A00C5aOwbIXNf2qWJLTbSYmIVeg3iWk1Ua2HMW9vvn
1q5D8MvqcQPsTo4i2eoD8eBHOhFjiv2MvLInJjAB8pXEE62xPQ8lbhFavgnN
f9L6L2Abr73/Pad6GyraNZl9sRWqpBeqfe/AQodgVgg2LfnTDylaInxwK/l1
B7uWNWSY5H8PlsU22TVgZ8nvGCwVTQYNKVJtJ3asWWlfem8yLOvZ3B7FPvng
c1eA9ANgd2B6sPxvfUROkGQmUuDNT+89+/D5fKs3jXgTUuFhxJe9+tiNbhEN
jPvT4NszlWxr7BvFVTWTiY9g6b3dSgi2hIZgaZJeBuj4zPJ3YrOfqX4evpAB
F9NUyJPYi2HmRZ4ZmRBYbzO3iH1uimQhFpoFd04eurUHxyMFqVXjP8PZ8CE2
wjgUu6PSQa88Pg/aLgfXGOH4p9Um1yL5MQ/8az5VumGXjazpZKg/gTvSKuIx
2A/W7sGNz0+gb+D2+UZsZyBrumjnwyLZxP4AjrcbnUrKfAuFsHaxTFsXx2/f
939K7xgUwfwuxjgX7On5ToXNGUVgF2RiEI/dzeUit3j8GUxe6hIfwE47lSrZ
k/ccthdHn/4P54N9U5uEIm1K4b7o55pinE8U6qwXlApLQTN2NmAYWyKpuPXj
WimQZMfT/mCzZT/fl2VcBn0HY3hMtxDw28zm/QalDPjWWHpXsCfKSqWRcgV4
RPQ52uL8NZZut53XrgJs5LaEX8ceiWP64x1VARraWvQvsd+cO90nNFgBWooZ
mjw4/zVyMQeG+VXCVyP3y8PYmT5nW7Wrq4DwU93sgfNp+hmWkvsfqqA0pTk6
EzvFsOrhPPMLeN/t4DaEnSjM6vHY5gVwFPWfA058/vpebPuz9gIaMsp28+N8
7ajE4VCvVQ3H12/XTuF8Lka8WtMk1YLLLOVuE64XQnuOxCzN1wK3iYA5M64v
Roq6OEv46mDU2ynOBDvBZVxM5FIdPNp/zGESmxhbN2YWfgUFlMoSBl48/zaN
nMGr9f/Wd9gZ1y92j6qPe2ogqN3ws4rE9VBVEAzvdUFQb3Rk91tszlPtDh8S
ETil+Z+W30NAM9dbP4sZBAmWXEfGsXmOhJimGzVBxjWXai0RHG9q0oKj1pug
9ueQ+k5xAo7lvusxsSHB/r6yXDEZPJ9rJa5tXiR4W9mcG4udciF642A0Cd5U
KO6aw56Rl1eWLiFBzD6FsxWyBMTVRCQzMLYA+QKjg6E8jic9kqdrSlughS9V
PUGJAAOa/4wIcxuwqslZuOzH9acxN8Pyi3b4cI/uR7A+rsccWRbWOtphQHZT
0AL2qD/dh78T7ZBoRf3vPwMC3DModVs2k+GkYFa4nSEeT+303X2KDF90nvrq
HMfj70ZPHVkhwz6Fz8GiJnj8yFJzknonyAveF1XG9fwdh7cRStXd4D9YmxiJ
+4PYH1ow3d0NYRO7V4Vw/xAWnPPn0VQ3uOhajtRje9/zusLM2QN9x09srOF+
w6SdwW/SGduO+ivYE39vRSW3m9xvQJiZKS/xEp7P3zjjGa9eaB+N7NuF+5V2
E0EOM+5+qJnuKbmfRMC8yI6wgbRB0HxddaqkmQB/P1nHOztHgC9Qt8BhBceX
91wWruRR+MjoZ7aovgDngrW+MZ8Yh46xkx2HrixAi+z+hBamScgRNdSn61oA
CZb6mTzDj1A55uY/IfgTBOs9jjLFfYK9Cu+CNAJ+At06faHv1BTMtViyqkz+
hFXzhrNte7+As7BiK5PBIoyrOQjsjfkKW09vOWTSvAg+1lzbRN9Pg9XfZPEz
ukvAl/zFhlFwBuZOTd39TVqCktNZ+YtBs1CnHrhQbL0M1trhhuSGOWj35Jk7
/30Zys96iWr+/g6bs5jHSDErQGM9wlBrNQ+uB5aSmPatgkX/QXXBFAoUxZd6
MX1eBdaDbM31jymwuGxUIja9Cs15Y0ZncimgunX4me7sKigFBTs+KqHA7N+t
k1HUVeDcU32Tr40CQTsnRNh/r0KHp8rnHT8pOB7Fa+nuwP37FulEzhNUQMdY
vLQNaUC7ROMvMadCsOWVkMtGNCgdb39ibE2Fje+0Y0UmNBAqdX1104kKhE+M
JL8VDX5b5U2zBlPB+tnjb/RONKjO3aPN/JQKHz1Vk2ghNPDmoLY/fYbvb3G5
WDOcBhKBjRb65VTw5rVLuBpFg+Tj9heu1VOBwSk6nimeBr4LafcYBqlQfmJX
ltADGsicdhfKHaXClKlTl2sqDT61ahTqTlJBlle0tjSdBmYpo42Rs1TIGXF/
fySXBlvoC46JUKkg1ifJfecpDZBH4FDTEhVcEkms44U0CBjWdzi3TgV+SavX
ksU0+L//IfD//0P+B9GTqS8=
       "]]},
     Annotation[#, "Charting`Private`Tag$22878#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtlFlQkwcUhVmKUDZxl7IJCoNKBQVxquJFLVaUKIlSqCibigygWFyApu5B
oqIg4IgU1wQlLknBrUDghq0JSgYhGIhBlkACiUl+8lMUGSylMz6cOXMev/Pw
ucal0PabGBkZUabyfy+DuZrJSQL1efFPb4tJTPm8kPl5nECKQpCCTST++XS5
x8gogYzSZ/d6Gklc4UmJU30g8ETTtGTXGhJXzWC8a+4g0IXKufCQS2Jgv+HV
DR6B3Lu58rYcEmlZ4ke+0QSq+U3edBqJaS2Mgwdq9MhcG0lzlxmwvd1KUxur
w1vnj/1k3TmMToKU2asctShuE1nZdxP4PKnBbPp7Df51yUErcNVjTPbyYdlZ
Na60YLM+hWhxLI/ORBhCfuToGk+WBlm23faFfSr8YhMgf9A3hMVblqdKLijR
ik0ffOI7iGeTY9MXBw+gYP0+qdVjJdJNH6al6hTobBVk+Gg9gLGnWxZJS/vw
dVpUouSqAq9VKwuLE3sxr8iPut+9Dyt7PK0fu3WjWaVSq93QgwvtAjfsvCXH
CZHlewm9C8uXMBMV/Z1oZ1xypDJThj2NZQv8/aVYNXzC04YjRaXXtRX4QoIB
WXesiWntOOMkx3+ZcStuM1qbV+DXil7+hFfJSDN2nNg6aOQrxnM/6t5UpAvx
+uHggaNFQpyzk5v7y7w6DHUw1Yg86rD8Y+N00aJKvNtcI0zyqcQSufKymsFF
Ufhjn4sXuLiH6vhMvrcAGfTbJn77CrDCkv627lg+/K1KvDH9eD6sVBg7n4ng
gci7g83Yw4OFw1WfV9dVAEbsGNktroBglky8LaIOJlzu9MQn1EEQZabp6HMh
RIcrZlV1CiEnuuO0z8tmuDk7WWk82gzCbU42oTNbIZJ9EmmbWkHnOudkW5EE
9iUcSuSqJXDs6NLYnLlSuKKiBP2eJYWOLjtavKgTWMu8u9wTZBCTsXbQPEQO
r19ZFEpdu6B+6aqL9WbdcGWXt77erQc8vuUPsTf3gup6Jkf5by848ZOCzJh9
IAuMWqdNUoDRuAknVaEAcVnE6i+T/fCJWh3V6D4AyQu283adUYLcL9rBnaEE
p1qHXo7XIBwOt5vh1qWCgVl+lOp3Q2BfMBDxjdMQlOcqos2Pa4AbeefBSLoa
5OXhr2pBC+EBpzaLqjUQzS4tkn3UQVnUQbfVEx+ggftk1LSMgDHLjaYVYTpw
PuAnCG0ZBlrrGn+nQj3w7scUn+MbwHKNVS3/ph4mW8dTXwgMUMt+t3U3Sw+X
zn94q24wgE96RuwfXD2M7w1bTxMbwNblZbZ9ox5yW3Rli7sN0JS8on8OqYcj
3J/njUwaINBica5tCAHM4vnvhzeSMPbr2HdcKgEzd3ufWrmZBJ5cWEIJJ+BA
3euy30JIcObFV2XHTe0cx6ZpYSRMhLFVlhkElKS/qXePJ+ElyyXA/D4BXlw3
81NMEg7ZEML7jwhIzTpc25xNgkdaDW3TFOdziLN1uEpCwZY9CZl8AiwyKmIq
bpCQaijKN5UQ0AYGzcRDEpZEJjqzOgkIdJu/bjuPhL6GHzgbuglILBtZdO8p
CaGFnTVn1ATszKdyg/kkWJiUBrsSBHwfOp96S0ACJqW1C/6Z+vWyI3OkgYTj
bzdFx4wT4Hv59I7gJhK++gu++gv+A1hLo6A=
       "]]},
     Annotation[#, "Charting`Private`Tag$22878#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 1}, {-1.1752011306609194`, 1.5430805868478494`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.855684727124796*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"7948b6eb-3788-4bb3-8012-a152a4772515"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"ExpToTrig", "[", 
       RowBox[{
        RowBox[{"Evolver", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox["\[Omega]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"aR", "**", "aL"}], " ", "+", " ", 
              RowBox[{"aL", "**", "aR"}]}], ")"}]}], "-", 
           RowBox[{
            FractionBox["\[CapitalDelta]", "2"], " ", "I", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"aR", "**", "aR"}], " ", "-", " ", 
              RowBox[{"aL", "**", "aL"}]}], ")"}]}]}], ",", "t", ",", "#"}], 
         "]"}], "  ", "/.", " ", "QP$rules"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Q", ",", "P"}], "}"}]}], "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"Q$sym", ",", " ", "P$sym"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6616007406826563`*^9, 3.6616007508623447`*^9}, {
   3.6616008463686867`*^9, 3.661600913052218*^9}, {3.661602359732606*^9, 
   3.661602475878283*^9}, {3.661602521111289*^9, 3.661602558018815*^9}, {
   3.661602619035358*^9, 3.661602633379653*^9}, 3.661602980534584*^9, {
   3.661604027321581*^9, 3.661604067830595*^9}},
 FontSize->16,
 CellLabel->"In[81]:=",ExpressionUUID->"aaf1adfb-451e-40be-823e-749d9419d781"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"P", " ", "\[Omega]", " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"t", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "-", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "-", 
        SuperscriptBox["\[Omega]", "2"]}]]]}], "+", 
    RowBox[{"Q", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cosh", "[", 
        RowBox[{"t", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "-", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}], "+", 
       FractionBox[
        RowBox[{"\[CapitalDelta]", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[CapitalDelta]", "2"], "-", 
             SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "-", 
          SuperscriptBox["\[Omega]", "2"]}]]]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"Q", " ", "\[Omega]", " ", 
      RowBox[{"Sinh", "[", 
       RowBox[{"t", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "-", 
          SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "-", 
       SuperscriptBox["\[Omega]", "2"]}]]], "+", 
    RowBox[{"P", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cosh", "[", 
        RowBox[{"t", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "-", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}], "-", 
       FractionBox[
        RowBox[{"\[CapitalDelta]", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[CapitalDelta]", "2"], "-", 
             SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[CapitalDelta]", "2"], "-", 
          SuperscriptBox["\[Omega]", "2"]}]]]}], ")"}]}]}]}], "}"}]], "Output",\

 CellChangeTimes->{3.855684730983149*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"eb83af93-9a6e-456c-8b1a-ebb45704c4da"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Another quantum optics example", "Section",
 CellChangeTimes->{{3.836676278620495*^9, 
  3.836676285785801*^9}},ExpressionUUID->"4b89dec7-6a48-4de3-b090-\
1c14f2c7865e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<UniDyn`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Lambda]", ",", "t", ",", " ", "Ix", ",", " ", "Iy", ",", " ", "Iz", ",",
     "I$m", ",", " ", "I$p", ",", "aL", ",", "aR", ",", " ", "H"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "t"}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CreateOperator", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ix", ",", " ", "Iy", ",", " ", "Iz", ",", "I$m", ",", "I$p"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"aL", ",", "aR"}], "}"}]}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OscSingle$CreateOperators", "[", 
   RowBox[{"aL", ",", "aR"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdyk0og3EAx/HRkpfJYZkD2tBYLVbbRLRYDogMmdxobSKWJW+pZRy8pGir
iZM4aIdne5C8ZolSDl7aEHIZwkbIZvMo8fz+h2+fyzdD11VviOZwOEI26Ar1
JSnLX9S5ygUBTHCcpEH+4VgW1Df2SogapRS21AR7oNhf1wc75dQ4DFYwE0TX
6TT5n0xW2JHKP4Pc71riwNlPEBq7jxlItYTj8llnZo/i4WLUej/kf2wTc5Lz
juHRpZ34xmTL1ljlX29Ei8q7CR+rS7dgEbfJ8slKz1imYGYlQ8HbSR4NXcMr
u/DcpnfD5fLAKfRYEz1QX/J+Dc2yhXt4V7UfgKIpwTuMuYiEoKIsKQzdixWC
IKvuZj4FfhZq0+Hz6ihxjpLSsGHOQ9wxt0aGTC9qYbGXGBlh0nz2V7U2ECuE
vPa/TEgnp4uh36srgBtLDuKeSDEIf1UlxHrKZ4O25lE7lDgNTlj3bSQePGjO
Ydu0+Qr+A51hCW8=
  "],
 FontSize->16,
 CellLabel->"In[82]:=",ExpressionUUID->"1dfb0cad-1b54-4142-9aa7-21c0c1614cda"],

Cell[BoxData[
 TemplateBox[{
  "OscSingle$CreateOperators", "nocreate", 
   "\"Oscillator operators already exist.\"", 2, 86, 12, 19344918016878384063,
    "Local", "Osc`OscSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8556847311896057`*^9},
 CellLabel->
  "During evaluation of \
In[82]:=",ExpressionUUID->"bc684fdd-3107-4b59-9fb8-283a214d8825"],

Cell[BoxData[
 TemplateBox[{
  "OscSingle$CreateOperators", "comm", 
   "\"Adding oscillator commutations relations.\"", 2, 86, 13, 
   19344918016878384063, "Local", "Osc`OscSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.855684731199335*^9},
 CellLabel->
  "During evaluation of \
In[82]:=",ExpressionUUID->"9c4bd388-af62-4332-b0cf-5496f375d810"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"I$p", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"I$p", ",", "I$m"}], "]"}], "=", 
   RowBox[{"2", " ", "Iz"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"I$p", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"I$p", ",", "Iz"}], "]"}], "=", 
   RowBox[{"-", "I$p"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$m", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"I$m", ",", "I$p"}], "]"}], "=", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "Iz"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"I$m", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"I$m", ",", "Iz"}], "]"}], "=", "I$m"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Iz", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"Iz", ",", "I$p"}], "]"}], "=", "I$p"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Iz", "/:", 
   RowBox[{"Comm", "[", 
    RowBox[{"Iz", ",", "I$m"}], "]"}], "=", 
   RowBox[{"-", "I$m"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8366774989243097`*^9, 3.83667749925176*^9}, {
  3.836677559362499*^9, 3.8366776213838663`*^9}, {3.8366777728844557`*^9, 
  3.836677789961767*^9}, {3.83667783078938*^9, 3.836677960774514*^9}, {
  3.8366780124640627`*^9, 3.836678026117797*^9}, {3.836678096600881*^9, 
  3.8366781021921167`*^9}},
 FontSize->16,
 CellLabel->"In[87]:=",ExpressionUUID->"42ade78e-2cb7-4eeb-b907-81b2885d75f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Iz", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "Iz", ",", "Iz", ",", "b___"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a", ",", "b"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$p", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "I$p", ",", "I$p", ",", "b___"}], "]"}], ":=", "0"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I$m", "/:", 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a___", ",", "I$m", ",", "I$m", ",", "b___"}], "]"}], ":=", 
    "0"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$p", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "I$p", ",", "Iz", ",", "b___"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", " ", 
     FractionBox["1", "2"]}], 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a", ",", "I$p", ",", "b"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I$p", "/:", 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a___", ",", "I$p", ",", "I$m", ",", "b___"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}], "+", 
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"a", ",", "Iz", ",", "b"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$m", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "I$m", ",", "Iz", ",", "b___"}], "]"}], ":=", " ", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a", ",", "I$m", ",", "b"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I$m", "/:", 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a___", ",", "I$m", ",", "I$p", ",", "b___"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}], "-", 
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"a", ",", "Iz", ",", "b"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$z", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "I$z", ",", "Ip", ",", "b___"}], "]"}], ":=", "  ", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a", ",", "I$p", ",", "b"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I$z", "/:", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a___", ",", "I$z", ",", "I$m", ",", "b___"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a", ",", "I$m", ",", "b"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.836678223740842*^9, 3.83667824021528*^9}, {
   3.8366793286094112`*^9, 3.836679617748658*^9}, 3.836679674230486*^9},
 FontSize->16,
 CellLabel->"In[93]:=",ExpressionUUID->"36cab0d1-5783-4276-91ca-5e0b2cf81e49"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", " ", "=", " ", 
   RowBox[{"\[Lambda]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"I$p", "**", "aL"}], "+", 
      RowBox[{"I$m", "**", "aR"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Comm", "[", 
  RowBox[{
   RowBox[{"I", " ", "H"}], ",", "aL"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8366801945311832`*^9, 3.836680260688924*^9}},
 FontSize->16,
 CellLabel->
  "In[102]:=",ExpressionUUID->"0152f6e7-6dd3-49c4-b784-87785b88346c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[ImaginaryI]"}], " ", "I$m", " ", "\[Lambda]"}]], "Output",
 CellChangeTimes->{3.855684731246607*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"bd697669-3e7a-4565-adf2-53f187870de2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Comm", "[", 
  RowBox[{
   RowBox[{"I", " ", "H"}], ",", 
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{"I", " ", "H"}], ",", "aL"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.836680263211213*^9, 3.836680278955698*^9}},
 FontSize->16,
 CellLabel->
  "In[104]:=",ExpressionUUID->"2389743e-3926-46c6-b54d-4edab22162fa"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["\[Lambda]", "2"], " ", 
  RowBox[{"Iz", "**", "aL"}]}]], "Output",
 CellChangeTimes->{3.855684731256008*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"f0cb0c2b-64e2-4a19-b359-f92689556dc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Comm", "[", 
  RowBox[{
   RowBox[{"I", " ", "H"}], ",", " ", "aR"}], "]"}]], "Input",
 CellChangeTimes->{{3.836694703371355*^9, 3.8366947128340282`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"40de0c0f-f1e1-4fb8-acab-c96f277b0fb0"],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", "I$p", " ", "\[Lambda]"}]], "Output",
 CellChangeTimes->{3.855684731290235*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"f3d60189-7c09-4164-8d7b-90a1d6139a2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Comm", "[", 
  RowBox[{
   RowBox[{"I", " ", "H"}], ",", 
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{"I", " ", "H"}], ",", "aR"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.836694655842784*^9},
 CellLabel->
  "In[106]:=",ExpressionUUID->"0d9e265e-1a04-49a8-bb2a-ba912f819101"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["\[Lambda]", "2"], " ", 
  RowBox[{"Iz", "**", "aR"}]}]], "Output",
 CellChangeTimes->{3.855684731299094*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"8069a33a-f56c-4678-a765-aae28727bac2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{
    RowBox[{"I", " ", "H"}], ",", 
    RowBox[{"Comm", "[", 
     RowBox[{
      RowBox[{"I", " ", "H"}], ",", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"I", " ", "H"}], ",", "aL"}], "]"}]}], "]"}]}], "]"}], "  ", "//",
   " ", "Simplify"}]], "Input",
 CellChangeTimes->{{3.836680293145762*^9, 3.8366803437969112`*^9}},
 FontSize->16,
 CellLabel->
  "In[107]:=",ExpressionUUID->"b5a95bf0-f590-48ba-9623-1a477eefc176"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[ImaginaryI]"}], " ", 
  SuperscriptBox["\[Lambda]", "3"], " ", 
  RowBox[{"(", 
   RowBox[{"I$m", "-", 
    RowBox[{"2", " ", 
     RowBox[{"I$m", "**", "aL", "**", "aR"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"I$p", "**", "aL", "**", "aL"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.855684731332458*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"c48284f0-ac5c-47cb-88fa-3b72c8259fb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{
    RowBox[{"I", " ", "H"}], ",", " ", 
    RowBox[{"Comm", "[", 
     RowBox[{
      RowBox[{"I", " ", "H"}], ",", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"I", " ", "H"}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"I", " ", "H"}], ",", "aL"}], "]"}]}], "]"}]}], "]"}]}], 
   " ", "]"}], " ", "//", " ", "Simplify", " "}]], "Input",
 CellChangeTimes->{{3.836680349847651*^9, 3.836680360897409*^9}},
 FontSize->16,
 CellLabel->
  "In[108]:=",ExpressionUUID->"5629108b-749a-4d29-b105-17710c99b8e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[Lambda]", "4"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"3", " ", "aL"}], "-", 
    RowBox[{"4", " ", 
     RowBox[{"Iz", "**", "aL"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"Iz", "**", "aL", "**", "aL", "**", "aR"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"Iz", "**", "aL", "**", "aR", "**", "aL"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.855684731368272*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"4293d1c7-e488-4b37-a0b0-ae4bdd74b2dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Evolver", "[", 
  RowBox[{
   RowBox[{"\[Lambda]", " ", "Iz"}], ",", "t", ",", "I$p"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Evolver", "[", 
  RowBox[{
   RowBox[{"\[Lambda]", " ", "Iz"}], ",", "t", ",", "I$m"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.836678046010539*^9, 3.83667808469143*^9}, {
  3.836678118978841*^9, 3.836678120390438*^9}},
 FontSize->16,
 CellLabel->
  "In[109]:=",ExpressionUUID->"7de76042-1344-4ab3-a1c3-92588030fa02"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Lambda]"}]], " ", 
  "I$p"}]], "Output",
 CellChangeTimes->{3.855684731646513*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"23d4d892-7ecd-43c2-88c2-185aa7ec49e4"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Lambda]"}]], " ", 
  "I$m"}]], "Output",
 CellChangeTimes->{3.855684731881797*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"ae7cedc8-9f1a-42a2-acd5-971437d27752"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evolver", "[", 
   RowBox[{
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"I$p", "**", "aL"}], "+", 
       RowBox[{"I$m", "**", "aR"}]}], ")"}]}], ",", "t", ",", "aL"}], "]"}], 
  " ", "//", " ", "Simplify"}]], "Input",
 CellChangeTimes->{{3.8366781435408993`*^9, 3.8366781720361767`*^9}, {
  3.8366796919248123`*^9, 3.836679694601782*^9}},
 FontSize->16,
 CellLabel->
  "In[111]:=",ExpressionUUID->"a9735267-6089-487e-848e-33acf0468835"],

Cell[BoxData[
 TemplateBox[{
  "Evolver", "unsolvable", "\"Unrecognized evolution\"", 2, 111, 14, 
   19344918016878384063, "Local", "Evolve`Evolver"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.855684732480275*^9},
 CellLabel->
  "During evaluation of \
In[111]:=",ExpressionUUID->"ea6de83b-6b9d-4767-8cd8-00fa6d3bbfcf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"aL", ",", 
   RowBox[{"\[ImaginaryI]", " ", "I$m", " ", "\[Lambda]"}], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[Lambda]", "2"], " ", 
    RowBox[{"Iz", "**", "aL"}]}], ",", 
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[Lambda]", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"I$m", "-", 
      RowBox[{"2", " ", 
       RowBox[{"I$m", "**", "aL", "**", "aR"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"I$p", "**", "aL", "**", "aL"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[Lambda]", "4"]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "aL"}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL", "**", "aL", "**", "aR"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL", "**", "aR", "**", "aL"}]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.855684732485574*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"64bf4ebe-2071-4e7c-8a64-c5110cb40c62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evolver", "[", 
   RowBox[{
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"(", 
      RowBox[{"I$m", "**", "aR"}], ")"}]}], ",", "t", ",", "aL"}], "]"}], " ",
   "//", " ", "Simplify"}]], "Input",
 CellChangeTimes->{3.836682235871724*^9},
 CellLabel->
  "In[112]:=",ExpressionUUID->"fce5eff0-10eb-4b76-a5ff-d16fc165d0da"],

Cell[BoxData[
 RowBox[{"aL", "+", 
  RowBox[{
  "\[ImaginaryI]", " ", "I$m", " ", "t", " ", "\[Lambda]"}]}]], "Output",
 CellChangeTimes->{3.855684732557268*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"059be930-e115-416f-94c3-65b95863d3cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evolver", "[", 
   RowBox[{
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"I$p", "**", "aL"}], "+", 
       RowBox[{"I$m", "**", "aR"}]}], ")"}]}], ",", "t", ",", 
    RowBox[{"(", 
     RowBox[{"aL", " ", "-", " ", "aR"}], ")"}]}], "]"}], " ", "//", " ", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.836695794938993*^9, 3.836695800856147*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"9f6f87e7-27cf-4b76-8ef6-91aa3f20ade5"],

Cell[BoxData[
 TemplateBox[{
  "Evolver", "unsolvable", "\"Unrecognized evolution\"", 2, 113, 15, 
   19344918016878384063, "Local", "Evolve`Evolver"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.85568473475738*^9},
 CellLabel->
  "During evaluation of \
In[113]:=",ExpressionUUID->"4895dee2-1486-487f-a38a-dc77aaaa7c90"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"aL", "-", "aR"}], ",", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{"I$m", "+", "I$p"}], ")"}], " ", "\[Lambda]"}], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[Lambda]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Iz", "**", "aL"}], "-", 
      RowBox[{"Iz", "**", "aR"}]}], ")"}]}], ",", 
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[Lambda]", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"I$m", "-", "I$p", "-", 
      RowBox[{"2", " ", 
       RowBox[{"I$m", "**", "aL", "**", "aR"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"I$m", "**", "aR", "**", "aR"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"I$p", "**", "aL", "**", "aL"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"I$p", "**", "aR", "**", "aL"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[Lambda]", "4"]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "aL"}], "-", 
      RowBox[{"3", " ", "aR"}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL"}]}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aR"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL", "**", "aL", "**", "aR"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aL", "**", "aR", "**", "aL"}]}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aR", "**", "aL", "**", "aR"}]}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Iz", "**", "aR", "**", "aR", "**", "aL"}]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.855684734807869*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"2beec26e-e53f-42e8-9af8-577d72a3c442"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Failing cases", "Section",
 CellChangeTimes->{{3.661604273535866*^9, 
  3.6616042801731567`*^9}},ExpressionUUID->"1123775e-cb4a-4e3d-8bd9-\
2566684252fd"],

Cell[CellGroupData[{

Cell["Off-resonance evolution of Iz is touchy", "Subsubsection",
 CellChangeTimes->{{3.682853897109785*^9, 
  3.682853924034186*^9}},ExpressionUUID->"74c49c22-35e0-44bd-9343-\
26c9a570889b"],

Cell["\<\
This Evolution broke in upgrading from Mathematica 10 to 11.  Figure out why.\
\
\>", "Text",
 CellChangeTimes->{{3.682853925069911*^9, 
  3.6828539480419188`*^9}},ExpressionUUID->"7d125066-aa16-49c4-99d7-\
cb8772e0d7c1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "Ix$sym", ",", " ", "Iy$sym", ",", " ", "Iz$sym", ",", " ", "Sx$sym", ",", 
   " ", "Sy$sym", ",", " ", "Sz$sym", ",", " ", "\[Omega]", ",", " ", "d$sym",
    ",", " ", "\[CapitalDelta]", ",", " ", "rho$sym", ",", " ", "t$sym"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "A", ",", " ", "r", ",", " ", "lhs$list", ",", " ", "rhs$list", ",", " ", 
    "time", ",", " ", "eqns", ",", " ", "system", ",", " ", "rho$calc", ",", 
    " ", "rho$known", ",", " ", "X"}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"\[Omega]", ",", " ", "d$sym", ",", " ", "\[CapitalDelta]"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CreateOperator", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ix$sym", ",", " ", "Iy$sym", ",", " ", "Iz$sym"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"Sx$sym", ",", " ", "Sy$sym", ",", " ", "Sz$sym"}], "}"}]}], 
    "}"}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"SpinSingle$CreateOperators", "[", 
   RowBox[{"Ix$sym", ",", " ", "Iy$sym", ",", " ", "Iz$sym", ",", " ", 
    RowBox[{"L", "=", 
     RowBox[{"1", "/", "2"}]}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SpinSingle$CreateOperators", "[", 
   RowBox[{"Sx$sym", ",", " ", "Sy$sym", ",", " ", "Sz$sym", ",", " ", 
    RowBox[{"L", "=", 
     RowBox[{"1", "/", "2"}]}]}], "]"}], ";"}]}], "Input",
 CellLabel->
  "In[114]:=",ExpressionUUID->"e84fc74a-5679-4d4b-9b0e-348b1dbb7c6a"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "nocreate", 
   "\"Spin operators already exist.\"", 2, 118, 16, 19344918016878384063, 
   "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.855684734912631*^9},
 CellLabel->
  "During evaluation of \
In[114]:=",ExpressionUUID->"19470997-e036-47b3-bb78-95c6f9f3853a"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "comm", 
   "\"Adding spin commutations relations.\"", 2, 118, 17, 
   19344918016878384063, "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.855684734915094*^9},
 CellLabel->
  "During evaluation of \
In[114]:=",ExpressionUUID->"3d57e56a-20ff-4504-9e06-67dc59b3668f"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "simplify", 
   "\"Angular momentum L = 1/2. Adding operator simplification rules.\"", 2, 
   118, 18, 19344918016878384063, "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.855684734920104*^9},
 CellLabel->
  "During evaluation of \
In[114]:=",ExpressionUUID->"ddee86f9-9915-492d-a99c-567d4d5c4d5e"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "nocreate", 
   "\"Spin operators already exist.\"", 2, 119, 19, 19344918016878384063, 
   "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.855684734924876*^9},
 CellLabel->
  "During evaluation of \
In[114]:=",ExpressionUUID->"a3d08b6e-0134-4afb-9c50-c82d7c4f386b"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "comm", 
   "\"Adding spin commutations relations.\"", 2, 119, 20, 
   19344918016878384063, "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.85568473492968*^9},
 CellLabel->
  "During evaluation of \
In[114]:=",ExpressionUUID->"66e3bccf-268b-481b-b63c-355c797ad205"],

Cell[BoxData[
 TemplateBox[{
  "SpinSingle$CreateOperators", "simplify", 
   "\"Angular momentum L = 1/2. Adding operator simplification rules.\"", 2, 
   119, 21, 19344918016878384063, "Local", "Spins`SpinSingle$CreateOperators"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.855684734933617*^9},
 CellLabel->
  "During evaluation of \
In[114]:=",ExpressionUUID->"f05aec3c-0bf6-45ed-b3a6-95fdb944e163"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rho$known", " ", "=", " ", 
    RowBox[{"Collect", "[", "\n", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"constant1", " ", "Iz$sym"}], " ", "+", " ", 
        RowBox[{"constant2", " ", "Ix$sym"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"constant3", " ", "Iz$sym"}], " ", "-", " ", 
           RowBox[{"constant2", " ", "Ix$sym"}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"omega$eff", " ", "t$sym"}], "]"}]}], " ", "-", " ", 
        RowBox[{"constant4", " ", "Iy$sym", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"omega$eff", " ", "t$sym"}], "]"}]}]}], " ", "//", " ", 
       "\n", "    ", "Expand"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Ix$sym", ",", " ", "Iy$sym", ",", " ", "Iz$sym"}], "}"}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rho$calc", " ", "=", " ", 
    RowBox[{"Collect", "[", "\n", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"Evolver", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[CapitalDelta]", " ", "Iz$sym"}], " ", "+", " ", 
          RowBox[{"\[Omega]", " ", "Ix$sym"}]}], " ", ",", " ", "t$sym", ",", 
         " ", "Iz$sym", ",", " ", 
         RowBox[{"quiet", " ", "->", " ", "True"}]}], "]"}], " ", "//", " ", 
       "FullSimplify"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Ix$sym", ",", " ", "Iy$sym", ",", " ", "Iz$sym"}], "}"}], ",",
       "Expand"}], "]"}]}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.6828539971267843`*^9, 3.682854142716613*^9}, {
  3.682854234186981*^9, 3.6828542652062473`*^9}, {3.682854330660592*^9, 
  3.6828543329939013`*^9}, {3.682854708606367*^9, 3.682854727712431*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"833979b0-559c-4832-8ddc-79760cd2f9ba"],

Cell[CellGroupData[{

Cell[BoxData["rho$known"], "Input",
 CellLabel->
  "In[122]:=",ExpressionUUID->"55c28625-7aac-469b-85bc-13070f709222"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ix$sym", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"\[CapitalDelta]", " ", "\[Omega]"}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]], "-", 
     FractionBox[
      RowBox[{"\[CapitalDelta]", " ", "\[Omega]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t$sym", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "+", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]}], ")"}]}], "+", 
  RowBox[{"Iz$sym", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[CapitalDelta]", "2"], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Omega]", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t$sym", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "+", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{"Iy$sym", " ", "\[Omega]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"t$sym", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[CapitalDelta]", "2"], "+", 
     SuperscriptBox["\[Omega]", "2"]}]]]}]], "Output",
 CellChangeTimes->{3.85568474253561*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"46919da1-395f-4f81-b87c-83a4345c0ded"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rho$calc", " "}]], "Input",
 CellChangeTimes->{{3.6828542698954763`*^9, 3.6828542731195374`*^9}, {
  3.682854565784657*^9, 3.6828546066844263`*^9}, {3.68285464301569*^9, 
  3.6828546958659763`*^9}, {3.682854737272936*^9, 3.682854740237505*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"0f327f76-4261-4f6d-8f02-d9de5a67598c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ix$sym", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"\[CapitalDelta]", " ", "\[Omega]"}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]], "-", 
     FractionBox[
      RowBox[{"\[CapitalDelta]", " ", "\[Omega]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t$sym", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "+", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]}], ")"}]}], "+", 
  RowBox[{"Iz$sym", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[CapitalDelta]", "2"], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Omega]", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t$sym", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "2"], "+", 
           SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[CapitalDelta]", "2"], "+", 
       SuperscriptBox["\[Omega]", "2"]}]]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{"Iy$sym", " ", "\[Omega]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"t$sym", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]}], "]"}]}], 
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[CapitalDelta]", "2"], "+", 
     SuperscriptBox["\[Omega]", "2"]}]]]}]], "Output",
 CellChangeTimes->{3.855684742547665*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"7c7f7ac2-d6ef-4cb9-aaef-d6d046e53413"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Force with a phase factor ", "Subsubsection",
 CellChangeTimes->{{3.661601509513736*^9, 3.661601517167842*^9}, {
  3.661601685086095*^9, 3.6616016856139593`*^9}, {3.661604369472599*^9, 
  3.661604373430613*^9}},ExpressionUUID->"ed11fadd-da27-44fa-8971-\
693b19711d91"],

Cell[TextData[{
 "This fails because Mathematica cannot recognize that ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Comm", "[", 
    RowBox[{
     RowBox[{"aL", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "aR"}], "]"}], "\[Rule]",
    "  ", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "i"}], " ", "\[Phi]"}]], " ", 
     RowBox[{"Comm", "[", 
      RowBox[{"aL", ",", "aR"}], "]"}]}], "\[Rule]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "i"}], " ", "\[Phi]"}]]}]}]],
  CellChangeTimes->{
   3.661600376064962*^9, {3.661600426843581*^9, 3.66160044692731*^9}, {
    3.661600567841215*^9, 3.66160057816276*^9}, {3.661600643374647*^9, 
    3.6616006677359037`*^9}, {3.661600698704836*^9, 3.661600731836134*^9}, {
    3.6616010484626513`*^9, 3.6616010618633747`*^9}, 3.6616015385193167`*^9, 
    3.6616015689219103`*^9, {3.6616016294550962`*^9, 3.661601652197709*^9}, 
    3.661601691539207*^9, 3.6616021841194553`*^9, 3.661602350590143*^9, 
    3.661602505026248*^9, 3.661604317425989*^9, {3.6616043721031218`*^9, 
    3.66160438973948*^9}, 3.6828519218874083`*^9, 3.682860512411813*^9, 
    3.6828607332919893`*^9, 3.6828616117405653`*^9, 3.682861811635421*^9, 
    3.682862041754469*^9, 3.682862099291905*^9},
  FontSize->16,ExpressionUUID->"ee49f84a-729d-4496-92c7-bc1ddb078959"],
 ".  Conclude that the Comm[] function is not yet smart enough to factor a",
 StyleBox[" function of scalar",
  FontSlant->"Italic"],
 " out of a commutator.  "
}], "Text",
 CellChangeTimes->{{3.682862327680539*^9, 3.682862438992874*^9}},
 FontSize->18,ExpressionUUID->"cd3234c9-a50f-4cdb-8cfc-5b0f207ddf0f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CreateScalar", "[", 
   RowBox[{"{", 
    RowBox[{"F", ",", "\[Phi]"}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"F", ",", " ", "Reals"}], "]"}], ",", " ", 
     RowBox[{"F", " ", ">", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H$1", " ", "=", " ", 
   RowBox[{"F", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "i"}], " ", "\[Phi]"}], "]"}], " ", "aL"}], " ", "+", 
      " ", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"i", " ", "\[Phi]"}], "]"}], " ", "aL"}]}], " ", ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.661599888053211*^9, 3.661599989586681*^9}, {
  3.661600801286552*^9, 3.661600807763794*^9}, {3.661600966070225*^9, 
  3.661601010459141*^9}, {3.661601621266842*^9, 3.661601648932316*^9}, {
  3.6616043049887943`*^9, 3.66160435768355*^9}, {3.6828620738967447`*^9, 
  3.682862087158081*^9}},
 FontSize->16,
 CellLabel->
  "In[124]:=",ExpressionUUID->"89a7f557-2f12-47c9-9cd6-1b86e6ec1cde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evolver", "[", 
   RowBox[{"H$1", ",", "t", ",", "aR"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.6615999979301577`*^9, 3.661600052902892*^9}, {
  3.661600252980455*^9, 3.6616003005713778`*^9}, {3.661600331228952*^9, 
  3.6616003753055487`*^9}, {3.661600425748569*^9, 3.6616004460721083`*^9}, {
  3.661600561499104*^9, 3.661600577381302*^9}, {3.661600638480967*^9, 
  3.661600666015003*^9}, {3.661600701280002*^9, 3.6616007310693493`*^9}, {
  3.661601025010738*^9, 3.6616010520976973`*^9}, {3.66160156137223*^9, 
  3.661601567965077*^9}, {3.66160169077514*^9, 3.661601690909215*^9}, {
  3.661604378984228*^9, 3.661604387210058*^9}},
 FontSize->16,
 CellLabel->
  "In[127]:=",ExpressionUUID->"169bb051-39eb-4eb7-afbc-82b19fa93e13"],

Cell[BoxData[
 TemplateBox[{
  "Evolver", "unsolvable", "\"Unrecognized evolution\"", 2, 127, 22, 
   19344918016878384063, "Local", "Evolve`Evolver"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.855684762680086*^9},
 CellLabel->
  "During evaluation of \
In[127]:=",ExpressionUUID->"e3c50140-80d0-4254-9dce-aebd4a5d7f93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"aR", ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "F", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["F", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], ")"}]}], 
   ",", 
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["F", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}], 
      "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}], 
      "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}], 
      "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], "]"}]}], 
       "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}], 
     ")"}]}], ",", 
   RowBox[{
    SuperscriptBox["F", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
                RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}],
        "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
                RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}],
        "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
                RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}],
        "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
                RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}],
        "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
                RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}],
        "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
                RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}],
        "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
                RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}],
        "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]]}], ",", "aR"}], "]"}]}], 
           "]"}]}], "]"}]}], "]"}], "+", 
      RowBox[{"Comm", "[", 
       RowBox[{
        RowBox[{"aL", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
          RowBox[{"-", "1"}]]}], ",", 
        RowBox[{"Comm", "[", 
         RowBox[{
          RowBox[{"aL", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
            RowBox[{"-", "1"}]]}], ",", 
          RowBox[{"Comm", "[", 
           RowBox[{
            RowBox[{"aL", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
              RowBox[{"-", "1"}]]}], ",", 
            RowBox[{"Comm", "[", 
             RowBox[{
              RowBox[{"aL", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"i", " ", "\[Phi]"}]], ")"}], 
                RowBox[{"-", "1"}]]}], ",", "aR"}], "]"}]}], "]"}]}], "]"}]}],
        "]"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8556847626919193`*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"b438ade2-e485-4646-87bd-ad681799c0b6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1190, 1027},
WindowMargins->{{16, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"039357db-4bf2-465c-bcef-5f181f5db5b2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 269, 4, 98, "Title",ExpressionUUID->"391a202e-1e28-48b9-91a8-88743dfbb72d"],
Cell[852, 28, 211, 6, 90, "Text",ExpressionUUID->"9c13195a-2f5b-44a0-b9d6-7d334412a0b8"],
Cell[1066, 36, 418, 10, 38, "Text",ExpressionUUID->"d5e7dddf-7378-41a8-a0a7-42b519c56421"],
Cell[CellGroupData[{
Cell[1509, 50, 171, 3, 67, "Section",ExpressionUUID->"4f5edf7b-f0b5-41bd-98ab-96ef2604d472"],
Cell[1683, 55, 370, 9, 84, "Text",ExpressionUUID->"72627f24-66c0-4362-93bf-94bb3be82d04"],
Cell[2056, 66, 830, 17, 61, "Input",ExpressionUUID->"1d4257d9-d4f6-4f1d-ad1c-8f90af652578"],
Cell[2889, 85, 207, 2, 36, "Text",ExpressionUUID->"5a5f6383-8d48-41c2-b70f-bd0112887a06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3133, 92, 160, 3, 67, "Section",ExpressionUUID->"b69153fa-f825-45f0-8739-690e4abd6b5a"],
Cell[3296, 97, 741, 15, 64, "Text",ExpressionUUID->"3655837e-64da-408c-9c7c-8c2b99bb2c37"],
Cell[CellGroupData[{
Cell[4062, 116, 797, 18, 113, "Input",ExpressionUUID->"ab7657da-a278-4379-a33e-689bfd39b35b"],
Cell[4862, 136, 231, 3, 34, "Output",ExpressionUUID->"d9904eb6-d1e9-4f76-9760-95086d817ae7"],
Cell[5096, 141, 186, 2, 34, "Output",ExpressionUUID->"2dad5fdc-95fe-4de0-8601-9e88256b4e09"]
}, Open  ]],
Cell[5297, 146, 381, 7, 64, "Text",ExpressionUUID->"931bda02-bd34-4f64-836d-d38976e30a7a"],
Cell[CellGroupData[{
Cell[5703, 157, 785, 18, 61, "Input",ExpressionUUID->"8777a335-4ef0-48ee-99fe-4f94f81dcf5c"],
Cell[6491, 177, 442, 10, 24, "Message",ExpressionUUID->"b4c6405a-85a9-49a3-9ea1-bb9b3e35dac4"],
Cell[6936, 189, 646, 13, 24, "Message",ExpressionUUID->"421c61a1-3555-4b4e-9823-9e1d089a66b3"],
Cell[7585, 204, 1375, 52, 806, "Print",ExpressionUUID->"d9c59dd6-09f4-46fb-a536-d9d07d764b95"],
Cell[8963, 258, 428, 10, 24, "Message",ExpressionUUID->"353dffd3-f89d-4971-84fd-0dabac55384b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9440, 274, 226, 4, 67, "Section",ExpressionUUID->"40dd6435-da21-4952-afcb-9ffff154b643"],
Cell[9669, 280, 512, 9, 64, "Text",ExpressionUUID->"82a186b2-ec29-4d77-89ae-048209ebd5ef"],
Cell[CellGroupData[{
Cell[10206, 293, 1020, 21, 61, "Input",ExpressionUUID->"8c2cad5a-cd1e-4d46-9c12-f91019b722de"],
Cell[11229, 316, 881, 26, 62, "Output",ExpressionUUID->"7c75eb8e-a29b-4c71-9191-3a1cddfa9d62"]
}, Open  ]],
Cell[12125, 345, 534, 9, 64, "Text",ExpressionUUID->"f066a196-5844-4b85-8fa4-78a71c0d7d77"],
Cell[CellGroupData[{
Cell[12684, 358, 583, 16, 61, "Input",ExpressionUUID->"64231d27-0bce-42ea-b9d6-f63ce6c02bb6"],
Cell[13270, 376, 1374, 40, 142, "Output",ExpressionUUID->"979bafa6-600f-4b3a-a8ce-f7b73c740519"]
}, Open  ]],
Cell[14659, 419, 206, 2, 38, "Text",ExpressionUUID->"a45755e1-b303-4fa9-8287-c9aa13e6116c"],
Cell[CellGroupData[{
Cell[14890, 425, 966, 21, 61, "Input",ExpressionUUID->"90433bd8-d59d-4c8b-a733-562dc43b0402"],
Cell[15859, 448, 163645, 2894, 320, "Output",ExpressionUUID->"0ada09b7-9001-4481-b744-2af2183d6766"]
}, Open  ]],
Cell[179519, 3345, 217, 3, 38, "Text",ExpressionUUID->"95fe649a-8e59-499e-854e-ff37d92fdfe8"],
Cell[CellGroupData[{
Cell[179761, 3352, 2260, 58, 115, "Input",ExpressionUUID->"1a2b1bfe-4738-4185-a2e2-26ef206bd1ae"],
Cell[CellGroupData[{
Cell[182046, 3414, 300, 9, 32, "Print",ExpressionUUID->"ddea573a-3625-4e3a-b163-656a2289727a"],
Cell[182349, 3425, 298, 9, 32, "Print",ExpressionUUID->"fe5bb21c-1c7e-4482-b2a3-2ebcfe801d04"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[182708, 3441, 189, 3, 67, "Section",ExpressionUUID->"dfefb8e6-da99-4bd0-9ed1-b6a5a4d41ff7"],
Cell[182900, 3446, 192, 2, 38, "Text",ExpressionUUID->"96351404-c45d-448b-bc63-4e93635996bb"],
Cell[CellGroupData[{
Cell[183117, 3452, 1336, 27, 113, "Input",ExpressionUUID->"d3806585-b421-434c-abd9-2e9f505618f8"],
Cell[184456, 3481, 373, 8, 24, "Message",ExpressionUUID->"e7080daf-12cd-45e3-8d15-ea15c808e892"],
Cell[184832, 3491, 385, 9, 24, "Message",ExpressionUUID->"a63d00e2-a517-4ea9-9333-cde9a13cbbb5"],
Cell[185220, 3502, 389, 9, 24, "Message",ExpressionUUID->"4fffcaa6-472e-449a-a955-41438099e86e"]
}, Open  ]],
Cell[185624, 3514, 172, 2, 38, "Text",ExpressionUUID->"790179ad-eee3-4590-9ea5-c33ab8188bdb"],
Cell[185799, 3518, 344, 8, 34, "Input",ExpressionUUID->"05cbd74f-efee-4f1b-a208-324ee6d0e8c7"],
Cell[CellGroupData[{
Cell[186168, 3530, 170, 3, 54, "Subsection",ExpressionUUID->"3edc2822-178a-4639-8fec-8b6ef46811f8"],
Cell[186341, 3535, 392, 13, 38, "Text",ExpressionUUID->"34675cf0-7997-4d0b-a96f-f8d967d8b44a"],
Cell[186736, 3550, 1314, 33, 87, "Input",ExpressionUUID->"00b31c7a-1c82-4221-8d6b-8ea8027766bc"],
Cell[188053, 3585, 196, 2, 38, "Text",ExpressionUUID->"b43409e0-25e0-4280-ad0b-dcfaf4176c3f"],
Cell[CellGroupData[{
Cell[188274, 3591, 425, 10, 61, "Input",ExpressionUUID->"d89ee293-dc04-450b-b734-b369ac840c1e"],
Cell[188702, 3603, 1491, 46, 124, "Output",ExpressionUUID->"799d92ab-23b7-4071-ba44-0b0e299d5195"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[190242, 3655, 159, 3, 54, "Subsection",ExpressionUUID->"21e579fd-e317-4909-88f0-fcd87faade2f"],
Cell[190404, 3660, 751, 14, 39, "Text",ExpressionUUID->"c2b7809c-24c2-4413-a8f0-940fecbbaca8"],
Cell[CellGroupData[{
Cell[191180, 3678, 1062, 25, 87, "Input",ExpressionUUID->"47722331-ebc1-4891-8149-acdea61bf41f"],
Cell[192245, 3705, 361, 9, 34, "Output",ExpressionUUID->"951322a2-eaa8-4407-84ae-1f553b36cc79"]
}, Open  ]],
Cell[192621, 3717, 760, 14, 39, "Text",ExpressionUUID->"33b08f2f-4f44-4b47-9de5-bca03ba21ea7"],
Cell[CellGroupData[{
Cell[193406, 3735, 1422, 29, 87, "Input",ExpressionUUID->"5d7ee539-d3f4-48ca-aabe-bc10646fb5f2"],
Cell[194831, 3766, 3848, 101, 94, "Output",ExpressionUUID->"136e47f4-3d16-4970-a2a1-13ad46b75943"]
}, Open  ]],
Cell[198694, 3870, 590, 7, 38, "Text",ExpressionUUID->"329bcee6-c85d-4796-b76f-e8dc316da813"],
Cell[CellGroupData[{
Cell[199309, 3881, 1171, 27, 61, "Input",ExpressionUUID->"1d4ee958-21cd-4ee4-ab4d-3ebd68362402"],
Cell[200483, 3910, 1494, 44, 66, "Output",ExpressionUUID->"48bd1ee3-6c54-44b6-a11e-753037756a46"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[202038, 3961, 159, 3, 67, "Section",ExpressionUUID->"075ed698-265d-4b6e-82d3-693ec9c7ae65"],
Cell[CellGroupData[{
Cell[202222, 3968, 166, 2, 59, "Subsection",ExpressionUUID->"8e5e675f-c4bf-4619-b9a3-6d74b82b3c81"],
Cell[CellGroupData[{
Cell[202413, 3974, 2728, 74, 269, "Input",ExpressionUUID->"fcf52e1f-2f00-4ab4-9769-ba630c5f4602"],
Cell[205144, 4050, 384, 9, 24, "Message",ExpressionUUID->"ad629e4a-f091-459d-82c6-7a5e917540e1"],
Cell[205531, 4061, 386, 9, 24, "Message",ExpressionUUID->"cd6558e9-5c97-4415-9b4e-401f6efb2aef"],
Cell[205920, 4072, 418, 9, 24, "Message",ExpressionUUID->"b04f61fe-953e-438a-a8f7-6e2b493a83b6"],
Cell[206341, 4083, 387, 9, 24, "Message",ExpressionUUID->"16e0ff90-6aa5-4e50-83f8-dcb902076121"],
Cell[206731, 4094, 388, 9, 24, "Message",ExpressionUUID->"0e2f6216-bb94-4290-a3d4-f5ae0b145c43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207156, 4108, 395, 9, 61, "Input",ExpressionUUID->"3557371a-385f-4036-85c1-cb279db328ba"],
Cell[207554, 4119, 149, 2, 34, "Output",ExpressionUUID->"e4820cd1-b2db-482b-8fdb-ef33dfb7f0b1"],
Cell[207706, 4123, 148, 2, 34, "Output",ExpressionUUID->"10403c6a-025c-497e-a5fe-bb42acffb312"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[207903, 4131, 198, 3, 59, "Subsection",ExpressionUUID->"2ee4a907-cd3a-4091-aa99-b9f4faca65b3"],
Cell[CellGroupData[{
Cell[208126, 4138, 167, 3, 45, "Subsubsection",ExpressionUUID->"23381176-f60d-4f95-a313-e254cbc06dc7"],
Cell[208296, 4143, 833, 21, 78, "Input",ExpressionUUID->"f1498f4a-d74e-4bbc-ac14-f62106dde580"],
Cell[CellGroupData[{
Cell[209154, 4168, 689, 13, 34, "Input",ExpressionUUID->"44173c89-4aae-449c-80c4-0631752e388b"],
Cell[209846, 4183, 345, 9, 34, "Output",ExpressionUUID->"5c2a1efe-474b-4445-8c42-eeda67945d22"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[210240, 4198, 225, 4, 45, "Subsubsection",ExpressionUUID->"732605c5-2fc7-4600-84f6-1843950a2e2a"],
Cell[210468, 4204, 987, 24, 113, "Input",ExpressionUUID->"486f6406-f25c-4edf-89ab-3706c90469ca"],
Cell[CellGroupData[{
Cell[211480, 4232, 926, 24, 61, "Input",ExpressionUUID->"9a3a138a-7ef8-42be-9233-03185cb08747"],
Cell[212409, 4258, 179, 3, 34, "Output",ExpressionUUID->"b2e136d9-5fb4-48a0-b69a-afbb28add358"],
Cell[212591, 4263, 181, 3, 34, "Output",ExpressionUUID->"1acd8358-1067-44f1-9477-4d221c5487ff"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[212821, 4272, 214, 4, 45, "Subsubsection",ExpressionUUID->"41858e2d-7e10-4e49-b231-c669ae98c3af"],
Cell[213038, 4278, 1029, 26, 80, "Input",ExpressionUUID->"08e6d34d-c4fb-43b3-b202-a94f0f18fa91"],
Cell[CellGroupData[{
Cell[214092, 4308, 1063, 21, 34, "Input",ExpressionUUID->"c76ec6b7-1daf-424d-af2b-440c438305a8"],
Cell[215158, 4331, 434, 11, 34, "Output",ExpressionUUID->"9dfbddbe-17fc-4c8d-9fab-4776c10b65d2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[215641, 4348, 208, 4, 45, "Subsubsection",ExpressionUUID->"7c90b3f8-f411-4d32-af1e-1f756afc0518"],
Cell[215852, 4354, 742, 18, 61, "Input",ExpressionUUID->"746e8bbc-b64f-4a76-a7ad-0943b01b70ae"],
Cell[CellGroupData[{
Cell[216619, 4376, 1216, 23, 61, "Input",ExpressionUUID->"8e911bd6-e939-4418-b6f5-a7c007985682"],
Cell[217838, 4401, 149, 2, 34, "Output",ExpressionUUID->"c30a0b14-a79c-4ce3-b76e-6651744a61d8"],
Cell[217990, 4405, 194, 4, 34, "Output",ExpressionUUID->"256e5dc5-b2cf-43cd-a061-6178b443ce20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218221, 4414, 432, 10, 61, "Input",ExpressionUUID->"f747de03-a945-4f2f-9a8e-2e12764ebdf5"],
Cell[218656, 4426, 252, 6, 54, "Output",ExpressionUUID->"50893b7e-9625-4474-9444-61748b9929e8"],
Cell[218911, 4434, 254, 6, 54, "Output",ExpressionUUID->"8d92caaa-6758-4cf9-98c8-51f0fb62bb17"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[219214, 4446, 160, 3, 45, "Subsubsection",ExpressionUUID->"00e1af55-0f63-4636-bebc-c1a90e5a9f97"],
Cell[219377, 4451, 790, 16, 34, "Input",ExpressionUUID->"222b41f0-d4c0-4bd3-8b75-35b0f7259305"],
Cell[CellGroupData[{
Cell[220192, 4471, 701, 19, 51, "Input",ExpressionUUID->"c90fd35e-d52f-4e84-8b4c-a1ae6030084e"],
Cell[220896, 4492, 427, 12, 37, "Output",ExpressionUUID->"dd30807e-8867-40f3-9180-0f2931d0d344"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221360, 4509, 872, 21, 51, "Input",ExpressionUUID->"e9f53545-3cd2-418c-a762-9bddaa4dfaca"],
Cell[222235, 4532, 424, 11, 37, "Output",ExpressionUUID->"4282f651-3183-4628-81cc-9f3d195115f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222696, 4548, 813, 22, 51, "Input",ExpressionUUID->"ac92671f-ef50-487e-a4b2-b021ebe29395"],
Cell[223512, 4572, 642, 18, 34, "Output",ExpressionUUID->"cc4ac921-cbf8-4020-9c75-178554d5fe74"]
}, Open  ]],
Cell[224169, 4593, 222, 4, 36, "Text",ExpressionUUID->"81e0ca37-16af-4660-9af1-97927ef146b6"],
Cell[CellGroupData[{
Cell[224416, 4601, 437, 12, 34, "Input",ExpressionUUID->"74dc47f7-3fa2-473a-bb35-8498ff99903e"],
Cell[224856, 4615, 9157, 171, 239, "Output",ExpressionUUID->"7948b6eb-3788-4bb3-8012-a152a4772515"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234050, 4791, 1399, 34, 86, "Input",ExpressionUUID->"aaf1adfb-451e-40be-823e-749d9419d781"],
Cell[235452, 4827, 2434, 74, 70, "Output",ExpressionUUID->"eb83af93-9a6e-456c-8b1a-ebb45704c4da"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[237959, 4909, 175, 3, 67, "Section",ExpressionUUID->"4b89dec7-6a48-4de3-b090-1c14f2c7865e"],
Cell[CellGroupData[{
Cell[238159, 4916, 1522, 40, 139, "Input",ExpressionUUID->"1dfb0cad-1b54-4142-9aa7-21c0c1614cda"],
Cell[239684, 4958, 389, 9, 24, "Message",ExpressionUUID->"bc684fdd-3107-4b59-9fb8-283a214d8825"],
Cell[240076, 4969, 389, 9, 24, "Message",ExpressionUUID->"9c4bd388-af62-4332-b0cf-5496f375d810"]
}, Open  ]],
Cell[240480, 4981, 1325, 37, 165, "Input",ExpressionUUID->"42ade78e-2cb7-4eeb-b907-81b2885d75f1"],
Cell[241808, 5020, 3241, 86, 523, "Input",ExpressionUUID->"36cab0d1-5783-4276-91ca-5e0b2cf81e49"],
Cell[CellGroupData[{
Cell[245074, 5110, 494, 15, 61, "Input",ExpressionUUID->"0152f6e7-6dd3-49c4-b784-87785b88346c"],
Cell[245571, 5127, 225, 5, 34, "Output",ExpressionUUID->"bd697669-3e7a-4565-adf2-53f187870de2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245833, 5137, 352, 10, 34, "Input",ExpressionUUID->"2389743e-3926-46c6-b54d-4edab22162fa"],
Cell[246188, 5149, 243, 6, 34, "Output",ExpressionUUID->"f0cb0c2b-64e2-4a19-b359-f92689556dc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246468, 5160, 261, 6, 30, "Input",ExpressionUUID->"40de0c0f-f1e1-4fb8-acab-c96f277b0fb0"],
Cell[246732, 5168, 207, 4, 34, "Output",ExpressionUUID->"f3d60189-7c09-4164-8d7b-90a1d6139a2e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246976, 5177, 313, 9, 30, "Input",ExpressionUUID->"0d9e265e-1a04-49a8-bb2a-ba912f819101"],
Cell[247292, 5188, 243, 6, 34, "Output",ExpressionUUID->"8069a33a-f56c-4678-a765-aae28727bac2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247572, 5199, 496, 15, 34, "Input",ExpressionUUID->"b5a95bf0-f590-48ba-9623-1a477eefc176"],
Cell[248071, 5216, 440, 12, 34, "Output",ExpressionUUID->"c48284f0-ac5c-47cb-88fa-3b72c8259fb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248548, 5233, 607, 18, 34, "Input",ExpressionUUID->"5629108b-749a-4d29-b105-17710c99b8e2"],
Cell[249158, 5253, 533, 16, 34, "Output",ExpressionUUID->"4293d1c7-e488-4b37-a0b0-ae4bdd74b2dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249728, 5274, 476, 13, 61, "Input",ExpressionUUID->"7de76042-1344-4ab3-a1c3-92588030fa02"],
Cell[250207, 5289, 292, 8, 34, "Output",ExpressionUUID->"23d4d892-7ecd-43c2-88c2-185aa7ec49e4"],
Cell[250502, 5299, 272, 7, 34, "Output",ExpressionUUID->"ae7cedc8-9f1a-42a2-acd5-971437d27752"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250811, 5311, 508, 14, 34, "Input",ExpressionUUID->"a9735267-6089-487e-848e-33acf0468835"],
Cell[251322, 5327, 341, 8, 24, "Message",ExpressionUUID->"ea6de83b-6b9d-4767-8cd8-00fa6d3bbfcf"],
Cell[251666, 5337, 1069, 30, 37, "Output",ExpressionUUID->"64bf4ebe-2071-4e7c-8a64-c5110cb40c62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252772, 5372, 354, 10, 30, "Input",ExpressionUUID->"fce5eff0-10eb-4b76-a5ff-d16fc165d0da"],
Cell[253129, 5384, 244, 6, 34, "Output",ExpressionUUID->"059be930-e115-416f-94c3-65b95863d3cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253410, 5395, 500, 14, 30, "Input",ExpressionUUID->"9f6f87e7-27cf-4b76-8ef6-91aa3f20ade5"],
Cell[253913, 5411, 340, 8, 24, "Message",ExpressionUUID->"4895dee2-1486-487f-a38a-dc77aaaa7c90"],
Cell[254256, 5421, 1694, 47, 60, "Output",ExpressionUUID->"2beec26e-e53f-42e8-9af8-577d72a3c442"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[255999, 5474, 160, 3, 67, "Section",ExpressionUUID->"1123775e-cb4a-4e3d-8bd9-2566684252fd"],
Cell[CellGroupData[{
Cell[256184, 5481, 190, 3, 45, "Subsubsection",ExpressionUUID->"74c49c22-35e0-44bd-9343-26c9a570889b"],
Cell[256377, 5486, 231, 6, 30, "Text",ExpressionUUID->"7d125066-aa16-49c4-99d7-cb8772e0d7c1"],
Cell[CellGroupData[{
Cell[256633, 5496, 1507, 38, 180, "Input",ExpressionUUID->"e84fc74a-5679-4d4b-9b0e-348b1dbb7c6a"],
Cell[258143, 5536, 387, 9, 70, "Message",ExpressionUUID->"19470997-e036-47b3-bb78-95c6f9f3853a"],
Cell[258533, 5547, 389, 9, 70, "Message",ExpressionUUID->"3d57e56a-20ff-4504-9e06-67dc59b3668f"],
Cell[258925, 5558, 421, 9, 70, "Message",ExpressionUUID->"ddee86f9-9915-492d-a99c-567d4d5c4d5e"],
Cell[259349, 5569, 387, 9, 70, "Message",ExpressionUUID->"a3d08b6e-0134-4afb-9c50-c82d7c4f386b"],
Cell[259739, 5580, 388, 9, 70, "Message",ExpressionUUID->"66e3bccf-268b-481b-b63c-355c797ad205"],
Cell[260130, 5591, 421, 9, 70, "Message",ExpressionUUID->"f05aec3c-0bf6-45ed-b3a6-95fdb944e163"]
}, Open  ]],
Cell[260566, 5603, 1853, 45, 180, "Input",ExpressionUUID->"833979b0-559c-4832-8ddc-79760cd2f9ba"],
Cell[CellGroupData[{
Cell[262444, 5652, 118, 2, 32, "Input",ExpressionUUID->"55c28625-7aac-469b-85bc-13070f709222"],
Cell[262565, 5656, 1846, 55, 70, "Output",ExpressionUUID->"46919da1-395f-4f81-b87c-83a4345c0ded"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264448, 5716, 351, 6, 32, "Input",ExpressionUUID->"0f327f76-4261-4f6d-8f02-d9de5a67598c"],
Cell[264802, 5724, 1847, 55, 70, "Output",ExpressionUUID->"7c7f7ac2-d6ef-4cb9-aaef-d6d046e53413"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[266698, 5785, 274, 4, 37, "Subsubsection",ExpressionUUID->"ed11fadd-da27-44fa-8971-693b19711d91"],
Cell[266975, 5791, 1750, 39, 66, "Text",ExpressionUUID->"cd3234c9-a50f-4cdb-8cfc-5b0f207ddf0f"],
Cell[268728, 5832, 1205, 35, 87, "Input",ExpressionUUID->"89a7f557-2f12-47c9-9cd6-1b86e6ec1cde"],
Cell[CellGroupData[{
Cell[269958, 5871, 770, 14, 34, "Input",ExpressionUUID->"169bb051-39eb-4eb7-afbc-82b19fa93e13"],
Cell[270731, 5887, 341, 8, 24, "Message",ExpressionUUID->"e3c50140-80d0-4254-9dce-aebd4a5d7f93"],
Cell[271075, 5897, 24339, 684, 374, "Output",ExpressionUUID->"b438ade2-e485-4646-87bd-ad681799c0b6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

